<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>call_both</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>af52bf86ca778f5e7c883b4650e57b5c2</Anchor>
    <Abstract>Calls a function with corresponding pairs of elements from two containers.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>de/d29/group__alg.html</Path>
    <Anchor>gadf771b6c30c1652f5e47c159aa207635</Anchor>
    <Abstract>@concept Container This concept requires that a type has begin() and end() functions that return iter...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>abece1d4d390d99d8e09fd4af69a2fbbe</Anchor>
    <Abstract>Returns true if the container contains the specified value.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>aaadba14fd0d29744644d7b7f493de8b4</Anchor>
    <Abstract>Returns true if the specified predicate is met by at least one object in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>abc82be36d624dd5ff74d5c5c6d83dc49</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>af8f6e7ad2ccdea41cb984e267de75489</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or_default</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a3217b27912ee0e2fa8c813cb94fd762b</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or_null</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a05cb2e1dca0f5ac3ae6d62e2637011cf</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFromTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a10e91c9ff59681c278a000052a1fa3e0</Anchor>
    <Abstract>The same as transform() , except the output container is default constructed before being populated.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElementType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a668ddba847794e76c1c23adf6e5151e0</Anchor>
    <Abstract>Handy typedef for deducing the type of the objects in a Container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enumerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a15d7a77432737677bdb5b338019e9136</Anchor>
    <Abstract>This function allows structured bindings of iterators, similar to Python&apos;s enumerate() method.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>ab5e457cbac0ada12e2751eb9875737cc</Anchor>
    <Abstract>Fills the container with the specified value.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>adb39c954962d1234842cd6254024c6bf</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>ac1d765c729bcbd7bf3125b340e47b468</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IteratorType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a01247b0ad64fe9b7c2e98185802c83a4</Anchor>
    <Abstract>Typedef for the type returned by calling begin() or end() on a Container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a4b311c1b2b93d31e934bbd5d7c889f6c</Anchor>
    <Abstract>Returns the maximum value in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>ad33e2779fc85de056d7c5b44ed0ff73a</Anchor>
    <Abstract>Returns the maximum value in the container and its index in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a8dc90e2ff9dca1c9fb94a4a6dd99df3d</Anchor>
    <Abstract>Returns the minimum value in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a1de850177aecb59803a447fcace3c32e</Anchor>
    <Abstract>Returns the minimum value in the container and its index in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>ae43b092ef6517d3f45dba5dbd797e08d</Anchor>
    <Abstract>Counts the number of objects in the container that meet the specified predicate.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a7e1f6607be9dbe11a1bff9189773d067</Anchor>
    <Abstract>Reverses the objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shuffle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>aecb9a3cc56ac1cd6825b072a96bf721d</Anchor>
    <Abstract>Randomizes the order of the elements in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>ab5a5ae3c420f6742a12f6410fb18662d</Anchor>
    <Abstract>Counts the number of objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>afc754e81e500c59b3fa0b0234bfa4c45</Anchor>
    <Abstract>Sorts the objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a72037b43cffe35374402ecb6da4fb3d7</Anchor>
    <Abstract>Sorts the container using a custom comparator.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a4ce09ce3f581d6f1e6db8b3b3f4e97a6</Anchor>
    <Abstract>Populates output by calling func with each element of input in sequence.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga33390ddedd9f134e7c29d771f8bf823f</Anchor>
    <Abstract>Allocates the desired number of objects with the desired alignment.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>gab2c3c66b09b7249811b98dd5b406b78f</Anchor>
    <Abstract>Deallocates a pointer that was previously allocated with allocate_aligned() .</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Oscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::dsp::osc</Scope>
    </TokenIdentifier>
    <Path>d1/d0a/namespacelimes_1_1dsp_1_1osc.html</Path>
    <Anchor>aec519f4cfbe85e2c5bc56130bc6552fa</Anchor>
    <Abstract>Convenience typedef for the oscillator base class.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TODO_BEFORE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaba800051fa8705e8ec3606d38586f719</Anchor>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_day</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga8fca8688546ad996c2ff82a6e4c57e47</Anchor>
    <Abstract>Returns the day of the month on which this code was compiled, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga34b0f0856361da78df492e71b98b9561</Anchor>
    <Abstract>Returns the hour of compilation, as an integer, in 24-hour time.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_minute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga9ead6b8bccc46ee10c8be2fe667cdbe5</Anchor>
    <Abstract>Returns the minute of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaeed19bfa85af265a63bb31ffce8aae1b</Anchor>
    <Abstract>Returns the month of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_second</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gac7fd1d6865b1470c8b532a9ceaf16df7</Anchor>
    <Abstract>Returns the second of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga074fa34571f22ac34cc6415c814a0e4f</Anchor>
    <Abstract>Returns the year of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga074fa34571f22ac34cc6415c814a0e4f</Anchor>
    <Abstract>Returns the year of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaeed19bfa85af265a63bb31ffce8aae1b</Anchor>
    <Abstract>Returns the month of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_day</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga8fca8688546ad996c2ff82a6e4c57e47</Anchor>
    <Abstract>Returns the day of the month on which this code was compiled, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga34b0f0856361da78df492e71b98b9561</Anchor>
    <Abstract>Returns the hour of compilation, as an integer, in 24-hour time.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_minute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga9ead6b8bccc46ee10c8be2fe667cdbe5</Anchor>
    <Abstract>Returns the minute of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_second</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gac7fd1d6865b1470c8b532a9ceaf16df7</Anchor>
    <Abstract>Returns the second of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CURRENT_FUNCTION_NAME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d0/d00/compiler__defs_8h.html</Path>
    <Anchor>ace80ce41b99ab7b67eb6c8907e5b1980</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_FORCE_INLINE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga16865b999504e0621f83caecfec93bcc</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NEVER_INLINE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga7bb6ffa325bf2b2ba5d63d565a98aaff</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_PACK</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga4afff37dbba8d8055ea44c9631a50140</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_PURE_FUNCTION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gabed8f597c61ed37a221c9ae8dccf9e22</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_RESTRICT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga31004f8beb1bebe164df6461882dbe88</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_COMPILER_MESSAGE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga5577fed1a9e9f17571205093a090b490</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_COMPILER_WARNING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga2db625c65f80ef77802a5f764aebff50</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DISABLE_ALL_COMPILER_WARNINGS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac9aaa41f09c0bdac5928138eeb9adb24</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_REENABLE_ALL_COMPILER_WARNINGS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gad2a89476f519fd1fb29df89e88cb6a93</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllCountries</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>gae116ceac637605bca56517965824c5c2</Anchor>
    <Abstract>Returns a vector of all known Country objects.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga4bc4cb67166962cd71ae97868aa77935</Anchor>
    <Abstract>Returns the Country object representing the given ISO country code.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga3e029e65c56bc15ba7f56ea04fea45cb</Anchor>
    <Abstract>Returns the Country object representing the country with the given name.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>breakInDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga9a70cd79386a6723dbb63c9374d65b8d</Anchor>
    <Abstract>Attempts to break into the debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunningUnderDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga9d7abb01ca191df6a78dc4bfffae6f69</Anchor>
    <Abstract>Returns true if the calling process is running under a debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_DOUBLE_ONLY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga09e13e7bc904f98333229f65792654dc</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_HEADER_NAME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>gaf0f842cd586876ba9d1b4872b1bb4f08</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_SINGLE_ONLY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>gafc2bf4398dc8eb9ce229e5548eb4d17a</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d4/d2f/namespacelimes_1_1files.html</Path>
    <Anchor>a9b369c605632b7d321ac920bd06b57bc</Anchor>
    <Abstract>Convenience typedef for filesystem paths.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga7c4fa56ce61b8e28103b43f250ba851c</Anchor>
    <Abstract>This typedef evaluates to the result type returned by calling the given function with the given argum...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>call_once</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga423a59d89a77cb46a1e475eca33dd4e4</Anchor>
    <Abstract>Calls the function object exactly once throughout the entire life of the program.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consteval_invoke</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga677b37e66b96cec89ef70ad374f8aa2b</Anchor>
    <Abstract>Forces a given function to be executed at compile time.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>curry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga580272ce196b901393443435200a88dc</Anchor>
    <Abstract>Breaks down a function that takes multiple arguments into a series of functions that each take one ar...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>try_call</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga8ae3d6b9aba39513f038c0784215c739</Anchor>
    <Abstract>Executes a potentially-throwing function within a try-catch block, and returns false if an exception ...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga782eabbc5a0ba6fa51ac3e263d8cf2e6</Anchor>
    <Abstract>@concept Function This concept simply requires that an object is invocable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHasherForType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gac34cb84df8bc2dfec8c97755d632208a</Anchor>
    <Abstract>Creates an appropriate Hasher for the given Type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafaa42983a7f5867ce673f70cf08762ea</Anchor>
    <Abstract>Calculates a hash value for the input data using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga767adfd86b44e74eecded43fb40575b8</Anchor>
    <Abstract>Calculates a hash value for the input string using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignore_unused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc</Scope>
    </TokenIdentifier>
    <Path>d1/ded/group__misc.html</Path>
    <Anchor>gaf60f405ce0a2830962ec41c546be5bf7</Anchor>
    <Abstract>A utility function to silence unused variable warnings.</Abstract>
    <DeclaredIn>IgnoreUnused.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gad937197c36fe7b20d305edb703a8ac78</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gace85358102f38a5ae37e1f3cc4530512</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllKnownLanguages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga11ae481240c4d4d320de358bc46a9396</Anchor>
    <Abstract>Returns all known Language objects in Limes&apos;s internal database.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga746e6628a179acfa800d441c08c7bd66</Anchor>
    <Abstract>Returns the Language object representing the language with the given name.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguageForCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga382c8c09f879ffd9be0a24088b2ee5cb</Anchor>
    <Abstract>Returns the Language object representing the given ISO language code.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguagesForCountry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gadb7784b01623f7aa80324d1ea10b6856</Anchor>
    <Abstract>Returns a vector of Language objects representing languages that may be spoken in the given country.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_ASSERT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga06a4bfb323e9f05d2e51a72b21f40e0a</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_ASSERT_FALSE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga25f3c9bb0036097a480811b544f1eb34</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_UNREACHABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gad16dd0041c15feb8b68d38dc707f9595</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga854168fca1651443274024e9dfaa6cd3</Anchor>
    <Abstract>Returns the path to the current assertion log file, if any.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga0a55276632d2f9f646782b6e571bcfed</Anchor>
    <Abstract>Sets a filepath to be used to log assertion failures for the current process.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_FFTW</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga25d4ef2f45323ffac2004347580d93a3</Anchor>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga81a24c44587354cba913179bea459d2e</Anchor>
    <Abstract>Returns a string literal with the name of the FFT implementation being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gae0c1b95e40cf559713c5ff97b3a308a5</Anchor>
    <Abstract>Returns true if the fallback FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFFTW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga4b7ceaf6a5c2f8edb74c518833336589</Anchor>
    <Abstract>Returns true if the FFTW FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gac530869f4c65369b6e52efa3f4be9857</Anchor>
    <Abstract>Returns true if the Intel IPP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga78554bf05742bbff654330926a1d261e</Anchor>
    <Abstract>Returns true if the Apple vDSP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga1818e18e60c815c22566debbd4784424</Anchor>
    <Abstract>Enables or disables loading and saving of FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga90e49d17f247ad93ecfb427c7e2fcf9d</Anchor>
    <Abstract>Returns the directory being used to save and load FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga5173b41e9b489babbd62d5640c5b8cad</Anchor>
    <Abstract>Returns true if loading and saving of FFTW wisdom files is enabled.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga180339a8f455980abbb4b2799d153c55</Anchor>
    <Abstract>Sets the directory that FFTW wisdom files will be read from and saved to.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFFTW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga4b7ceaf6a5c2f8edb74c518833336589</Anchor>
    <Abstract>Returns true if the FFTW FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga78554bf05742bbff654330926a1d261e</Anchor>
    <Abstract>Returns true if the Apple vDSP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gac530869f4c65369b6e52efa3f4be9857</Anchor>
    <Abstract>Returns true if the Intel IPP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gae0c1b95e40cf559713c5ff97b3a308a5</Anchor>
    <Abstract>Returns true if the fallback FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga81a24c44587354cba913179bea459d2e</Anchor>
    <Abstract>Returns a string literal with the name of the FFT implementation being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga180339a8f455980abbb4b2799d153c55</Anchor>
    <Abstract>Sets the directory that FFTW wisdom files will be read from and saved to.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga90e49d17f247ad93ecfb427c7e2fcf9d</Anchor>
    <Abstract>Returns the directory being used to save and load FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga1818e18e60c815c22566debbd4784424</Anchor>
    <Abstract>Enables or disables loading and saving of FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga5173b41e9b489babbd62d5640c5b8cad</Anchor>
    <Abstract>Returns true if loading and saving of FFTW wisdom files is enabled.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_BEGIN_NAMESPACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>da/d07/group__limes__core.html</Path>
    <Anchor>ga41a58aa43a02cea437cc98ee291c3a2c</Anchor>
    <DeclaredIn>limes_namespace.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_END_NAMESPACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>da/d07/group__limes__core.html</Path>
    <Anchor>ga7ea42681efe61fc798589260810ad784</Anchor>
    <DeclaredIn>limes_namespace.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_IPP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaaf4e6c2cb5282672fc67747a8e1f550f</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_MIPP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga70b144652ef1412e204a8d4e9c66fef8</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_POMMIER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gacc1d8c1c278a0ac62eef8c5595503a5a</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_VDSP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga5798e2e410bb607a38b777b0f8e7fafa</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga9049800737a310e19ffb9b5bf1cafce1</Anchor>
    <Abstract>Simultaneously computes the sin and cosine of every value in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>ga76033b51d3e45fcd98844915fa0335c7</Anchor>
    <Abstract>Replaces each value in the vector with its reciprocal.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>gad59ae212688e3dace7b59956d495ba95</Anchor>
    <Abstract>Writes the reciprocal of each value in the input vector to an output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga60449a2c2fcccfd64da4d82269008c45</Anchor>
    <Abstract>Adds a constant to every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga86ba6050c1a30aab9df98a440a89df97</Anchor>
    <Abstract>Element-wise addition of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gacb9372bb6d3df53194c1d59c7841812a</Anchor>
    <Abstract>Element-wise addition of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga8ed529a71171ca3c01575613f5199875</Anchor>
    <Abstract>Adds a constant to every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gadf36066325d4106ebdf2e9e370df564b</Anchor>
    <Abstract>Subtracts a constant from every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga919cb58e32da405815028c1c9354af39</Anchor>
    <Abstract>Element-wise subtraction of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga689793c924b67cb3d6de4a3db2e9a2b3</Anchor>
    <Abstract>Element-wise subtraction of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gac5d700aec8e07ca924c9e7408e0efaf1</Anchor>
    <Abstract>Subtracts a constant from every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga34e45f99109fbc79df03000342b289f8</Anchor>
    <Abstract>Subtracts every element of a vector from a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga67048e7003180b0fe875f378b2522303</Anchor>
    <Abstract>Subtracts every element of a vector from a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gafdef30f85db1327afb1724684e5d97f5</Anchor>
    <Abstract>Computes the dot product of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gabd3df806285b3d0c33456b1d368bb477</Anchor>
    <Abstract>Multiplies every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga4ac6ad5eb22722a26a3396a99f71c2d6</Anchor>
    <Abstract>Element-wise multiplication of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga75f9729fdf833998a58bd8c7f2326eef</Anchor>
    <Abstract>Element-wise multiplication of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gae392c30e1ef8cd4a9c8e60262a3558f3</Anchor>
    <Abstract>Multiplies every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga58ac79669a26bbf15f119256fa5ef436</Anchor>
    <Abstract>Divides every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gabe542f93a2801dea705a30b99bd25a25</Anchor>
    <Abstract>Element-wise division of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga52fc43a5406166658185815c51a0ee76</Anchor>
    <Abstract>Element-wise division of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gab280f7562da503a42c44fe9392cb9767</Anchor>
    <Abstract>Divides every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga691e6b1580a7890b72548be6ab6b1bbf</Anchor>
    <Abstract>Divides a constant by every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gabc72baaae96c9091a60068bcba0e43db</Anchor>
    <Abstract>Divides a constant by every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gae2c726a3e47d1d115372995a29ef8113</Anchor>
    <Abstract>Replaces every element in the vector with its cube root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaf778cc37d99927fadef43a3642ba5a7e</Anchor>
    <Abstract>Writes the cube root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaaf5b62ab6f9f2a9e0a6cd9f2e570cc62</Anchor>
    <Abstract>Replaces every element in the vector with its inverse square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga8d562f7238ee87445ba97d1e41e383f9</Anchor>
    <Abstract>Writes the inverse square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga36096730723a4c8117411c2b6121b19b</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gae0231e59ae96493675dbddd45e700dac</Anchor>
    <Abstract>Squares every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaf6adb1924912cd4c13c530564ef6c080</Anchor>
    <Abstract>Replaces every element in the vector with its square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga33dc288835a9d20d0d7382b2814b6ade</Anchor>
    <Abstract>Writes the square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga65a93f93fa2d217b45877059df11ebd2</Anchor>
    <Abstract>Deinterleaves single channel data into multiple output vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga2a959fee236c8bf94a262cfe20e3b4e2</Anchor>
    <Abstract>Interleaves multichannel data into a single output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gabe6c647b503d8802269ec42669cf9a5c</Anchor>
    <Abstract>Reverses a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga2e851b2ff584653f12d48e24bf686c0e</Anchor>
    <Abstract>Writes a reversed version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga17d1aec7a6eab65eb33270a90035d9ac</Anchor>
    <Abstract>Sorts a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga32a840e01318c6d1852b850898b39a33</Anchor>
    <Abstract>Writes a sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga40b6ac3b989d84ec70ec711fa449878d</Anchor>
    <Abstract>Sorts a vector in reverse order in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga7233fe3d1c32169b8b63f30c38b7de53</Anchor>
    <Abstract>Writes a reverse sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gac7a9c95727a80ce5c0217bd516a53157</Anchor>
    <Abstract>Replaces each element of the vector with its absolute value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>absAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga528118744285ceb133deeb22e563cb87</Anchor>
    <Abstract>Writes the absolute value of each element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga7f884630e966e6f1334b8d45cf7fe095</Anchor>
    <Abstract>Clips every element of a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gabef49fdbbbd7a708b516a17ac64b082e</Anchor>
    <Abstract>Writes a clipped version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaeb889ab16cdedada6bae279ab240a31a</Anchor>
    <Abstract>Returns the mean of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga68042b2fd340e85fb736873eed2e86c5</Anchor>
    <Abstract>Flips the sign of every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negateAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga56d201839bc0df98af2a9138905182bf</Anchor>
    <Abstract>Writes the negation of every element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>standard_deviation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1f52fc0dff7b83c4a1ad9249cdeb2e30</Anchor>
    <Abstract>Returns the standard deviation of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gac51ed11b409ef0d0b44a3a1ab9b451e2</Anchor>
    <Abstract>Returns the sum of all the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsVectorExtremaInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gabfe59a0103582ec600271425bac5e52f</Anchor>
    <Abstract>Calculates the values and positions of the absolute value extrema in the vector and returns them in a...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVectorExtremaInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga62ccd0e04389ca41efbdd09bcfb03f82</Anchor>
    <Abstract>Calculates the values and positions of the extrema in the vector and returns them in a single VectorE...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gac262f0759d4e94c6e76de859b12f9c46</Anchor>
    <Abstract>Returns the maximum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga24e8b5481f2b40e94118c67e90599aee</Anchor>
    <Abstract>Finds the maximum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gafd0924df2faf96f9448444798a159bd2</Anchor>
    <Abstract>Returns the maximum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga2f0d919fa71affaef9c11a07b9c8d95f</Anchor>
    <Abstract>Finds the maximum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gabbf8da57c56d80d41f2ff2ee1288aae4</Anchor>
    <Abstract>Returns the minimum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga1d361cefebf0a3eee74ab3f1795bd519</Anchor>
    <Abstract>Finds the minimum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga076a93c161e47ba59dcc6697d2f0f04a</Anchor>
    <Abstract>Returns the minimum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gae132e0ecc8976b10635305cdcfb212a1</Anchor>
    <Abstract>Finds the minimum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga5dfa502a51b88fd534a9fbd046535ef1</Anchor>
    <Abstract>Finds both the minimum and maximum values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gad33d7b2bbe05c35fb38bbf8d9f44172c</Anchor>
    <Abstract>Finds the minimum and maximum values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga00d1befd3a8ddb3da81e6abe9c945ddb</Anchor>
    <Abstract>Finds both the minimum and maximum absolute values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf0b51c08a149db6c6da5ec9427b478c2</Anchor>
    <Abstract>Finds the minimum and maximum absolute values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf8f8442017ff82121d88a85eae95a26a</Anchor>
    <Abstract>Returns the difference between the maximum and minimum values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rangeAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf0b23ae2dd2601cbb3010e2f594ace2f</Anchor>
    <Abstract>Returns the difference between the maximum and minimum absolute values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga1b65e7a322bc4705e41932a91c4529b4</Anchor>
    <Abstract>Replaces every value in the vector with its arcsine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gaf1b7eb2d28dcd5699803f2ad97d16e7f</Anchor>
    <Abstract>Writes the arcsine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga45116b911f429728c6f8bee3ad1b1971</Anchor>
    <Abstract>Replaces every value in the vector with its sine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gae00ae0aeff4947e9f77671bb3ab2f7c2</Anchor>
    <Abstract>Writes the sine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga286b9aa43f1edb6939189c871096dc35</Anchor>
    <Abstract>Replaces every value in the vector with its arccosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga38b8a89b49712f47451c4ccfb74aa3af</Anchor>
    <Abstract>Writes the arccosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gaed15c01d37c58ce119a59a5c936d996d</Anchor>
    <Abstract>Replaces every value in the vector with its cosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga0a1ae7b7594a0fd306b1d405d6b6946e</Anchor>
    <Abstract>Writes the cosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga036475cd9def5f3729f68f7bc80368db</Anchor>
    <Abstract>Replaces every value in the vector with its arctangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gaf1b508a20ba1939a7b2b05fb69671dd1</Anchor>
    <Abstract>Writes the arctangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga503dc331b5e71be46de62e644f5226bd</Anchor>
    <Abstract>Replaces every value in the vector with its tangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gad96c0eb23c8ccf5b85007268c465798f</Anchor>
    <Abstract>Writes the tangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga44c3a85ee486714fa2a473db2d135a53</Anchor>
    <Abstract>Replaces each value in the vector with its base 10 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga941e785c7fbfb826ab9e6a3a5f9a4435</Anchor>
    <Abstract>Writes the base 10 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga6e9cb29784ae6937dd52a74bf93776be</Anchor>
    <Abstract>Replaces each value in the vector with its base 2 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga03e30d364a819aebb57a4d9251329dc4</Anchor>
    <Abstract>Writes the base 2 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga633a8cf6da2e8819f6faec6b419f960d</Anchor>
    <Abstract>Replaces each value in the vector with its natural logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>natAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga30bc27d9e0c5deffdd1a271626fcb64b</Anchor>
    <Abstract>Writes the natural logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gabba158b4cc8009a8c949cd4a9702088a</Anchor>
    <Abstract>Replaces each value in the vector with eˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga073b588e516144b573c4cabb422a7763</Anchor>
    <Abstract>For each value in the input vector, writes eˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gaf0fd2a71a838d6a84a2443b28a900b66</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>powAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga71dfbdbafe7bafbb796fbbdbe92626d6</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector,...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga36042279794ca6013c9e60daaa76f127</Anchor>
    <Abstract>Replaces each value in the vector with 2ˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twoAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga5d1fe0a722eb3155880312bbed489568</Anchor>
    <Abstract>For each value in the input vector, writes 2ˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaa773c465be209a3d097f4cb84e14608f</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRampAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga2f4b1df0215c251ab3bfacadf866248e</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countZeroCrossings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaf1fecbdc1782c6e9bd88462af4ff9756</Anchor>
    <Abstract>Counts the number of zero crossings present in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga3e6d037ecbe0c6c19c6c6996191a0b4f</Anchor>
    <Abstract>Generates a ramp of samples, starting from startValue and incrementing by a consistent value until en...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gae537a24e7cc8fc0d3d1b866246def49e</Anchor>
    <Abstract>Mixes together multiple channels of audio into one output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga0cc5e08c603866a3f94ceecd3049d2fd</Anchor>
    <Abstract>Calculates the RMS value of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gaf91448dab1ddfb2b06574b6075d08f68</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackmanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gada4ae9f6fde3f6e2a1984422f0777bcb</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga9653fec6efe14cf3e47ed5e5fef8c2b7</Anchor>
    <Abstract>Generates a Blackman window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga2ce02522c229a5e162c22a6522234763</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHammAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gad630209052fb19b577fded44e8be2ce9</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector, writing the output samples to another v...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga635249e6c502b055323c6128e647c3dd</Anchor>
    <Abstract>Generates a Hamm (Hamming) window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga7b30a3bfef13376f44e1af5bc5e84093</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanningAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>gaf634fc9ec69ed5e8b866e4311770ca7d</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga957e9d798b149b0f9c0ad82bf8e80f0a</Anchor>
    <Abstract>Generates a Hanning window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianInterleavedToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga161341fe747f7daf465acef57121f98a</Anchor>
    <Abstract>Converts interleaved cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga8b3712f71181d5d3ff6655a5b426c8d0</Anchor>
    <Abstract>Converts cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga8535fe5a1db17d0b82dc95786c2923a1</Anchor>
    <Abstract>Converts cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catesianInterleavedToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gaeb41bbfaa7dd86d4bef839286cffbe48</Anchor>
    <Abstract>Converts interleaved cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga456451f252f8df15676aa469a757f14d</Anchor>
    <Abstract>Converts polar data to cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga0379acccbc8212ded5043264b3653404</Anchor>
    <Abstract>Converts polar data to interleaved cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areDenormalsDisabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>ga663567cc8416a778e37e0acab1c9c0fb</Anchor>
    <Abstract>Returns true if denormalized numbers are currently enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableDenormalisedNumberSupport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>ga4c0afe0438d776457c73d9d748bbb333</Anchor>
    <Abstract>Controls whether denormalized numbers are enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlushToZeroMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga7f9b57bae55e687f13d4c3c002eed033</Anchor>
    <Abstract>Controls whether flush to zero mode is enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlushToZeroEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga22832f8702188210f2bb025c1a70e868</Anchor>
    <Abstract>Returns true if flush to zero mode is enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gaf09a8639bf3a7399eb31d7d5b0592de8</Anchor>
    <Abstract>Returns a string literal with the name of the implementation being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gaeb6a0efe84a2602c997553c1b95cfc71</Anchor>
    <Abstract>Returns true if the fallback implementation is being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga2aa7f7f2dc9cb23e38a11e2ecfaa74a7</Anchor>
    <Abstract>Returns true if the implementation being used is Intel IPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingMIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga978afc0d4dcde7aedf2bacbc6cf86b29</Anchor>
    <Abstract>Returns true if the implementation being used is MIPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingPommierExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga6ad60ba3c423b9b1a06c2756d36a7c06</Anchor>
    <Abstract>Returns true if the Pommier SIMD extension functions are being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gad8a841ef1d29d1d7f4dd08f5892e1930</Anchor>
    <Abstract>Returns true if the implementation being used is Apple vDSP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>ga76033b51d3e45fcd98844915fa0335c7</Anchor>
    <Abstract>Replaces each value in the vector with its reciprocal.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>gad59ae212688e3dace7b59956d495ba95</Anchor>
    <Abstract>Writes the reciprocal of each value in the input vector to an output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga60449a2c2fcccfd64da4d82269008c45</Anchor>
    <Abstract>Adds a constant to every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga86ba6050c1a30aab9df98a440a89df97</Anchor>
    <Abstract>Element-wise addition of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga8ed529a71171ca3c01575613f5199875</Anchor>
    <Abstract>Adds a constant to every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gacb9372bb6d3df53194c1d59c7841812a</Anchor>
    <Abstract>Element-wise addition of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gadf36066325d4106ebdf2e9e370df564b</Anchor>
    <Abstract>Subtracts a constant from every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga919cb58e32da405815028c1c9354af39</Anchor>
    <Abstract>Element-wise subtraction of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gac5d700aec8e07ca924c9e7408e0efaf1</Anchor>
    <Abstract>Subtracts a constant from every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga689793c924b67cb3d6de4a3db2e9a2b3</Anchor>
    <Abstract>Element-wise subtraction of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga34e45f99109fbc79df03000342b289f8</Anchor>
    <Abstract>Subtracts every element of a vector from a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga67048e7003180b0fe875f378b2522303</Anchor>
    <Abstract>Subtracts every element of a vector from a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gabd3df806285b3d0c33456b1d368bb477</Anchor>
    <Abstract>Multiplies every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga4ac6ad5eb22722a26a3396a99f71c2d6</Anchor>
    <Abstract>Element-wise multiplication of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gae392c30e1ef8cd4a9c8e60262a3558f3</Anchor>
    <Abstract>Multiplies every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga75f9729fdf833998a58bd8c7f2326eef</Anchor>
    <Abstract>Element-wise multiplication of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gafdef30f85db1327afb1724684e5d97f5</Anchor>
    <Abstract>Computes the dot product of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga58ac79669a26bbf15f119256fa5ef436</Anchor>
    <Abstract>Divides every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gabe542f93a2801dea705a30b99bd25a25</Anchor>
    <Abstract>Element-wise division of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gab280f7562da503a42c44fe9392cb9767</Anchor>
    <Abstract>Divides every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga52fc43a5406166658185815c51a0ee76</Anchor>
    <Abstract>Element-wise division of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga691e6b1580a7890b72548be6ab6b1bbf</Anchor>
    <Abstract>Divides a constant by every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gabc72baaae96c9091a60068bcba0e43db</Anchor>
    <Abstract>Divides a constant by every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga36096730723a4c8117411c2b6121b19b</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gae0231e59ae96493675dbddd45e700dac</Anchor>
    <Abstract>Squares every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaf6adb1924912cd4c13c530564ef6c080</Anchor>
    <Abstract>Replaces every element in the vector with its square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga33dc288835a9d20d0d7382b2814b6ade</Anchor>
    <Abstract>Writes the square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaaf5b62ab6f9f2a9e0a6cd9f2e570cc62</Anchor>
    <Abstract>Replaces every element in the vector with its inverse square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga8d562f7238ee87445ba97d1e41e383f9</Anchor>
    <Abstract>Writes the inverse square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gae2c726a3e47d1d115372995a29ef8113</Anchor>
    <Abstract>Replaces every element in the vector with its cube root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaf778cc37d99927fadef43a3642ba5a7e</Anchor>
    <Abstract>Writes the cube root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gabe6c647b503d8802269ec42669cf9a5c</Anchor>
    <Abstract>Reverses a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga2e851b2ff584653f12d48e24bf686c0e</Anchor>
    <Abstract>Writes a reversed version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga17d1aec7a6eab65eb33270a90035d9ac</Anchor>
    <Abstract>Sorts a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga32a840e01318c6d1852b850898b39a33</Anchor>
    <Abstract>Writes a sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga40b6ac3b989d84ec70ec711fa449878d</Anchor>
    <Abstract>Sorts a vector in reverse order in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga7233fe3d1c32169b8b63f30c38b7de53</Anchor>
    <Abstract>Writes a reverse sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga2a959fee236c8bf94a262cfe20e3b4e2</Anchor>
    <Abstract>Interleaves multichannel data into a single output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga65a93f93fa2d217b45877059df11ebd2</Anchor>
    <Abstract>Deinterleaves single channel data into multiple output vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gac7a9c95727a80ce5c0217bd516a53157</Anchor>
    <Abstract>Replaces each element of the vector with its absolute value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>absAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga528118744285ceb133deeb22e563cb87</Anchor>
    <Abstract>Writes the absolute value of each element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga68042b2fd340e85fb736873eed2e86c5</Anchor>
    <Abstract>Flips the sign of every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negateAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga56d201839bc0df98af2a9138905182bf</Anchor>
    <Abstract>Writes the negation of every element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga7f884630e966e6f1334b8d45cf7fe095</Anchor>
    <Abstract>Clips every element of a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gabef49fdbbbd7a708b516a17ac64b082e</Anchor>
    <Abstract>Writes a clipped version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gac51ed11b409ef0d0b44a3a1ab9b451e2</Anchor>
    <Abstract>Returns the sum of all the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaeb889ab16cdedada6bae279ab240a31a</Anchor>
    <Abstract>Returns the mean of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>standard_deviation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1f52fc0dff7b83c4a1ad9249cdeb2e30</Anchor>
    <Abstract>Returns the standard deviation of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gac262f0759d4e94c6e76de859b12f9c46</Anchor>
    <Abstract>Returns the maximum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga24e8b5481f2b40e94118c67e90599aee</Anchor>
    <Abstract>Finds the maximum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gafd0924df2faf96f9448444798a159bd2</Anchor>
    <Abstract>Returns the maximum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga2f0d919fa71affaef9c11a07b9c8d95f</Anchor>
    <Abstract>Finds the maximum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gabbf8da57c56d80d41f2ff2ee1288aae4</Anchor>
    <Abstract>Returns the minimum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga1d361cefebf0a3eee74ab3f1795bd519</Anchor>
    <Abstract>Finds the minimum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga076a93c161e47ba59dcc6697d2f0f04a</Anchor>
    <Abstract>Returns the minimum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gae132e0ecc8976b10635305cdcfb212a1</Anchor>
    <Abstract>Finds the minimum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga5dfa502a51b88fd534a9fbd046535ef1</Anchor>
    <Abstract>Finds both the minimum and maximum values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gad33d7b2bbe05c35fb38bbf8d9f44172c</Anchor>
    <Abstract>Finds the minimum and maximum values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga00d1befd3a8ddb3da81e6abe9c945ddb</Anchor>
    <Abstract>Finds both the minimum and maximum absolute values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf0b51c08a149db6c6da5ec9427b478c2</Anchor>
    <Abstract>Finds the minimum and maximum absolute values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVectorExtremaInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga62ccd0e04389ca41efbdd09bcfb03f82</Anchor>
    <Abstract>Calculates the values and positions of the extrema in the vector and returns them in a single VectorE...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsVectorExtremaInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gabfe59a0103582ec600271425bac5e52f</Anchor>
    <Abstract>Calculates the values and positions of the absolute value extrema in the vector and returns them in a...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf8f8442017ff82121d88a85eae95a26a</Anchor>
    <Abstract>Returns the difference between the maximum and minimum values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rangeAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf0b23ae2dd2601cbb3010e2f594ace2f</Anchor>
    <Abstract>Returns the difference between the maximum and minimum absolute values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga45116b911f429728c6f8bee3ad1b1971</Anchor>
    <Abstract>Replaces every value in the vector with its sine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gae00ae0aeff4947e9f77671bb3ab2f7c2</Anchor>
    <Abstract>Writes the sine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga1b65e7a322bc4705e41932a91c4529b4</Anchor>
    <Abstract>Replaces every value in the vector with its arcsine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gaf1b7eb2d28dcd5699803f2ad97d16e7f</Anchor>
    <Abstract>Writes the arcsine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gaed15c01d37c58ce119a59a5c936d996d</Anchor>
    <Abstract>Replaces every value in the vector with its cosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga0a1ae7b7594a0fd306b1d405d6b6946e</Anchor>
    <Abstract>Writes the cosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga286b9aa43f1edb6939189c871096dc35</Anchor>
    <Abstract>Replaces every value in the vector with its arccosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga38b8a89b49712f47451c4ccfb74aa3af</Anchor>
    <Abstract>Writes the arccosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga503dc331b5e71be46de62e644f5226bd</Anchor>
    <Abstract>Replaces every value in the vector with its tangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gad96c0eb23c8ccf5b85007268c465798f</Anchor>
    <Abstract>Writes the tangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga036475cd9def5f3729f68f7bc80368db</Anchor>
    <Abstract>Replaces every value in the vector with its arctangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gaf1b508a20ba1939a7b2b05fb69671dd1</Anchor>
    <Abstract>Writes the arctangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gae537a24e7cc8fc0d3d1b866246def49e</Anchor>
    <Abstract>Mixes together multiple channels of audio into one output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga0cc5e08c603866a3f94ceecd3049d2fd</Anchor>
    <Abstract>Calculates the RMS value of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countZeroCrossings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaf1fecbdc1782c6e9bd88462af4ff9756</Anchor>
    <Abstract>Counts the number of zero crossings present in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga3e6d037ecbe0c6c19c6c6996191a0b4f</Anchor>
    <Abstract>Generates a ramp of samples, starting from startValue and incrementing by a consistent value until en...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaa773c465be209a3d097f4cb84e14608f</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRampAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga2f4b1df0215c251ab3bfacadf866248e</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga456451f252f8df15676aa469a757f14d</Anchor>
    <Abstract>Converts polar data to cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga0379acccbc8212ded5043264b3653404</Anchor>
    <Abstract>Converts polar data to interleaved cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga8535fe5a1db17d0b82dc95786c2923a1</Anchor>
    <Abstract>Converts cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catesianInterleavedToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gaeb41bbfaa7dd86d4bef839286cffbe48</Anchor>
    <Abstract>Converts interleaved cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga8b3712f71181d5d3ff6655a5b426c8d0</Anchor>
    <Abstract>Converts cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianInterleavedToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga161341fe747f7daf465acef57121f98a</Anchor>
    <Abstract>Converts interleaved cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableDenormalisedNumberSupport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>ga4c0afe0438d776457c73d9d748bbb333</Anchor>
    <Abstract>Controls whether denormalized numbers are enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areDenormalsDisabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>ga663567cc8416a778e37e0acab1c9c0fb</Anchor>
    <Abstract>Returns true if denormalized numbers are currently enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlushToZeroMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga7f9b57bae55e687f13d4c3c002eed033</Anchor>
    <Abstract>Controls whether flush to zero mode is enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlushToZeroEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga22832f8702188210f2bb025c1a70e868</Anchor>
    <Abstract>Returns true if flush to zero mode is enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gad8a841ef1d29d1d7f4dd08f5892e1930</Anchor>
    <Abstract>Returns true if the implementation being used is Apple vDSP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga2aa7f7f2dc9cb23e38a11e2ecfaa74a7</Anchor>
    <Abstract>Returns true if the implementation being used is Intel IPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingMIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga978afc0d4dcde7aedf2bacbc6cf86b29</Anchor>
    <Abstract>Returns true if the implementation being used is MIPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gaeb6a0efe84a2602c997553c1b95cfc71</Anchor>
    <Abstract>Returns true if the fallback implementation is being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gaf09a8639bf3a7399eb31d7d5b0592de8</Anchor>
    <Abstract>Returns a string literal with the name of the implementation being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingPommierExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga6ad60ba3c423b9b1a06c2756d36a7c06</Anchor>
    <Abstract>Returns true if the Pommier SIMD extension functions are being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gabba158b4cc8009a8c949cd4a9702088a</Anchor>
    <Abstract>Replaces each value in the vector with eˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga073b588e516144b573c4cabb422a7763</Anchor>
    <Abstract>For each value in the input vector, writes eˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga36042279794ca6013c9e60daaa76f127</Anchor>
    <Abstract>Replaces each value in the vector with 2ˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twoAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga5d1fe0a722eb3155880312bbed489568</Anchor>
    <Abstract>For each value in the input vector, writes 2ˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gaf0fd2a71a838d6a84a2443b28a900b66</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>powAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga71dfbdbafe7bafbb796fbbdbe92626d6</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector,...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga633a8cf6da2e8819f6faec6b419f960d</Anchor>
    <Abstract>Replaces each value in the vector with its natural logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>natAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga30bc27d9e0c5deffdd1a271626fcb64b</Anchor>
    <Abstract>Writes the natural logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga6e9cb29784ae6937dd52a74bf93776be</Anchor>
    <Abstract>Replaces each value in the vector with its base 2 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga03e30d364a819aebb57a4d9251329dc4</Anchor>
    <Abstract>Writes the base 2 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga44c3a85ee486714fa2a473db2d135a53</Anchor>
    <Abstract>Replaces each value in the vector with its base 10 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga941e785c7fbfb826ab9e6a3a5f9a4435</Anchor>
    <Abstract>Writes the base 10 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga9653fec6efe14cf3e47ed5e5fef8c2b7</Anchor>
    <Abstract>Generates a Blackman window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gaf91448dab1ddfb2b06574b6075d08f68</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackmanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gada4ae9f6fde3f6e2a1984422f0777bcb</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga635249e6c502b055323c6128e647c3dd</Anchor>
    <Abstract>Generates a Hamm (Hamming) window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga2ce02522c229a5e162c22a6522234763</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHammAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gad630209052fb19b577fded44e8be2ce9</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector, writing the output samples to another v...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga957e9d798b149b0f9c0ad82bf8e80f0a</Anchor>
    <Abstract>Generates a Hanning window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga7b30a3bfef13376f44e1af5bc5e84093</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanningAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>gaf634fc9ec69ed5e8b866e4311770ca7d</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga9cc2c9b4c12bd3574570e8dc7ff35da3</Anchor>
    <Abstract>Fills the vector with zeroes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gade886b73a7b5b6d7b7629916960dba27</Anchor>
    <Abstract>Copies from one vector to another.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaa2c8ff649809e33cdfc1255636f2f51e</Anchor>
    <Abstract>Fills the vector with the specified value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga5b711a2ab615fd16769f73e49e07488a</Anchor>
    <Abstract>@concept Integral Any integral type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaef2ce37a512c1f570dfa7aea7c9e6c14</Anchor>
    <Abstract>@concept Scalar Any scalar type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gae85ce01a5c9fd8d495c763c7f9c977f3</Anchor>
    <Abstract>Swaps the elements of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga5c6e376478e32b4670c094f6da111d2d</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>gadd908a9750954d0716c185c4a1c80331</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector, writing the output sample...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga6a128c92c17b5eeded996d16c69dff61</Anchor>
    <Abstract>Generates a window function of the desired type , writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blackman_alpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math::constants</Scope>
    </TokenIdentifier>
    <Path>d4/d22/namespacelimes_1_1math_1_1constants.html</Path>
    <Anchor>acd2c4e25f4779b0adbaf2d0bec4c8130</Anchor>
    <Abstract>The alpha value used for computing default Blackman filters.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>half_pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math::constants</Scope>
    </TokenIdentifier>
    <Path>d4/d22/namespacelimes_1_1math_1_1constants.html</Path>
    <Anchor>a38913333455736bdae51b03d7e8640bb</Anchor>
    <Abstract>One-half pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math::constants</Scope>
    </TokenIdentifier>
    <Path>d4/d22/namespacelimes_1_1math_1_1constants.html</Path>
    <Anchor>a3ddbfac5c33f6dcad2ecb4b9d1ba4969</Anchor>
    <Abstract>Pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two_pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math::constants</Scope>
    </TokenIdentifier>
    <Path>d4/d22/namespacelimes_1_1math_1_1constants.html</Path>
    <Anchor>aea8ef708548f3ac24fccd3d686be83c2</Anchor>
    <Abstract>Two pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga514ee773c330a0ff7d19286b13f83b53</Anchor>
    <Abstract>A constexpr-enabled absolute value function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factorial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga5d2f2720c191268e9a17d15e0b25ff3c</Anchor>
    <Abstract>Computes the factorial of the number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqFromPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaacee5ce0fef613d9f08eb4ec86bfe056</Anchor>
    <Abstract>Returns the frequency in Hz with a given period in samples at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqToMidi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga79c120b8a72137dd368c391208d82240</Anchor>
    <Abstract>Converts a frequency in Hz to a MIDI note.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga78b6e7e3ca15b70ce958d0f028d607ed</Anchor>
    <Abstract>@concept Integral An integral type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDivisibleBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga77464df61c396b206d8357c5f9884b5b</Anchor>
    <Abstract>Returns true if the number is divisible by the divisor with no remainder.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPowerOf2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaf28ea8c4fcd46ef3a5423f212b1bcc1e</Anchor>
    <Abstract>Returns true if val is 2^something.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga950e07ddb605b6e7721142a145bec24c</Anchor>
    <Abstract>Returns true if the number is a prime number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga7fa3c07491e7409e7f695a70960d4579</Anchor>
    <Abstract>A constexpr-enabled clipping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8e1376561c18c5700f25bf9d16fa5f3a</Anchor>
    <Abstract>A constexpr-enabled mapping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga340ba1fa93e3ff5987d94fd11d07b39a</Anchor>
    <Abstract>A constexpr-enabled max function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>middleOfThree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga82cc1c47568221dc63727ebe3686d60d</Anchor>
    <Abstract>Returns the median of three values.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midiToFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga958bfa906aac63346cd915d6b5a08698</Anchor>
    <Abstract>Converts a MIDI note to a frequency in Hz.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gada391234ea82372c9e005ed208f2db13</Anchor>
    <Abstract>A constexpr-enabled min function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>msToSamps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga47e9b2f032b32583e46d7e312a576222</Anchor>
    <Abstract>Converts a number of milliseconds to the closest integer number of samples at the specified samplerat...</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga005b096167e7e48847b69c7f1f350915</Anchor>
    <Abstract>A constexpr-enabled negation function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberIsEven</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaa5495769808eff098130215ee85fcf2d</Anchor>
    <Abstract>Returns true if the number is evenly divisible by 2.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>periodInSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaad252ebdd65713b59abdbe0f5f2d7bd9</Anchor>
    <Abstract>Returns the period in samples of a frequency at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>power</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8d26141199f013e584e33b0cf04bd0b8</Anchor>
    <Abstract>A constexpr-enabled power function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>round</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6cc3bd33ef5ff0347c79ba7cc8adec36</Anchor>
    <Abstract>A constexpr-enabled rounding function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampsToMs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gab8a73b8ec5cd084065838b8d2b860874</Anchor>
    <Abstract>Converts a number of samples to milliseconds at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga96017616aa33e280ac4559d327e11889</Anchor>
    <Abstract>@concept Scalar A scalar type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf04b8b325b6d8808cfa8ab662c415563</Anchor>
    <Abstract>Calculates an MD5 hash for the given data.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga1ad1ee42c5a8c1f5b7bbab3753b842ed</Anchor>
    <Abstract>Calculates an MD5 hash for the given string.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga0132c8d23057886215fdbafa776d4aea</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gab9baf0955c1a4114a492038c6628dc8a</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseRootTwo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d7b/group__limes__audio.html</Path>
    <Anchor>gaa9749fccbd7e845ab3798df0fb38bd14</Anchor>
    <Abstract>An inverse root 2 constant, useful for default filter Q values.</Abstract>
    <DeclaredIn>limes_audio/util/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d7b/group__limes__audio.html</Path>
    <Anchor>ga0f08d1dca089a2e844bd4e709588b58f</Anchor>
    <Abstract>@concept Sample Either float or double .</Abstract>
    <DeclaredIn>limes_audio/util/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dirSeparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gabc304be514f1c64345214c2c50be5201</Anchor>
    <Abstract>Returns the platform&apos;s preferred separator: \ on Windows, and / everywhere else.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filesystemIsCaseSensitive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga88305d0fe386e29850d7a3765b4040b6</Anchor>
    <Abstract>Returns true if the current platform&apos;s filesystem is case-sensitive.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAvailableSpaceOnFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gaa5f80187a21aef53ecbe7fd55731a326</Anchor>
    <Abstract>Returns the available space on the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSizeOfFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga4ca5ae1284f912cb95b5622b83129048</Anchor>
    <Abstract>Returns the total size of the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATHseparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga14c9eaaaa54716d17a51f96c588f6397</Anchor>
    <Abstract>Returns the platform&apos;s separator char for the PATH environment variable: ; on Windows,...</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAvailableSpaceOnFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gaa5f80187a21aef53ecbe7fd55731a326</Anchor>
    <Abstract>Returns the available space on the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSizeOfFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga4ca5ae1284f912cb95b5622b83129048</Anchor>
    <Abstract>Returns the total size of the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dirSeparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gabc304be514f1c64345214c2c50be5201</Anchor>
    <Abstract>Returns the platform&apos;s preferred separator: \ on Windows, and / everywhere else.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATHseparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga14c9eaaaa54716d17a51f96c588f6397</Anchor>
    <Abstract>Returns the platform&apos;s separator char for the PATH environment variable: ; on Windows,...</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filesystemIsCaseSensitive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga88305d0fe386e29850d7a3765b4040b6</Anchor>
    <Abstract>Returns true if the current platform&apos;s filesystem is case-sensitive.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFlatsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gab2aaf8e0eb63caaab354a4fc58060d4f</Anchor>
    <Abstract>Returns an array of pitch class objects representing each flat in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharpsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga0505fa816cef899f31e330801d7a58d1</Anchor>
    <Abstract>Returns an array of PitchClass objects representing each sharp in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lowestNoteOfMidiOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gaa93e375cd60ec541ae8510b99ae9987c</Anchor>
    <Abstract>Returns the lowest note of a given MIDI octave number (that octave&apos;s C key).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>octaveNumberOfMidiNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga46f2241f3fac360a4975989206736ba4</Anchor>
    <Abstract>Returns the octave number of a given MIDI pitch.</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>semitonesInOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga3917948bc2fcef45dd070056036806ce</Anchor>
    <Abstract>Integer constant representing the number of semitones in an octave (12).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_BLOCK_WITH_FORCED_SEMICOLON</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac332d8954bf4665bd2c9b7788d1c81f4</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONCATENATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gabae9d06ec283c5bb111b3a0f8d1784ca</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga397de153f0d2c4a307fa9e150a396a32</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gacb481fd22dbb3eae9b409dfbb29fd494</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga5bf553d96012e220f7715df0a90066da</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa204cf467eb45621b139f7fbf6b0f503</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_HAS_ATTRIBUTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac33f41199d77eecdd9be85687d4184c8</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_HAS_INCLUDE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa78f05f215babe3642360840ad6d79b7</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_MAKE_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga654264c78a601e3b9f229f10ad807442</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa19294b73467ee63a3601fe2ff636b8c</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga3c9f53b7d1a99a02600fdbe81a772f82</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_realtime_copy_safe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Anchor>a7adf757eda75d7a3b25843a8eecdcd07</Anchor>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe copy constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_realtime_move_safe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Anchor>a2d52bd6f78be6bf72b3529ff3425f3a2</Anchor>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe move constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeCopySafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Anchor>a2f9ac9585907b3e2f2552345e14d569f</Anchor>
    <Abstract>@concept RealtimeCopySafe This concept requires that a type is realtime-safe copy constructable and c...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeMoveSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Anchor>a363f94f61a6074eade89e955ffd70ee0</Anchor>
    <Abstract>This concept requires that a type is realtime-safe move constructable and move assignable.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Anchor>ad5370c9b98e25633fb74a958857cfe78</Anchor>
    <Abstract>This concept requires that a type is realtime-safe copy constructable, copy assignable,...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga02ce419d9a24011ce06c363e567d8f37</Anchor>
    <Abstract>Calculates a SHA1 hash for the given data.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gad59db2ed6ec21f087da8040f514fd10d</Anchor>
    <Abstract>Calculates a SHA1 hash for the given string.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga53e991f9748b5819d4b679260b12da28</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gae4c137f728f6a479fa5bb7f00205a9de</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafcffbf237b396138431cfb85b4f1e956</Anchor>
    <Abstract>Calculates a SHA256 hash for the given data.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaeb7d7327a54d7701f116804d6a40e250</Anchor>
    <Abstract>Calculates a SHA256 hash for the given string.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaeaa6253a21c6303fd96385172bf16f1f</Anchor>
    <Abstract>Calculates a SHA384 hash for the given data.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga4bc79e7feba628b1ef01bb1c064a9e36</Anchor>
    <Abstract>Calculates a SHA384 hash for the given string.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaac385895667ef7f184bb0728ba10d718</Anchor>
    <Abstract>Calculates a SHA512 hash for the given data.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga772508093ab1e982231feb0e75c3b019</Anchor>
    <Abstract>Calculates a SHA512 hash for the given string.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::geometry</Scope>
    </TokenIdentifier>
    <Path>d7/dcd/group___two_dgeometry.html</Path>
    <Anchor>ga34a4f995efaff20408b272939689f926</Anchor>
    <Abstract>Returns true if the Rectangle and Square do not have equal dimensions.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::geometry</Scope>
    </TokenIdentifier>
    <Path>d7/dcd/group___two_dgeometry.html</Path>
    <Anchor>ga5cdfdcd69f79295c4eef46793103aad4</Anchor>
    <Abstract>Returns true if the Rectangle and Square have equal dimensions.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStaticObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>gada3cd95222acdc37ef8ecd1368a49138</Anchor>
    <Abstract>This function retrieves a static object of a specified type.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_static</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga416890115f8f2267d83aad03d1b6346b</Anchor>
    <Abstract>This function forces some data to be evaluated at compile time.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropFirstChars</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a0b7a400beb65f2e9670638ed869fb664</Anchor>
    <Abstract>Removes a specified number of characters from the beginning of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropLastChars</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a9d4abaa686539d625750a529069fba92</Anchor>
    <Abstract>Removes a specified number of characters from the end of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromFirstOccurrenceOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>aff4685ec94a225acc1c1350958f3ae53</Anchor>
    <Abstract>Returns a copy of the passed string, beginning at the first occurrence of stringToFind .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLimesASCII</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a066ff4b49cc70facc5fa966afdcc5960</Anchor>
    <Abstract>Returns the Limes library ASCII logo as a string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNewline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a7a2c5fab298d131efac69b8af180519b</Anchor>
    <Abstract>Returns the platform&apos;s preferred newline separator: \r\n on Windows, \n everywhere else.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>join</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a82f5e683c92b49ed4f857e5750ed1a86</Anchor>
    <Abstract>Joins the input strings into one string, placing delimiter between each input string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinWithNewlines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a93eb0c2e2e48b1c9fe880a1ec8458fe9</Anchor>
    <Abstract>Joins the strings together, using the platform&apos;s preferred newline character as the token delimiter.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinWithWhitespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a996c796c5bcb3ab4987a4458abbd50e9</Anchor>
    <Abstract>Joins the strings together, using a space character as the token delimiter.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a07c1aa259a91de614185ddc5ad10629b</Anchor>
    <Abstract>Returns the length of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printLimesASCII</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>ae7f6ba4b01da3819578ac508c0478205</Anchor>
    <Abstract>Prints the Limes library ASCII logo to std::cout.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quoted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>ac4b8ef308a8cd430bee61fba270cf537</Anchor>
    <Abstract>Adds &quot; characters to the beginning and end of the string, if they aren&apos;t already there.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>split</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a93efca31cf8c803589273ba34958023f</Anchor>
    <Abstract>Takes an input string and splits it into a series of smaller strings.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitAtNewlines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a547acd73e4f10c96586c3d9e1cc560ae</Anchor>
    <Abstract>Splits the input string into lines.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitAtWhitespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>ad6e2ffeaa0b89a2b8e59c7daae06a9b3</Anchor>
    <Abstract>Splits the input string using whitespace characters as the delimiter, not including the whitespace in...</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toLower</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a2fca780250a3b862a9043b9f4d8d7651</Anchor>
    <Abstract>Returns a copy of the string, with all its characters converted to lower case.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toUpper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a74e4df0eb4b67a53993c6654aeda5082</Anchor>
    <Abstract>Returns a copy of the string, with all its characters converted to upper case.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a30033399e70246bd3fd0c2567a2905e7</Anchor>
    <Abstract>Removes any whitespace characters from the beginning and end of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unquoted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a51550da36e464bb82c7987544761072e</Anchor>
    <Abstract>Removes &quot; characters from the beginning and end of the string, if they were there.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upToFirstOccurrenceOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>aa13b5ee1f17632b4eb4d19204122fda0</Anchor>
    <Abstract>Returns a copy of the passed string, ending at the first occurrence of stringToFind .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gae28368a1a0a0153d8911eaa862731d9f</Anchor>
    <Abstract>Returns true if the two strings contain exactly the same characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>ga2e90412e899267588041b3a31efa6d3b</Anchor>
    <Abstract>Returns true if the two strings are the same, regardless of the case of their characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gab9dddceac3df61646ad9f77e894a6f6c</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>ga8f147344a9e7e2e648bd62b26af71654</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>ga8f147344a9e7e2e648bd62b26af71654</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gae28368a1a0a0153d8911eaa862731d9f</Anchor>
    <Abstract>Returns true if the two strings contain exactly the same characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>ga2e90412e899267588041b3a31efa6d3b</Anchor>
    <Abstract>Returns true if the two strings are the same, regardless of the case of their characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gab9dddceac3df61646ad9f77e894a6f6c</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>new_line</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a782914839d6c939db85274ef89ca3f82</Anchor>
    <Abstract>A static variable that can be referenced for convenience, instead of needing to call getNewline() .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callAndBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>gab3a4c8ff9294d2321b63cef1e6757d55</Anchor>
    <Abstract>Calls a function on a background thread, blocks until the function finishes executing,...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callInBackground</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>ga73a4d8b593c31fdc8da1e8efff646227</Anchor>
    <Abstract>Launches a function on a background thread and returns immediately.</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumThreads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>gab39e0c57bedc0130c5004595687f148e</Anchor>
    <Abstract>Tries to detect the number of concurrent threads supported by the current hardware and implementation...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Point</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>abb837b0f3ad8c65346e615cf45f491f7</Anchor>
    <Abstract>Convenience typedef for a time point.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>a26c99add4885b8f4eda88ab0d4810443</Anchor>
    <Abstract>Convenience typedef for the system clock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertClockTimePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>a7f4bed4655cc16965b8501ef1162191c</Anchor>
    <Abstract>Converts a time point on one clock to a time point on another clock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>aa2f116163c55f3b14c7d033751982a5e</Anchor>
    <Abstract>Converts a std::time_t object to a time point on the given Clock type.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>ade6f250922af7c86e48d1994d3fc8559</Anchor>
    <Abstract>Converts a std::tm object to a time point on the given Clock type.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toSystemTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>a631f434e31c8cde9c22bd9ca57d3cfc4</Anchor>
    <Abstract>Converts a time point on any Clock type to a time point on the SystemClock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>a758c17dbfbcbdaa7606d54f3fe27fe92</Anchor>
    <Abstract>Converts a time point on any Clock type to a std::tm object.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>a17d433cb02c74ae882689d9935d35316</Anchor>
    <Abstract>@concept Clock The same as std::is_clock_v, only implemented here because the standard library concep...</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga94038764f8ce07e7edd3b2a1168f18e0</Anchor>
    <Abstract>A utility typedef for an empty TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_type_list_from_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga9060d726b65a05a30106f61c012acabf</Anchor>
    <Abstract>Creates a typelist from the template arguments of a template type.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_typelist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gac84fa6c1440ae058963560bac7673709</Anchor>
    <Abstract>True if the specified type is a specialization of TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga16aa213be5982774c8ccb3873f47cb19</Anchor>
    <Abstract>@concept type_list</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_null_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::typelist</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gae9cec719238137143e509b59edace27b</Anchor>
    <Abstract>Returns true if T is a NullType .</Abstract>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga6c28fc31963404ed09a07d4117181ee2</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gabf1ebcf6a9b51774bb0065caf5139467</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object, ending with &quot; pointer&quot;.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertible_to</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga3504d8b86957ecbf83dec8fb8a6401ce</Anchor>
    <Abstract>@concept convertible_to Exactly the same as std::convertible_to , only implemented here because some ...</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>covariant_subtype_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga7fbdca6ad24c2bb0bba2e4bd0c9a6ce7</Anchor>
    <Abstract>@concept covariant_subtype_of</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inherits_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gab7269ffe8ffbe591c6764facb13e2771</Anchor>
    <Abstract>@concept inherits_from</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_covariant_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gab82b141c243bdbd92995ab2b6c54e49f</Anchor>
    <Abstract>Evaluates to true if Base and Derived are covariant types; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_none_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gadb3de5cd06c0f5f0ab0e46f3033c02da</Anchor>
    <Abstract>Evaluates to true if Test is not in the list of Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_one_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga0bcc4fefdfd7ddc3f1a718b181be7476</Anchor>
    <Abstract>Evaluates to true if Test is the same as any of the types in Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_specialization_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga33d028cd1ed992683b771df4df7aba7c</Anchor>
    <Abstract>Evaluates to true if the given type is a specialization of the given template class; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>same_as</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga01bec27eb20aef6406c3a8f13c166d0a</Anchor>
    <Abstract>@concept same_as</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specializes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga500b343e7bdab00b2142d897a532330c</Anchor>
    <Abstract>@concept specializes</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertible_to</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga3504d8b86957ecbf83dec8fb8a6401ce</Anchor>
    <Abstract>@concept convertible_to Exactly the same as std::convertible_to , only implemented here because some ...</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>same_as</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga01bec27eb20aef6406c3a8f13c166d0a</Anchor>
    <Abstract>@concept same_as</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inherits_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gab7269ffe8ffbe591c6764facb13e2771</Anchor>
    <Abstract>@concept inherits_from</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_specialization_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga33d028cd1ed992683b771df4df7aba7c</Anchor>
    <Abstract>Evaluates to true if the given type is a specialization of the given template class; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specializes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga500b343e7bdab00b2142d897a532330c</Anchor>
    <Abstract>@concept specializes</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_covariant_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gab82b141c243bdbd92995ab2b6c54e49f</Anchor>
    <Abstract>Evaluates to true if Base and Derived are covariant types; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>covariant_subtype_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga7fbdca6ad24c2bb0bba2e4bd0c9a6ce7</Anchor>
    <Abstract>@concept covariant_subtype_of</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_one_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga0bcc4fefdfd7ddc3f1a718b181be7476</Anchor>
    <Abstract>Evaluates to true if Test is the same as any of the types in Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_none_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gadb3de5cd06c0f5f0ab0e46f3033c02da</Anchor>
    <Abstract>Evaluates to true if Test is not in the list of Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>d4/df6/test.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>citelist</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>d0/de3/citelist.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d1/dbd/group__limes.html</Path>
    <Abstract>The Limes library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp_filters</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dc/d4e/group__dsp__filters.html</Path>
    <Abstract>Classes for filtering realtime audio signals.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_audio</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d0/d7b/group__limes__audio.html</Path>
    <Abstract>The Limes library of realtime audio utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseRootTwo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d7b/group__limes__audio.html</Path>
    <Anchor>gaa9749fccbd7e845ab3798df0fb38bd14</Anchor>
    <Abstract>An inverse root 2 constant, useful for default filter Q values.</Abstract>
    <DeclaredIn>limes_audio/util/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d7b/group__limes__audio.html</Path>
    <Anchor>ga0f08d1dca089a2e844bd4e709588b58f</Anchor>
    <Abstract>@concept Sample Either float or double .</Abstract>
    <DeclaredIn>limes_audio/util/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leftOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>limes::dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d7b/group__limes__audio.html</Path>
    <Anchor>ggab22891c08ff38fff51e3eebded597949a1551df77400b2edbe1682fef8b4ee182</Anchor>
    <Abstract>In this mode, a MonoStereoConverter will output only the left channel of a stereo signal as its mono ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rightOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>limes::dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d7b/group__limes__audio.html</Path>
    <Anchor>ggab22891c08ff38fff51e3eebded597949a97ed31f67756738d6c8d74a1ee8c565d</Anchor>
    <Abstract>In this mode, a MonoStereoConverter will output only the right channel of a stereo signal as its mono...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mixToMono</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>limes::dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d7b/group__limes__audio.html</Path>
    <Anchor>ggab22891c08ff38fff51e3eebded597949a0d2a8602a2cd80a62be55f9bc60e1f22</Anchor>
    <Abstract>In this mode, a MonoStereoConverter will mix together the two channels of a stereo signal to create i...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>psola</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d2/d79/group__psola.html</Path>
    <Abstract>Utilities for working with PSOLA-like algorithms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>oscillators</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d5/d0f/group__oscillators.html</Path>
    <Abstract>Sample streams that produce a pitched, periodic output.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>samplestreams</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d5/db5/group__samplestreams.html</Path>
    <Abstract>Classes that can produce a continuous stream of output samples with no input.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binaries</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>da/da7/group__binaries.html</Path>
    <Abstract>Utilities for working with binary data files embedded into your source code.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>files</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Abstract>Utilities for working with the filesystem.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAvailableSpaceOnFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gaa5f80187a21aef53ecbe7fd55731a326</Anchor>
    <Abstract>Returns the available space on the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSizeOfFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga4ca5ae1284f912cb95b5622b83129048</Anchor>
    <Abstract>Returns the total size of the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dirSeparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gabc304be514f1c64345214c2c50be5201</Anchor>
    <Abstract>Returns the platform&apos;s preferred separator: \ on Windows, and / everywhere else.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATHseparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga14c9eaaaa54716d17a51f96c588f6397</Anchor>
    <Abstract>Returns the platform&apos;s separator char for the PATH environment variable: ; on Windows,...</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filesystemIsCaseSensitive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga88305d0fe386e29850d7a3765b4040b6</Anchor>
    <Abstract>Returns true if the current platform&apos;s filesystem is case-sensitive.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashes</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Abstract>Cryptographic hash functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf04b8b325b6d8808cfa8ab662c415563</Anchor>
    <Abstract>Calculates an MD5 hash for the given data.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga1ad1ee42c5a8c1f5b7bbab3753b842ed</Anchor>
    <Abstract>Calculates an MD5 hash for the given string.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga02ce419d9a24011ce06c363e567d8f37</Anchor>
    <Abstract>Calculates a SHA1 hash for the given data.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gad59db2ed6ec21f087da8040f514fd10d</Anchor>
    <Abstract>Calculates a SHA1 hash for the given string.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga53e991f9748b5819d4b679260b12da28</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gae4c137f728f6a479fa5bb7f00205a9de</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafcffbf237b396138431cfb85b4f1e956</Anchor>
    <Abstract>Calculates a SHA256 hash for the given data.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaeb7d7327a54d7701f116804d6a40e250</Anchor>
    <Abstract>Calculates a SHA256 hash for the given string.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaeaa6253a21c6303fd96385172bf16f1f</Anchor>
    <Abstract>Calculates a SHA384 hash for the given data.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga4bc79e7feba628b1ef01bb1c064a9e36</Anchor>
    <Abstract>Calculates a SHA384 hash for the given string.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaac385895667ef7f184bb0728ba10d718</Anchor>
    <Abstract>Calculates a SHA512 hash for the given data.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga772508093ab1e982231feb0e75c3b019</Anchor>
    <Abstract>Calculates a SHA512 hash for the given string.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHasherForType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gac34cb84df8bc2dfec8c97755d632208a</Anchor>
    <Abstract>Creates an appropriate Hasher for the given Type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafaa42983a7f5867ce673f70cf08762ea</Anchor>
    <Abstract>Calculates a hash value for the input data using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga767adfd86b44e74eecded43fb40575b8</Anchor>
    <Abstract>Calculates a hash value for the input string using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_core</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>da/d07/group__limes__core.html</Path>
    <Abstract>The Limes core library of utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_BEGIN_NAMESPACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>da/d07/group__limes__core.html</Path>
    <Anchor>ga41a58aa43a02cea437cc98ee291c3a2c</Anchor>
    <DeclaredIn>limes_namespace.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_END_NAMESPACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>da/d07/group__limes__core.html</Path>
    <Anchor>ga7ea42681efe61fc798589260810ad784</Anchor>
    <DeclaredIn>limes_namespace.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>geometry</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/dba/group__geometry.html</Path>
    <Abstract>Classes representing geometric shapes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoDgeometry</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d7/dcd/group___two_dgeometry.html</Path>
    <Abstract>Two-dimensional geometric shapes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::geometry</Scope>
    </TokenIdentifier>
    <Path>d7/dcd/group___two_dgeometry.html</Path>
    <Anchor>ga34a4f995efaff20408b272939689f926</Anchor>
    <Abstract>Returns true if the Rectangle and Square do not have equal dimensions.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::geometry</Scope>
    </TokenIdentifier>
    <Path>d7/dcd/group___two_dgeometry.html</Path>
    <Anchor>ga5cdfdcd69f79295c4eef46793103aad4</Anchor>
    <Abstract>Returns true if the Rectangle and Square have equal dimensions.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreeDgeometry</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/d2a/group___three_dgeometry.html</Path>
    <Abstract>Three-dimensional geometric shapes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>core_math</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Abstract>Math utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga96017616aa33e280ac4559d327e11889</Anchor>
    <Abstract>@concept Scalar A scalar type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga78b6e7e3ca15b70ce958d0f028d607ed</Anchor>
    <Abstract>@concept Integral An integral type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga340ba1fa93e3ff5987d94fd11d07b39a</Anchor>
    <Abstract>A constexpr-enabled max function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gada391234ea82372c9e005ed208f2db13</Anchor>
    <Abstract>A constexpr-enabled min function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga514ee773c330a0ff7d19286b13f83b53</Anchor>
    <Abstract>A constexpr-enabled absolute value function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga005b096167e7e48847b69c7f1f350915</Anchor>
    <Abstract>A constexpr-enabled negation function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>round</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6cc3bd33ef5ff0347c79ba7cc8adec36</Anchor>
    <Abstract>A constexpr-enabled rounding function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga7fa3c07491e7409e7f695a70960d4579</Anchor>
    <Abstract>A constexpr-enabled clipping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>power</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8d26141199f013e584e33b0cf04bd0b8</Anchor>
    <Abstract>A constexpr-enabled power function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8e1376561c18c5700f25bf9d16fa5f3a</Anchor>
    <Abstract>A constexpr-enabled mapping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPowerOf2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaf28ea8c4fcd46ef3a5423f212b1bcc1e</Anchor>
    <Abstract>Returns true if val is 2^something.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDivisibleBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga77464df61c396b206d8357c5f9884b5b</Anchor>
    <Abstract>Returns true if the number is divisible by the divisor with no remainder.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberIsEven</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaa5495769808eff098130215ee85fcf2d</Anchor>
    <Abstract>Returns true if the number is evenly divisible by 2.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga950e07ddb605b6e7721142a145bec24c</Anchor>
    <Abstract>Returns true if the number is a prime number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factorial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga5d2f2720c191268e9a17d15e0b25ff3c</Anchor>
    <Abstract>Computes the factorial of the number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>middleOfThree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga82cc1c47568221dc63727ebe3686d60d</Anchor>
    <Abstract>Returns the median of three values.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>periodInSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaad252ebdd65713b59abdbe0f5f2d7bd9</Anchor>
    <Abstract>Returns the period in samples of a frequency at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqFromPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaacee5ce0fef613d9f08eb4ec86bfe056</Anchor>
    <Abstract>Returns the frequency in Hz with a given period in samples at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampsToMs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gab8a73b8ec5cd084065838b8d2b860874</Anchor>
    <Abstract>Converts a number of samples to milliseconds at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>msToSamps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga47e9b2f032b32583e46d7e312a576222</Anchor>
    <Abstract>Converts a number of milliseconds to the closest integer number of samples at the specified samplerat...</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midiToFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga958bfa906aac63346cd915d6b5a08698</Anchor>
    <Abstract>Converts a MIDI note to a frequency in Hz.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqToMidi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga79c120b8a72137dd368c391208d82240</Anchor>
    <Abstract>Converts a frequency in Hz to a MIDI note.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Abstract>Utilities for memory management.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga33390ddedd9f134e7c29d771f8bf823f</Anchor>
    <Abstract>Allocates the desired number of objects with the desired alignment.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>gab2c3c66b09b7249811b98dd5b406b78f</Anchor>
    <Abstract>Deallocates a pointer that was previously allocated with allocate_aligned() .</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStaticObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>gada3cd95222acdc37ef8ecd1368a49138</Anchor>
    <Abstract>This function retrieves a static object of a specified type.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_static</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga416890115f8f2267d83aad03d1b6346b</Anchor>
    <Abstract>This function forces some data to be evaluated at compile time.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Abstract>Utilities for metaprogramming.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga94038764f8ce07e7edd3b2a1168f18e0</Anchor>
    <Abstract>A utility typedef for an empty TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_type_list_from_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga9060d726b65a05a30106f61c012acabf</Anchor>
    <Abstract>Creates a typelist from the template arguments of a template type.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga6c28fc31963404ed09a07d4117181ee2</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gabf1ebcf6a9b51774bb0065caf5139467</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object, ending with &quot; pointer&quot;.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_null_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::typelist</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gae9cec719238137143e509b59edace27b</Anchor>
    <Abstract>Returns true if T is a NullType .</Abstract>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_typelist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gac84fa6c1440ae058963560bac7673709</Anchor>
    <Abstract>True if the specified type is a specialization of TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga16aa213be5982774c8ccb3873f47cb19</Anchor>
    <Abstract>@concept type_list</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertible_to</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga3504d8b86957ecbf83dec8fb8a6401ce</Anchor>
    <Abstract>@concept convertible_to Exactly the same as std::convertible_to , only implemented here because some ...</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>same_as</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga01bec27eb20aef6406c3a8f13c166d0a</Anchor>
    <Abstract>@concept same_as</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inherits_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gab7269ffe8ffbe591c6764facb13e2771</Anchor>
    <Abstract>@concept inherits_from</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_specialization_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga33d028cd1ed992683b771df4df7aba7c</Anchor>
    <Abstract>Evaluates to true if the given type is a specialization of the given template class; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specializes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga500b343e7bdab00b2142d897a532330c</Anchor>
    <Abstract>@concept specializes</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_covariant_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gab82b141c243bdbd92995ab2b6c54e49f</Anchor>
    <Abstract>Evaluates to true if Base and Derived are covariant types; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>covariant_subtype_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga7fbdca6ad24c2bb0bba2e4bd0c9a6ce7</Anchor>
    <Abstract>@concept covariant_subtype_of</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_one_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga0bcc4fefdfd7ddc3f1a718b181be7476</Anchor>
    <Abstract>Evaluates to true if Test is the same as any of the types in Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_none_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gadb3de5cd06c0f5f0ab0e46f3033c02da</Anchor>
    <Abstract>Evaluates to true if Test is not in the list of Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alg</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>de/d29/group__alg.html</Path>
    <Abstract>Algorithms for manipulating generic container types.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>de/d29/group__alg.html</Path>
    <Anchor>gadf771b6c30c1652f5e47c159aa207635</Anchor>
    <Abstract>@concept Container This concept requires that a type has begin() and end() functions that return iter...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>func</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Abstract>Utilities for working with higher-level functions and functions as objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga7c4fa56ce61b8e28103b43f250ba851c</Anchor>
    <Abstract>This typedef evaluates to the result type returned by calling the given function with the given argum...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>call_once</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga423a59d89a77cb46a1e475eca33dd4e4</Anchor>
    <Abstract>Calls the function object exactly once throughout the entire life of the program.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consteval_invoke</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga677b37e66b96cec89ef70ad374f8aa2b</Anchor>
    <Abstract>Forces a given function to be executed at compile time.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>curry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga580272ce196b901393443435200a88dc</Anchor>
    <Abstract>Breaks down a function that takes multiple arguments into a series of functions that each take one ar...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>try_call</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga8ae3d6b9aba39513f038c0784215c739</Anchor>
    <Abstract>Executes a potentially-throwing function within a try-catch block, and returns false if an exception ...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga782eabbc5a0ba6fa51ac3e263d8cf2e6</Anchor>
    <Abstract>@concept Function This concept simply requires that an object is invocable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>misc</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d1/ded/group__misc.html</Path>
    <Abstract>Miscellaneous things.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignore_unused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc</Scope>
    </TokenIdentifier>
    <Path>d1/ded/group__misc.html</Path>
    <Anchor>gaf60f405ce0a2830962ec41c546be5bf7</Anchor>
    <Abstract>A utility function to silence unused variable warnings.</Abstract>
    <DeclaredIn>IgnoreUnused.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>system</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Abstract>Utilities that may be OS- or compiler-specific.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_ASSERT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga06a4bfb323e9f05d2e51a72b21f40e0a</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_ASSERT_FALSE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga25f3c9bb0036097a480811b544f1eb34</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_BLOCK_WITH_FORCED_SEMICOLON</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac332d8954bf4665bd2c9b7788d1c81f4</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_COMPILER_MESSAGE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga5577fed1a9e9f17571205093a090b490</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_COMPILER_WARNING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga2db625c65f80ef77802a5f764aebff50</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONCATENATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gabae9d06ec283c5bb111b3a0f8d1784ca</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga397de153f0d2c4a307fa9e150a396a32</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gacb481fd22dbb3eae9b409dfbb29fd494</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga5bf553d96012e220f7715df0a90066da</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa204cf467eb45621b139f7fbf6b0f503</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DISABLE_ALL_COMPILER_WARNINGS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac9aaa41f09c0bdac5928138eeb9adb24</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_FORCE_INLINE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga16865b999504e0621f83caecfec93bcc</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_HAS_ATTRIBUTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac33f41199d77eecdd9be85687d4184c8</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_HAS_INCLUDE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa78f05f215babe3642360840ad6d79b7</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_MAKE_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga654264c78a601e3b9f229f10ad807442</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NEVER_INLINE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga7bb6ffa325bf2b2ba5d63d565a98aaff</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa19294b73467ee63a3601fe2ff636b8c</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga3c9f53b7d1a99a02600fdbe81a772f82</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_PACK</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga4afff37dbba8d8055ea44c9631a50140</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_PURE_FUNCTION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gabed8f597c61ed37a221c9ae8dccf9e22</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_REENABLE_ALL_COMPILER_WARNINGS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gad2a89476f519fd1fb29df89e88cb6a93</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_RESTRICT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga31004f8beb1bebe164df6461882dbe88</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_UNREACHABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gad16dd0041c15feb8b68d38dc707f9595</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>breakInDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga9a70cd79386a6723dbb63c9374d65b8d</Anchor>
    <Abstract>Attempts to break into the debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga854168fca1651443274024e9dfaa6cd3</Anchor>
    <Abstract>Returns the path to the current assertion log file, if any.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunningUnderDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga9d7abb01ca191df6a78dc4bfffae6f69</Anchor>
    <Abstract>Returns true if the calling process is running under a debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga0a55276632d2f9f646782b6e571bcfed</Anchor>
    <Abstract>Sets a filepath to be used to log assertion failures for the current process.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>text</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Abstract>Utilities for working with text and strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>ga8f147344a9e7e2e648bd62b26af71654</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gae28368a1a0a0153d8911eaa862731d9f</Anchor>
    <Abstract>Returns true if the two strings contain exactly the same characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>ga2e90412e899267588041b3a31efa6d3b</Anchor>
    <Abstract>Returns true if the two strings are the same, regardless of the case of their characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gab9dddceac3df61646ad9f77e894a6f6c</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rt_safety</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Abstract>Metaprogramming utilities for detecting the realtime safety of certain operations on certain types.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Abstract>Threading utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callAndBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>gab3a4c8ff9294d2321b63cef1e6757d55</Anchor>
    <Abstract>Calls a function on a background thread, blocks until the function finishes executing,...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callInBackground</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>ga73a4d8b593c31fdc8da1e8efff646227</Anchor>
    <Abstract>Launches a function on a background thread and returns immediately.</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumThreads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>gab39e0c57bedc0130c5004595687f148e</Anchor>
    <Abstract>Tries to detect the number of concurrent threads supported by the current hardware and implementation...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Abstract>Utilities for working with time measurements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TODO_BEFORE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaba800051fa8705e8ec3606d38586f719</Anchor>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga074fa34571f22ac34cc6415c814a0e4f</Anchor>
    <Abstract>Returns the year of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaeed19bfa85af265a63bb31ffce8aae1b</Anchor>
    <Abstract>Returns the month of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_day</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga8fca8688546ad996c2ff82a6e4c57e47</Anchor>
    <Abstract>Returns the day of the month on which this code was compiled, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga34b0f0856361da78df492e71b98b9561</Anchor>
    <Abstract>Returns the hour of compilation, as an integer, in 24-hour time.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_minute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga9ead6b8bccc46ee10c8be2fe667cdbe5</Anchor>
    <Abstract>Returns the minute of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_second</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gac7fd1d6865b1470c8b532a9ceaf16df7</Anchor>
    <Abstract>Returns the second of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loc_country</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Abstract>Utilities for working with different countries.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllCountries</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>gae116ceac637605bca56517965824c5c2</Anchor>
    <Abstract>Returns a vector of all known Country objects.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga4bc4cb67166962cd71ae97868aa77935</Anchor>
    <Abstract>Returns the Country object representing the given ISO country code.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga3e029e65c56bc15ba7f56ea04fea45cb</Anchor>
    <Abstract>Returns the Country object representing the country with the given name.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loc_lang</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Abstract>Utilities for working with spoken human languages.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllKnownLanguages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga11ae481240c4d4d320de358bc46a9396</Anchor>
    <Abstract>Returns all known Language objects in Limes&apos;s internal database.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga746e6628a179acfa800d441c08c7bd66</Anchor>
    <Abstract>Returns the Language object representing the language with the given name.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguageForCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga382c8c09f879ffd9be0a24088b2ee5cb</Anchor>
    <Abstract>Returns the Language object representing the given ISO language code.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguagesForCountry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gadb7784b01623f7aa80324d1ea10b6856</Anchor>
    <Abstract>Returns a vector of Language objects representing languages that may be spoken in the given country.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_locale</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dd/d74/group__limes__locale.html</Path>
    <Abstract>The Limes library of localization utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_midi</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d1/d3f/group__limes__midi.html</Path>
    <Abstract>The Limes library of MIDI utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midi_tuning</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d3/d6d/group__midi__tuning.html</Path>
    <Abstract>Utilities for working with MIDI tuning systems. Limes provides C++ wrappers for the MTS-ESP client an...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music_intervals</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Abstract>Utilities for working with musical pitch intervals.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gad937197c36fe7b20d305edb703a8ac78</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga0132c8d23057886215fdbafa776d4aea</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gace85358102f38a5ae37e1f3cc4530512</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gab9baf0955c1a4114a492038c6628dc8a</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music_harmony</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Abstract>Utilities for working with pitch and harmony related music theory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>semitonesInOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga3917948bc2fcef45dd070056036806ce</Anchor>
    <Abstract>Integer constant representing the number of semitones in an octave (12).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>octaveNumberOfMidiNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga46f2241f3fac360a4975989206736ba4</Anchor>
    <Abstract>Returns the octave number of a given MIDI pitch.</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lowestNoteOfMidiOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gaa93e375cd60ec541ae8510b99ae9987c</Anchor>
    <Abstract>Returns the lowest note of a given MIDI octave number (that octave&apos;s C key).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharpsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga0505fa816cef899f31e330801d7a58d1</Anchor>
    <Abstract>Returns an array of PitchClass objects representing each sharp in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFlatsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gab2aaf8e0eb63caaab354a4fc58060d4f</Anchor>
    <Abstract>Returns an array of pitch class objects representing each flat in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music_scales</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dc/dab/group__music__scales.html</Path>
    <Abstract>Utilities for working with musical scales.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_music</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d6/dfd/group__limes__music.html</Path>
    <Abstract>The Limes library of music theory utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music_rhythm</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/d76/group__music__rhythm.html</Path>
    <Abstract>Utilities for working with rhythm and musical durations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fft</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Abstract>Fourier transform utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFFTW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga4b7ceaf6a5c2f8edb74c518833336589</Anchor>
    <Abstract>Returns true if the FFTW FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga78554bf05742bbff654330926a1d261e</Anchor>
    <Abstract>Returns true if the Apple vDSP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gac530869f4c65369b6e52efa3f4be9857</Anchor>
    <Abstract>Returns true if the Intel IPP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gae0c1b95e40cf559713c5ff97b3a308a5</Anchor>
    <Abstract>Returns true if the fallback FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga81a24c44587354cba913179bea459d2e</Anchor>
    <Abstract>Returns a string literal with the name of the FFT implementation being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fftw</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Abstract>Classes and functions related to integrating the FFTW library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_DOUBLE_ONLY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga09e13e7bc904f98333229f65792654dc</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_HEADER_NAME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>gaf0f842cd586876ba9d1b4872b1bb4f08</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_SINGLE_ONLY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>gafc2bf4398dc8eb9ce229e5548eb4d17a</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_FFTW</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga25d4ef2f45323ffac2004347580d93a3</Anchor>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga180339a8f455980abbb4b2799d153c55</Anchor>
    <Abstract>Sets the directory that FFTW wisdom files will be read from and saved to.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga90e49d17f247ad93ecfb427c7e2fcf9d</Anchor>
    <Abstract>Returns the directory being used to save and load FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga1818e18e60c815c22566debbd4784424</Anchor>
    <Abstract>Enables or disables loading and saving of FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d2/d6a/group__fftw.html</Path>
    <Anchor>ga5173b41e9b489babbd62d5640c5b8cad</Anchor>
    <Abstract>Returns true if loading and saving of FFTW wisdom files is enabled.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_pommier</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d5/d50/group__vec__pommier.html</Path>
    <Abstract>Pommier SIMD extension functions. This group contains sin and cos SIMD functions written by Julien Po...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_vecops</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Abstract>The Limes vector operations library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_IPP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaaf4e6c2cb5282672fc67747a8e1f550f</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_MIPP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga70b144652ef1412e204a8d4e9c66fef8</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_POMMIER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gacc1d8c1c278a0ac62eef8c5595503a5a</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_VDSP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga5798e2e410bb607a38b777b0f8e7fafa</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaef2ce37a512c1f570dfa7aea7c9e6c14</Anchor>
    <Abstract>@concept Scalar Any scalar type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga5b711a2ab615fd16769f73e49e07488a</Anchor>
    <Abstract>@concept Integral Any integral type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaa2c8ff649809e33cdfc1255636f2f51e</Anchor>
    <Abstract>Fills the vector with the specified value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga9cc2c9b4c12bd3574570e8dc7ff35da3</Anchor>
    <Abstract>Fills the vector with zeroes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gade886b73a7b5b6d7b7629916960dba27</Anchor>
    <Abstract>Copies from one vector to another.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gae85ce01a5c9fd8d495c763c7f9c977f3</Anchor>
    <Abstract>Swaps the elements of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_arithmetic</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Abstract>Basic arithmetic operations on vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>ga76033b51d3e45fcd98844915fa0335c7</Anchor>
    <Abstract>Replaces each value in the vector with its reciprocal.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>gad59ae212688e3dace7b59956d495ba95</Anchor>
    <Abstract>Writes the reciprocal of each value in the input vector to an output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_addition</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Abstract>Vector addition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga60449a2c2fcccfd64da4d82269008c45</Anchor>
    <Abstract>Adds a constant to every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga86ba6050c1a30aab9df98a440a89df97</Anchor>
    <Abstract>Element-wise addition of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga8ed529a71171ca3c01575613f5199875</Anchor>
    <Abstract>Adds a constant to every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gacb9372bb6d3df53194c1d59c7841812a</Anchor>
    <Abstract>Element-wise addition of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_subtraction</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Abstract>Vector subtraction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gadf36066325d4106ebdf2e9e370df564b</Anchor>
    <Abstract>Subtracts a constant from every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga919cb58e32da405815028c1c9354af39</Anchor>
    <Abstract>Element-wise subtraction of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gac5d700aec8e07ca924c9e7408e0efaf1</Anchor>
    <Abstract>Subtracts a constant from every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga689793c924b67cb3d6de4a3db2e9a2b3</Anchor>
    <Abstract>Element-wise subtraction of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga34e45f99109fbc79df03000342b289f8</Anchor>
    <Abstract>Subtracts every element of a vector from a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga67048e7003180b0fe875f378b2522303</Anchor>
    <Abstract>Subtracts every element of a vector from a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_multiplication</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Abstract>Vector multiplication.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gabd3df806285b3d0c33456b1d368bb477</Anchor>
    <Abstract>Multiplies every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga4ac6ad5eb22722a26a3396a99f71c2d6</Anchor>
    <Abstract>Element-wise multiplication of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gae392c30e1ef8cd4a9c8e60262a3558f3</Anchor>
    <Abstract>Multiplies every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga75f9729fdf833998a58bd8c7f2326eef</Anchor>
    <Abstract>Element-wise multiplication of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gafdef30f85db1327afb1724684e5d97f5</Anchor>
    <Abstract>Computes the dot product of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_division</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Abstract>Vector division.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga58ac79669a26bbf15f119256fa5ef436</Anchor>
    <Abstract>Divides every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gabe542f93a2801dea705a30b99bd25a25</Anchor>
    <Abstract>Element-wise division of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gab280f7562da503a42c44fe9392cb9767</Anchor>
    <Abstract>Divides every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga52fc43a5406166658185815c51a0ee76</Anchor>
    <Abstract>Element-wise division of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga691e6b1580a7890b72548be6ab6b1bbf</Anchor>
    <Abstract>Divides a constant by every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gabc72baaae96c9091a60068bcba0e43db</Anchor>
    <Abstract>Divides a constant by every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_squaring</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Abstract>Squaring and square root functions on vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga36096730723a4c8117411c2b6121b19b</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gae0231e59ae96493675dbddd45e700dac</Anchor>
    <Abstract>Squares every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaf6adb1924912cd4c13c530564ef6c080</Anchor>
    <Abstract>Replaces every element in the vector with its square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga33dc288835a9d20d0d7382b2814b6ade</Anchor>
    <Abstract>Writes the square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaaf5b62ab6f9f2a9e0a6cd9f2e570cc62</Anchor>
    <Abstract>Replaces every element in the vector with its inverse square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga8d562f7238ee87445ba97d1e41e383f9</Anchor>
    <Abstract>Writes the inverse square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gae2c726a3e47d1d115372995a29ef8113</Anchor>
    <Abstract>Replaces every element in the vector with its cube root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaf778cc37d99927fadef43a3642ba5a7e</Anchor>
    <Abstract>Writes the cube root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_sorting</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Abstract>Sorting and ordering functions on vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gabe6c647b503d8802269ec42669cf9a5c</Anchor>
    <Abstract>Reverses a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga2e851b2ff584653f12d48e24bf686c0e</Anchor>
    <Abstract>Writes a reversed version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga17d1aec7a6eab65eb33270a90035d9ac</Anchor>
    <Abstract>Sorts a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga32a840e01318c6d1852b850898b39a33</Anchor>
    <Abstract>Writes a sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga40b6ac3b989d84ec70ec711fa449878d</Anchor>
    <Abstract>Sorts a vector in reverse order in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga7233fe3d1c32169b8b63f30c38b7de53</Anchor>
    <Abstract>Writes a reverse sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga2a959fee236c8bf94a262cfe20e3b4e2</Anchor>
    <Abstract>Interleaves multichannel data into a single output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga65a93f93fa2d217b45877059df11ebd2</Anchor>
    <Abstract>Deinterleaves single channel data into multiple output vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_stats</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Abstract>Statistical functions on vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gac7a9c95727a80ce5c0217bd516a53157</Anchor>
    <Abstract>Replaces each element of the vector with its absolute value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>absAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga528118744285ceb133deeb22e563cb87</Anchor>
    <Abstract>Writes the absolute value of each element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga68042b2fd340e85fb736873eed2e86c5</Anchor>
    <Abstract>Flips the sign of every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negateAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga56d201839bc0df98af2a9138905182bf</Anchor>
    <Abstract>Writes the negation of every element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga7f884630e966e6f1334b8d45cf7fe095</Anchor>
    <Abstract>Clips every element of a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gabef49fdbbbd7a708b516a17ac64b082e</Anchor>
    <Abstract>Writes a clipped version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gac51ed11b409ef0d0b44a3a1ab9b451e2</Anchor>
    <Abstract>Returns the sum of all the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaeb889ab16cdedada6bae279ab240a31a</Anchor>
    <Abstract>Returns the mean of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>standard_deviation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1f52fc0dff7b83c4a1ad9249cdeb2e30</Anchor>
    <Abstract>Returns the standard deviation of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_extrema</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Abstract>Extrema calculation functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gac262f0759d4e94c6e76de859b12f9c46</Anchor>
    <Abstract>Returns the maximum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga24e8b5481f2b40e94118c67e90599aee</Anchor>
    <Abstract>Finds the maximum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gafd0924df2faf96f9448444798a159bd2</Anchor>
    <Abstract>Returns the maximum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga2f0d919fa71affaef9c11a07b9c8d95f</Anchor>
    <Abstract>Finds the maximum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gabbf8da57c56d80d41f2ff2ee1288aae4</Anchor>
    <Abstract>Returns the minimum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga1d361cefebf0a3eee74ab3f1795bd519</Anchor>
    <Abstract>Finds the minimum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga076a93c161e47ba59dcc6697d2f0f04a</Anchor>
    <Abstract>Returns the minimum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gae132e0ecc8976b10635305cdcfb212a1</Anchor>
    <Abstract>Finds the minimum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga5dfa502a51b88fd534a9fbd046535ef1</Anchor>
    <Abstract>Finds both the minimum and maximum values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gad33d7b2bbe05c35fb38bbf8d9f44172c</Anchor>
    <Abstract>Finds the minimum and maximum values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga00d1befd3a8ddb3da81e6abe9c945ddb</Anchor>
    <Abstract>Finds both the minimum and maximum absolute values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf0b51c08a149db6c6da5ec9427b478c2</Anchor>
    <Abstract>Finds the minimum and maximum absolute values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVectorExtremaInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga62ccd0e04389ca41efbdd09bcfb03f82</Anchor>
    <Abstract>Calculates the values and positions of the extrema in the vector and returns them in a single VectorE...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsVectorExtremaInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gabfe59a0103582ec600271425bac5e52f</Anchor>
    <Abstract>Calculates the values and positions of the absolute value extrema in the vector and returns them in a...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf8f8442017ff82121d88a85eae95a26a</Anchor>
    <Abstract>Returns the difference between the maximum and minimum values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rangeAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf0b23ae2dd2601cbb3010e2f594ace2f</Anchor>
    <Abstract>Returns the difference between the maximum and minimum absolute values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_trig</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Abstract>Trigonometric functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga9049800737a310e19ffb9b5bf1cafce1</Anchor>
    <Abstract>Simultaneously computes the sin and cosine of every value in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_sin</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Abstract>Sine and arcsine functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga45116b911f429728c6f8bee3ad1b1971</Anchor>
    <Abstract>Replaces every value in the vector with its sine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gae00ae0aeff4947e9f77671bb3ab2f7c2</Anchor>
    <Abstract>Writes the sine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga1b65e7a322bc4705e41932a91c4529b4</Anchor>
    <Abstract>Replaces every value in the vector with its arcsine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gaf1b7eb2d28dcd5699803f2ad97d16e7f</Anchor>
    <Abstract>Writes the arcsine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_cos</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Abstract>Cosine and arccosine functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gaed15c01d37c58ce119a59a5c936d996d</Anchor>
    <Abstract>Replaces every value in the vector with its cosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga0a1ae7b7594a0fd306b1d405d6b6946e</Anchor>
    <Abstract>Writes the cosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga286b9aa43f1edb6939189c871096dc35</Anchor>
    <Abstract>Replaces every value in the vector with its arccosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga38b8a89b49712f47451c4ccfb74aa3af</Anchor>
    <Abstract>Writes the arccosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_tan</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Abstract>Tangent and arctangent functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga503dc331b5e71be46de62e644f5226bd</Anchor>
    <Abstract>Replaces every value in the vector with its tangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gad96c0eb23c8ccf5b85007268c465798f</Anchor>
    <Abstract>Writes the tangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga036475cd9def5f3729f68f7bc80368db</Anchor>
    <Abstract>Replaces every value in the vector with its arctangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gaf1b508a20ba1939a7b2b05fb69671dd1</Anchor>
    <Abstract>Writes the arctangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_log</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Abstract>Logarithmic functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga633a8cf6da2e8819f6faec6b419f960d</Anchor>
    <Abstract>Replaces each value in the vector with its natural logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>natAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga30bc27d9e0c5deffdd1a271626fcb64b</Anchor>
    <Abstract>Writes the natural logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga6e9cb29784ae6937dd52a74bf93776be</Anchor>
    <Abstract>Replaces each value in the vector with its base 2 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga03e30d364a819aebb57a4d9251329dc4</Anchor>
    <Abstract>Writes the base 2 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga44c3a85ee486714fa2a473db2d135a53</Anchor>
    <Abstract>Replaces each value in the vector with its base 10 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga941e785c7fbfb826ab9e6a3a5f9a4435</Anchor>
    <Abstract>Writes the base 10 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_exp</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Abstract>Exponential functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gabba158b4cc8009a8c949cd4a9702088a</Anchor>
    <Abstract>Replaces each value in the vector with eˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga073b588e516144b573c4cabb422a7763</Anchor>
    <Abstract>For each value in the input vector, writes eˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga36042279794ca6013c9e60daaa76f127</Anchor>
    <Abstract>Replaces each value in the vector with 2ˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twoAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga5d1fe0a722eb3155880312bbed489568</Anchor>
    <Abstract>For each value in the input vector, writes 2ˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gaf0fd2a71a838d6a84a2443b28a900b66</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>powAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga71dfbdbafe7bafbb796fbbdbe92626d6</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector,...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_audio</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Abstract>Audio utility functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gae537a24e7cc8fc0d3d1b866246def49e</Anchor>
    <Abstract>Mixes together multiple channels of audio into one output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga0cc5e08c603866a3f94ceecd3049d2fd</Anchor>
    <Abstract>Calculates the RMS value of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countZeroCrossings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaf1fecbdc1782c6e9bd88462af4ff9756</Anchor>
    <Abstract>Counts the number of zero crossings present in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga3e6d037ecbe0c6c19c6c6996191a0b4f</Anchor>
    <Abstract>Generates a ramp of samples, starting from startValue and incrementing by a consistent value until en...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaa773c465be209a3d097f4cb84e14608f</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRampAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga2f4b1df0215c251ab3bfacadf866248e</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_window</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Abstract>Windowing functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga6a128c92c17b5eeded996d16c69dff61</Anchor>
    <Abstract>Generates a window function of the desired type , writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga5c6e376478e32b4670c094f6da111d2d</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>gadd908a9750954d0716c185c4a1c80331</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector, writing the output sample...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_blackman</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Abstract>Blackman windowing functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga9653fec6efe14cf3e47ed5e5fef8c2b7</Anchor>
    <Abstract>Generates a Blackman window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gaf91448dab1ddfb2b06574b6075d08f68</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackmanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gada4ae9f6fde3f6e2a1984422f0777bcb</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_hamm</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Abstract>Hamm (Hamming) windowing functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga635249e6c502b055323c6128e647c3dd</Anchor>
    <Abstract>Generates a Hamm (Hamming) window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga2ce02522c229a5e162c22a6522234763</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHammAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gad630209052fb19b577fded44e8be2ce9</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector, writing the output samples to another v...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_hanning</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Abstract>Hanning windowing functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga957e9d798b149b0f9c0ad82bf8e80f0a</Anchor>
    <Abstract>Generates a Hanning window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga7b30a3bfef13376f44e1af5bc5e84093</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanningAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>gaf634fc9ec69ed5e8b866e4311770ca7d</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_complex</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Abstract>Complex number conversion functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga456451f252f8df15676aa469a757f14d</Anchor>
    <Abstract>Converts polar data to cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga0379acccbc8212ded5043264b3653404</Anchor>
    <Abstract>Converts polar data to interleaved cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga8535fe5a1db17d0b82dc95786c2923a1</Anchor>
    <Abstract>Converts cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catesianInterleavedToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gaeb41bbfaa7dd86d4bef839286cffbe48</Anchor>
    <Abstract>Converts interleaved cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga8b3712f71181d5d3ff6655a5b426c8d0</Anchor>
    <Abstract>Converts cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianInterleavedToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga161341fe747f7daf465acef57121f98a</Anchor>
    <Abstract>Converts interleaved cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_fpm</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d1/d09/group__vec__fpm.html</Path>
    <Abstract>Floating point mode functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_denormals</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Abstract>Denormalized number support utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableDenormalisedNumberSupport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>ga4c0afe0438d776457c73d9d748bbb333</Anchor>
    <Abstract>Controls whether denormalized numbers are enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areDenormalsDisabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>ga663567cc8416a778e37e0acab1c9c0fb</Anchor>
    <Abstract>Returns true if denormalized numbers are currently enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_ftz</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Abstract>Flush-to-zero support utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlushToZeroMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga7f9b57bae55e687f13d4c3c002eed033</Anchor>
    <Abstract>Controls whether flush to zero mode is enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlushToZeroEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga22832f8702188210f2bb025c1a70e868</Anchor>
    <Abstract>Returns true if flush to zero mode is enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_impl</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Abstract>Implementation kind checking functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gad8a841ef1d29d1d7f4dd08f5892e1930</Anchor>
    <Abstract>Returns true if the implementation being used is Apple vDSP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga2aa7f7f2dc9cb23e38a11e2ecfaa74a7</Anchor>
    <Abstract>Returns true if the implementation being used is Intel IPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingMIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga978afc0d4dcde7aedf2bacbc6cf86b29</Anchor>
    <Abstract>Returns true if the implementation being used is MIPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gaeb6a0efe84a2602c997553c1b95cfc71</Anchor>
    <Abstract>Returns true if the fallback implementation is being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gaf09a8639bf3a7399eb31d7d5b0592de8</Anchor>
    <Abstract>Returns a string literal with the name of the implementation being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingPommierExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga6ad60ba3c423b9b1a06c2756d36a7c06</Anchor>
    <Abstract>Returns true if the Pommier SIMD extension functions are being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes</Scope>
    </TokenIdentifier>
    <Path>d9/d44/namespacelimes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::alg</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Abstract>This namespace defines various utility algorithms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElementType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a668ddba847794e76c1c23adf6e5151e0</Anchor>
    <Abstract>Handy typedef for deducing the type of the objects in a Container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IteratorType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a01247b0ad64fe9b7c2e98185802c83a4</Anchor>
    <Abstract>Typedef for the type returned by calling begin() or end() on a Container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>de/d29/group__alg.html</Path>
    <Anchor>gadf771b6c30c1652f5e47c159aa207635</Anchor>
    <Abstract>@concept Container This concept requires that a type has begin() and end() functions that return iter...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>ab5e457cbac0ada12e2751eb9875737cc</Anchor>
    <Abstract>Fills the container with the specified value.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>abece1d4d390d99d8e09fd4af69a2fbbe</Anchor>
    <Abstract>Returns true if the container contains the specified value.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>aaadba14fd0d29744644d7b7f493de8b4</Anchor>
    <Abstract>Returns true if the specified predicate is met by at least one object in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>af8f6e7ad2ccdea41cb984e267de75489</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>abc82be36d624dd5ff74d5c5c6d83dc49</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or_default</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a3217b27912ee0e2fa8c813cb94fd762b</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or_null</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a05cb2e1dca0f5ac3ae6d62e2637011cf</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>adb39c954962d1234842cd6254024c6bf</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>ac1d765c729bcbd7bf3125b340e47b468</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>ae43b092ef6517d3f45dba5dbd797e08d</Anchor>
    <Abstract>Counts the number of objects in the container that meet the specified predicate.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>ab5a5ae3c420f6742a12f6410fb18662d</Anchor>
    <Abstract>Counts the number of objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a7e1f6607be9dbe11a1bff9189773d067</Anchor>
    <Abstract>Reverses the objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>afc754e81e500c59b3fa0b0234bfa4c45</Anchor>
    <Abstract>Sorts the objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a72037b43cffe35374402ecb6da4fb3d7</Anchor>
    <Abstract>Sorts the container using a custom comparator.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shuffle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>aecb9a3cc56ac1cd6825b072a96bf721d</Anchor>
    <Abstract>Randomizes the order of the elements in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>call_both</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>af52bf86ca778f5e7c883b4650e57b5c2</Anchor>
    <Abstract>Calls a function with corresponding pairs of elements from two containers.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a4b311c1b2b93d31e934bbd5d7c889f6c</Anchor>
    <Abstract>Returns the maximum value in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>ad33e2779fc85de056d7c5b44ed0ff73a</Anchor>
    <Abstract>Returns the maximum value in the container and its index in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a8dc90e2ff9dca1c9fb94a4a6dd99df3d</Anchor>
    <Abstract>Returns the minimum value in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a1de850177aecb59803a447fcace3c32e</Anchor>
    <Abstract>Returns the minimum value in the container and its index in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a4ce09ce3f581d6f1e6db8b3b3f4e97a6</Anchor>
    <Abstract>Populates output by calling func with each element of input in sequence.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFromTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a10e91c9ff59681c278a000052a1fa3e0</Anchor>
    <Abstract>The same as transform() , except the output container is default constructed before being populated.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enumerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::alg</Scope>
    </TokenIdentifier>
    <Path>dc/dcc/namespacelimes_1_1alg.html</Path>
    <Anchor>a15d7a77432737677bdb5b338019e9136</Anchor>
    <Abstract>This function allows structured bindings of iterators, similar to Python&apos;s enumerate() method.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::assert</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::assert</Scope>
    </TokenIdentifier>
    <Path>de/da6/namespacelimes_1_1assert.html</Path>
    <Abstract>This namespace contains utilities for runtime assertions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga854168fca1651443274024e9dfaa6cd3</Anchor>
    <Abstract>Returns the path to the current assertion log file, if any.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga0a55276632d2f9f646782b6e571bcfed</Anchor>
    <Abstract>Sets a filepath to be used to log assertion failures for the current process.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::binaries</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::binaries</Scope>
    </TokenIdentifier>
    <Path>d2/d36/namespacelimes_1_1binaries.html</Path>
    <Abstract>This namespace contains utilities for working with binary data files embedded into your application&apos;s...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::binaries::FileInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Abstract>This class is an interface to any kind of binary data embedded into your source code.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>a04b94791e07c586cc6c1d230f4e48c55</Anchor>
    <Abstract>FileInfo is not copyable.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>a1157c4c39d775a253cb3a6ab103fc216</Anchor>
    <Abstract>FileInfo is not movable.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>aaaa0697c592aae28238c185e92180d1d</Anchor>
    <Abstract>Returns a copy of this file&apos;s data as a RawData object.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>ac092cb3e67ea6522b77201139f115ed0</Anchor>
    <Abstract>Returns the full filename, including the extension, if any.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>a5ae52406ccd6edfcc7d95e70f9d11af8</Anchor>
    <Abstract>Returns true if this file has a file extension.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>aa79a8d96d576818fba21f82cd8f0f631</Anchor>
    <Abstract>Returns this file&apos;s name as a string.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>a1b3902f4b429c3523b4997ea6bbc82d1</Anchor>
    <Abstract>FileInfo is not copyable.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>aacdd01700ddba0f30f893790b737fab0</Anchor>
    <Abstract>FileInfo is not movable.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>acde52d1d21e77b22961e6c70e73869e7</Anchor>
    <Abstract>Returns a copy of this file&apos;s data as a string .</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string_view</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>a675ccfc490fbe8f19ccccab04b8ab6a0</Anchor>
    <Abstract>Returns a constant view of this file&apos;s data as a string_view .</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xtn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>a0e567bbb6c34ed6302d751ddbcbfc810</Anchor>
    <Abstract>Returns this file&apos;s file extension as a string.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fileData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>a31ffd0de1852c62a704dac5d48a90dda</Anchor>
    <Abstract>The raw data contained in this file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fileDataSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>acfba25d491edbd0f2e8c63c89d4221f8</Anchor>
    <Abstract>The size of this file&apos;s data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>a14c56e361e75a40f8601e7912e2dd832</Anchor>
    <Abstract>The original file extension of this file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::binaries::FileInfo</Scope>
    </TokenIdentifier>
    <Path>d0/dad/structlimes_1_1binaries_1_1_file_info.html</Path>
    <Anchor>a391909f70ca22743df2db54bf81770ad</Anchor>
    <Abstract>The original name of this file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::binaries::FileInfoList</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Abstract>This class provides an interface to a list of FileInfo objects.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileInfoList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>a36e36c8b9f8e1eb92cd8802117eaeeb4</Anchor>
    <Abstract>FileInfoList is not copyable.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileInfoList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>abbdb9b65a4325290b7b5205a2078c4fb</Anchor>
    <Abstract>FileInfoList is not movable.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>a74f92b984417cf61f81e64f75c661bec</Anchor>
    <Abstract>Returns an iterator to the beginning of the array of FileInfo objects.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>a4354cc8c872d63cf1b5e90765cf6dc10</Anchor>
    <Abstract>Returns an iterator to the end of the array of FileInfo objects.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>a105947912bd5fba78f4a979a12f7a1aa</Anchor>
    <Abstract>Searches for a file in the list with the given name.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>a400512a07e819df13462b3b80b6345f2</Anchor>
    <Abstract>Searches for a file in the list with the given name, and returns a RawData object holding its data.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>ae65424bdb7df8abe0617e9f5877d90cc</Anchor>
    <Abstract>FileInfoList is not copyable.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>aa160c0ef03748bc136c322a407753d08</Anchor>
    <Abstract>FileInfoList is not movable.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>ae8f6b45052f08e56d81c1361bec1c3a5</Anchor>
    <Abstract>Returns the number of FileInfo objects in this list.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileInfoList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>a95e9ff6f5a58be985185327b9e234fd7</Anchor>
    <Abstract>Constructors.</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileInfoList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::binaries::FileInfoList</Scope>
    </TokenIdentifier>
    <Path>d5/d8b/structlimes_1_1binaries_1_1_file_info_list.html</Path>
    <Anchor>ae5960269e348ddd603ec57d3f9616ba5</Anchor>
    <Abstract>Creates a FileInfoList with a pointer to the beginning of an array of FileInfo objects and the size o...</Abstract>
    <DeclaredIn>EmbeddedBinaries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::debugger</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::debugger</Scope>
    </TokenIdentifier>
    <Path>d9/d5a/namespacelimes_1_1debugger.html</Path>
    <Abstract>This namespace contains functions related to the debugger.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>breakInDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga9a70cd79386a6723dbb63c9374d65b8d</Anchor>
    <Abstract>Attempts to break into the debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunningUnderDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga9d7abb01ca191df6a78dc4bfffae6f69</Anchor>
    <Abstract>Returns true if the calling process is running under a debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::ds</Scope>
    </TokenIdentifier>
    <Path>d7/d23/namespacelimes_1_1ds.html</Path>
    <Abstract>This namespace contains some useful data structures.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::AbstractFIFO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>d1/da9/classlimes_1_1ds_1_1_abstract_f_i_f_o.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::AbstractFIFO::ScopedRead</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d9/d5e/classlimes_1_1ds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::AbstractFIFO::ScopedWrite</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d87/classlimes_1_1ds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::basic_vector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>dd/dbe/classlimes_1_1ds_1_1basic__vector.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::FIFO</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d9/da1/classlimes_1_1ds_1_1_f_i_f_o.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::LinkedList</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>d2/d14/classlimes_1_1ds_1_1_linked_list.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::LinkedList::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::ds::LinkedList::Node</Scope>
    </TokenIdentifier>
    <Path>d9/d39/structlimes_1_1ds_1_1_linked_list_1_1_node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::LinkedListModel</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>d3/d2e/structlimes_1_1ds_1_1_linked_list_model.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::LinkedListModel::Iterator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>d8/d52/structlimes_1_1ds_1_1_linked_list_model_1_1_iterator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::owned_vector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>dd/d09/classlimes_1_1ds_1_1owned__vector.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::owned_vector::iterator_base</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>dd/ddc/structlimes_1_1ds_1_1owned__vector_1_1iterator__base.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::ds::scalar_vector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>df/d0d/classlimes_1_1ds_1_1scalar__vector.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::dsp</Scope>
    </TokenIdentifier>
    <Path>d4/d00/namespacelimes_1_1dsp.html</Path>
    <Abstract>This namespace contains utilities for working with realtime audio.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseRootTwo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d7b/group__limes__audio.html</Path>
    <Anchor>gaa9749fccbd7e845ab3798df0fb38bd14</Anchor>
    <Abstract>An inverse root 2 constant, useful for default filter Q values.</Abstract>
    <DeclaredIn>limes_audio/util/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d7b/group__limes__audio.html</Path>
    <Anchor>ga0f08d1dca089a2e844bd4e709588b58f</Anchor>
    <Abstract>@concept Sample Either float or double .</Abstract>
    <DeclaredIn>limes_audio/util/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::CircularBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d7/d95/classlimes_1_1dsp_1_1_circular_buffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CircularBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d7/d95/classlimes_1_1dsp_1_1_circular_buffer.html</Path>
    <Anchor>aaf797542969fcc89071053abeb09f8d4</Anchor>
    <Abstract>Creates a CircularBuffer with an initial size.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d7/d95/classlimes_1_1dsp_1_1_circular_buffer.html</Path>
    <Anchor>aac64c23f83f8aba0cf5fcebf0ba8e7b5</Anchor>
    <Abstract>Clears any previously stored data from the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d7/d95/classlimes_1_1dsp_1_1_circular_buffer.html</Path>
    <Anchor>a72e23b865bbd8d52bc7e8b94bd03b187</Anchor>
    <Abstract>Returns the total capacity of the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumStoredSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d7/d95/classlimes_1_1dsp_1_1_circular_buffer.html</Path>
    <Anchor>a007fd8fedd71e60641931df1d97155ae</Anchor>
    <Abstract>Returns the number of samples currently stored in the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d7/d95/classlimes_1_1dsp_1_1_circular_buffer.html</Path>
    <Anchor>a7c233fe6fa933a6b350ec4fdd8f68ffa</Anchor>
    <Abstract>Reads samples from the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d7/d95/classlimes_1_1dsp_1_1_circular_buffer.html</Path>
    <Anchor>a7e1ef2107ce7da47dc626c463057973a</Anchor>
    <Abstract>Reads samples from the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d7/d95/classlimes_1_1dsp_1_1_circular_buffer.html</Path>
    <Anchor>a18081df149463c364386d61d8017241c</Anchor>
    <Abstract>Changes the total capacity of the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d7/d95/classlimes_1_1dsp_1_1_circular_buffer.html</Path>
    <Anchor>ab442a91aa8a27b8bdf0e5857ab5d39bb</Anchor>
    <Abstract>Stores samples in the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d7/d95/classlimes_1_1dsp_1_1_circular_buffer.html</Path>
    <Anchor>ab75691fa4ba91b3986802e564f04a7b2</Anchor>
    <Abstract>Stores samples in the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::MonoStereoConverter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>d1/d2a/classlimes_1_1dsp_1_1_mono_stereo_converter.html</Path>
    <Abstract>A utility class for converting mono signals to stereo, or stereo signals to mono.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStereoReductionMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>d1/d2a/classlimes_1_1dsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>ad4cb87ceaedb9778d826f73d0c0f9ea9</Anchor>
    <Abstract>Returns the StereoReductionMode the converter is currently using.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>d1/d2a/classlimes_1_1dsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>a5e4dfa5ae78e68ccc7fba9fbf23ba097</Anchor>
    <Abstract>Prepares the converter to process a new maximum blocksize.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseResources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>d1/d2a/classlimes_1_1dsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>a9728c80f577bc17feaff02347281eaec</Anchor>
    <Abstract>Releases the converter&apos;s internal resources.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStereoReductionMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>d1/d2a/classlimes_1_1dsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>ae83747827ceb0dc55c90fc74d7e88483</Anchor>
    <Abstract>Sets the StereoReductionMode the converter will use for converting stereo signals to mono.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertStereoToMono</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>d1/d2a/classlimes_1_1dsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>a2a0088ecb2cbe2ea6541a03f00db3262</Anchor>
    <Abstract>Converts a stereo signal to mono.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertStereoToMono</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>d1/d2a/classlimes_1_1dsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>a6c9cdd82939fdaa0e653c56dc010349c</Anchor>
    <Abstract>Converts a stereo signal to mono.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertMonoToStereo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>d1/d2a/classlimes_1_1dsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>ab572c37801ce3e23bfa3f37f392cff52</Anchor>
    <Abstract>Converts a mono signal to stereo.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertMonoToStereo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>d1/d2a/classlimes_1_1dsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>a417bf7d8b5f9ed3756123a75445342b7</Anchor>
    <Abstract>Converts a mono signal to stereo.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::Oscillator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::Oscillator</Scope>
    </TokenIdentifier>
    <Path>d3/d36/structlimes_1_1dsp_1_1_oscillator.html</Path>
    <Abstract>Base class for any kind of oscillator.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::Oscillator</Scope>
    </TokenIdentifier>
    <Path>d3/d36/structlimes_1_1dsp_1_1_oscillator.html</Path>
    <Anchor>a4084dca544f6e9845e8787e1590fcfd4</Anchor>
    <Abstract>Returns the oscillator&apos;s frequency.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a93eb1b866027c610d3d29b49adbd1a3c</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::Oscillator</Scope>
    </TokenIdentifier>
    <Path>d3/d36/structlimes_1_1dsp_1_1_oscillator.html</Path>
    <Anchor>a54eeae5a5358f074c6de93de072d6c2e</Anchor>
    <Abstract>Resets the oscillator&apos;s phase.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::Oscillator</Scope>
    </TokenIdentifier>
    <Path>d3/d36/structlimes_1_1dsp_1_1_oscillator.html</Path>
    <Anchor>a544ee47db145618c2c88f09d956488bb</Anchor>
    <Abstract>Sets the oscillator&apos;s output frequency and samplerate.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>add9247129b2eedf867eb07f84e24a9e9</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::Oscillator::Phase</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::dsp::Oscillator::Phase</Scope>
    </TokenIdentifier>
    <Path>d9/dc5/structlimes_1_1dsp_1_1_oscillator_1_1_phase.html</Path>
    <Abstract>Represents the phase of an oscillator.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIncrement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::Oscillator::Phase</Scope>
    </TokenIdentifier>
    <Path>d9/dc5/structlimes_1_1dsp_1_1_oscillator_1_1_phase.html</Path>
    <Anchor>a10a063999e490292d7c2c50559871a2a</Anchor>
    <Abstract>Returns the current phase increment.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>next</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::Oscillator::Phase</Scope>
    </TokenIdentifier>
    <Path>d9/dc5/structlimes_1_1dsp_1_1_oscillator_1_1_phase.html</Path>
    <Anchor>a2f9f7c833d64998db095c78aed385adb</Anchor>
    <Abstract>Returns the next phase value and handles wraparound logic.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::Oscillator::Phase</Scope>
    </TokenIdentifier>
    <Path>d9/dc5/structlimes_1_1dsp_1_1_oscillator_1_1_phase.html</Path>
    <Anchor>a28696219087548d6824ee8d1fb830ea4</Anchor>
    <Abstract>Resets the phase,.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::Oscillator::Phase</Scope>
    </TokenIdentifier>
    <Path>d9/dc5/structlimes_1_1dsp_1_1_oscillator_1_1_phase.html</Path>
    <Anchor>af88f71f4a3e6cc1b323a5a914c6abd56</Anchor>
    <Abstract>Sets the output frequency and samplerate.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::PerlinNoise</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::PerlinNoise</Scope>
    </TokenIdentifier>
    <Path>d2/da9/classlimes_1_1dsp_1_1_perlin_noise.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::SampleStream</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Abstract>Base class for any object that can output a stream of audio samples, with no audio or MIDI input.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a43ef2ff3e941bcf7ce6b27b5d4a213ba</Anchor>
    <Abstract>Creates a sample stream with a specified lambda function for producing the next sample.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SampleStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a60506cd0bf3e4702c41094b223015ad7</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a93eb1b866027c610d3d29b49adbd1a3c</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>add9247129b2eedf867eb07f84e24a9e9</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::WhiteNoiseGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::WhiteNoiseGenerator</Scope>
    </TokenIdentifier>
    <Path>dc/d18/structlimes_1_1dsp_1_1_white_noise_generator.html</Path>
    <Abstract>A class that produces white noise.</Abstract>
    <DeclaredIn>WhiteNoiseGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a93eb1b866027c610d3d29b49adbd1a3c</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>add9247129b2eedf867eb07f84e24a9e9</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a789a074b5645ad9c7bec1d9acf4e8795</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>aec53b83b3d8893f57e6355866e4d75ae</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a789a074b5645ad9c7bec1d9acf4e8795</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>aec53b83b3d8893f57e6355866e4d75ae</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a789a074b5645ad9c7bec1d9acf4e8795</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>aec53b83b3d8893f57e6355866e4d75ae</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a789a074b5645ad9c7bec1d9acf4e8795</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>aec53b83b3d8893f57e6355866e4d75ae</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a789a074b5645ad9c7bec1d9acf4e8795</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>aec53b83b3d8893f57e6355866e4d75ae</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WhiteNoiseGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::WhiteNoiseGenerator</Scope>
    </TokenIdentifier>
    <Path>dc/d18/structlimes_1_1dsp_1_1_white_noise_generator.html</Path>
    <Anchor>ac98705b71d955693ab6d53034ff018df</Anchor>
    <Abstract>Constructs a white noise generator with a random seed.</Abstract>
    <DeclaredIn>WhiteNoiseGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WhiteNoiseGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::WhiteNoiseGenerator</Scope>
    </TokenIdentifier>
    <Path>dc/d18/structlimes_1_1dsp_1_1_white_noise_generator.html</Path>
    <Anchor>ac3b7f7e709c0bc3dac71404dde7e004a</Anchor>
    <Abstract>Constructs a white noise generator with an explicit seed.</Abstract>
    <DeclaredIn>WhiteNoiseGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WhiteNoiseGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::WhiteNoiseGenerator</Scope>
    </TokenIdentifier>
    <Path>dc/d18/structlimes_1_1dsp_1_1_white_noise_generator.html</Path>
    <Anchor>ac5a2b691b4bd3746aecdb818976ebc3c</Anchor>
    <Abstract>Constructs a white noise generator with a seed initialized by forking the given Random object.</Abstract>
    <DeclaredIn>WhiteNoiseGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a789a074b5645ad9c7bec1d9acf4e8795</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>aec53b83b3d8893f57e6355866e4d75ae</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::filters</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::dsp::filters</Scope>
    </TokenIdentifier>
    <Path>d8/de5/namespacelimes_1_1dsp_1_1filters.html</Path>
    <Abstract>This namespace contains classes for filtering realtime audio signals.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::filters::Coeffecients</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Abstract>A filter coefficients class, with lots of methods for creating various filter topologies.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilterOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>af0cd78a91266dfcb51f922904a693627</Anchor>
    <Abstract>Returns the filter order associated with the coefficients.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeFirstOrderLowPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a27651d2912a78297830abe274d34a344</Anchor>
    <Abstract>Creates the coefficients for a first order low pass filter.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeFirstOrderHighPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a024e5cbfd05ddd52a6c23525650706a3</Anchor>
    <Abstract>Creates the coefficients for a first order high pass filter.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeFirstOrderAllPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a5cabf3218498433f43788f303edb6a3d</Anchor>
    <Abstract>Creates the coefficients for a first order all-pass filter.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeLowPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>ae32d6e8d7b9460790e6e44234c32a4e6</Anchor>
    <Abstract>Creates the coefficients for a low pass filter, with variable Q.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeHighPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a6366cf30ba36b19510443bdbb7a509b6</Anchor>
    <Abstract>Creates the coefficients for a high pass filter, with variable Q.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeBandPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a08af32d3a59efee7ea73f8bda5313d10</Anchor>
    <Abstract>Creates the coefficients for a band pass filter, with variable Q.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeNotch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>af7e356ea2d67172e6d40f42f058962db</Anchor>
    <Abstract>Creates the coefficients for a notch filter, with variable Q.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAllPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a2811ba1407655a88a176538ed892123d</Anchor>
    <Abstract>Creates the coefficients for an all-pass filter, with variable Q.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeLowShelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>aab4f06950878f9cd757a4fe5fceba10e</Anchor>
    <Abstract>Creates the coefficients for a low-pass shelf filter with variable Q and gain.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeHighShelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>aed56b5bd021fd7f9ee620d5c1b6703c7</Anchor>
    <Abstract>Creates the coefficients for a high-pass shelf filter with variable Q and gain.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makePeakFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a8d3607f27afe32281fce12bc78742322</Anchor>
    <Abstract>Creates the coefficients for a peak filter centred around a given frequency, with a variable Q and ga...</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRawCoefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>ad11f91a2d90c8abd8d941415d7029956</Anchor>
    <Abstract>The raw coefficients.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRawCoefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>aa0eb02531373ef486d27eeb51d36369f</Anchor>
    <Abstract>The raw coefficients.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>df/d82/classlimes_1_1dsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>aeb239f56b7da16795c7ddb2e963e624c</Anchor>
    <Abstract>The raw coefficients.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::filters::Coeffecients::Storage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::dsp::filters::Coeffecients::Storage</Scope>
    </TokenIdentifier>
    <Path>d8/d84/structlimes_1_1dsp_1_1filters_1_1_coeffecients_1_1_storage.html</Path>
    <Abstract>A simple wrapper around a vector, to be used to hold the actual filter coeffecients.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::dsp::filters::Coeffecients::Storage</Scope>
    </TokenIdentifier>
    <Path>d8/d84/structlimes_1_1dsp_1_1filters_1_1_coeffecients_1_1_storage.html</Path>
    <Anchor>a8d285ef1e09d96ac7d488e6a2cb738f0</Anchor>
    <Abstract>The actual storage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::filters::Filter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>d9/dec/classlimes_1_1dsp_1_1filters_1_1_filter.html</Path>
    <Abstract>A basic IIR filter with coefficients that can be reassigned during realtime playback.</Abstract>
    <DeclaredIn>Filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>d9/dec/classlimes_1_1dsp_1_1filters_1_1_filter.html</Path>
    <Anchor>a585e6e0e27899242fa85c46a3b60f9e5</Anchor>
    <Abstract>Prepares the filter to process audio.</Abstract>
    <DeclaredIn>Filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>d9/dec/classlimes_1_1dsp_1_1filters_1_1_filter.html</Path>
    <Anchor>a6e6384876eae3a466ad20dfcd825d0fb</Anchor>
    <Abstract>Resets the internal state of the filter.</Abstract>
    <DeclaredIn>Filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>d9/dec/classlimes_1_1dsp_1_1filters_1_1_filter.html</Path>
    <Anchor>a2750288bf850dd06508091c49a816c6e</Anchor>
    <Abstract>Applies the filter to a stream of audio samples.</Abstract>
    <DeclaredIn>Filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>d9/dec/classlimes_1_1dsp_1_1filters_1_1_filter.html</Path>
    <Anchor>a01c975d48511bf4757d211be47bb5aa3</Anchor>
    <Abstract>Applies the filter to a stream of audio samples.</Abstract>
    <DeclaredIn>Filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coefs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>d9/dec/classlimes_1_1dsp_1_1filters_1_1_filter.html</Path>
    <Anchor>a09a334e3ceb53f43fd28f6cf026d12fb</Anchor>
    <Abstract>The filter&apos;s coefficients.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::osc</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::dsp::osc</Scope>
    </TokenIdentifier>
    <Path>d1/d0a/namespacelimes_1_1dsp_1_1osc.html</Path>
    <Abstract>This namespace contains basic oscillator classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Oscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::dsp::osc</Scope>
    </TokenIdentifier>
    <Path>d1/d0a/namespacelimes_1_1dsp_1_1osc.html</Path>
    <Anchor>aec519f4cfbe85e2c5bc56130bc6552fa</Anchor>
    <Abstract>Convenience typedef for the oscillator base class.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::osc::DetunableModel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d1/d34/classlimes_1_1dsp_1_1osc_1_1_detunable_model.html</Path>
    <Abstract>This class manages a number of oscillator voices, and detunes them around a central pitch,...</Abstract>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DetunableModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d1/d34/classlimes_1_1dsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>a6296d65f4878f239605194c1fc97e2b5</Anchor>
    <Abstract>Creates a detunable model that manages a certain number of voices.</Abstract>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyFrequencies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d1/d34/classlimes_1_1dsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>ac5840f490b81cebd9a13800b5400b635</Anchor>
    <Abstract>Calls a function with each voice&apos;s frequency in the pitch spread.</Abstract>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeNumVoices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d1/d34/classlimes_1_1dsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>ae225dfc60f09796cd121015b58dbda23</Anchor>
    <Abstract>Changes the number of voices being managed.</Abstract>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCenterFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d1/d34/classlimes_1_1dsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>afc13ed5d5432229f567ff79bb59b4d17</Anchor>
    <Abstract>Returns the center frequency all the voices are being detuned around.</Abstract>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d1/d34/classlimes_1_1dsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>aeb7bfa0a3b78bc48a80cfd991146d700</Anchor>
    <Abstract>Returns the frequency for a specific voice number.</Abstract>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumVoices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d1/d34/classlimes_1_1dsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>ae0db0d4c305a9c069167f75790473484</Anchor>
    <Abstract>Returns the number of voices being managed.</Abstract>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchSpreadCents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d1/d34/classlimes_1_1dsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>a1dc28c56cb5f6b4f0627d1e5a0875a2e</Anchor>
    <Abstract>Returns the current spread amount, in cents.</Abstract>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetuneAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d1/d34/classlimes_1_1dsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>ac9535601d40917facc93c747cef5ff81</Anchor>
    <Abstract>Sets the total detune amount, in cents.</Abstract>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d1/d34/classlimes_1_1dsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>a30f9600a5ab472373ec127419deb38b5</Anchor>
    <Abstract>Sets the center frequency around which all the voices will be detuned.</Abstract>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::osc::Saw</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d2/df5/structlimes_1_1dsp_1_1osc_1_1_saw.html</Path>
    <Abstract>A basic sawtooth wave oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Saw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d2/df5/structlimes_1_1dsp_1_1osc_1_1_saw.html</Path>
    <Anchor>a800dac1166e433bf988d686a8cc49d4d</Anchor>
    <Abstract>Constructs a default sawtooth oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d2/df5/structlimes_1_1dsp_1_1osc_1_1_saw.html</Path>
    <Anchor>a2554249f4e5049696a63ca1203bd3032</Anchor>
    <Abstract>Returns the sawtooth wave&apos;s frequency.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a93eb1b866027c610d3d29b49adbd1a3c</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d2/df5/structlimes_1_1dsp_1_1osc_1_1_saw.html</Path>
    <Anchor>ab12ebd7063b5ffe547d42b6e86deed37</Anchor>
    <Abstract>Resets the sawtooth wave&apos;s phase.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d2/df5/structlimes_1_1dsp_1_1osc_1_1_saw.html</Path>
    <Anchor>a14521eccac6e130dadfce392674c4ee2</Anchor>
    <Abstract>Sets the output frequency and samplerate of the sawtooth wave.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>add9247129b2eedf867eb07f84e24a9e9</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::osc::Sine</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>d7/d5a/structlimes_1_1dsp_1_1osc_1_1_sine.html</Path>
    <Abstract>A basic sine wave oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>d7/d5a/structlimes_1_1dsp_1_1osc_1_1_sine.html</Path>
    <Anchor>ac4eec1e314ae785a1eb450a97a7e540b</Anchor>
    <Abstract>Constructs a default sine oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>d7/d5a/structlimes_1_1dsp_1_1osc_1_1_sine.html</Path>
    <Anchor>aa049f7d07650076ffb8ad09f145d8314</Anchor>
    <Abstract>Returns the sine wave&apos;s frequency.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a93eb1b866027c610d3d29b49adbd1a3c</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>d7/d5a/structlimes_1_1dsp_1_1osc_1_1_sine.html</Path>
    <Anchor>ad27336174971f03a91e969bfecfe9a08</Anchor>
    <Abstract>Resets the sine wave&apos;s phase.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>d7/d5a/structlimes_1_1dsp_1_1osc_1_1_sine.html</Path>
    <Anchor>aa5626009a5027d93d08827c67d843d70</Anchor>
    <Abstract>Sets the output frequency and samplerate of the sine wave.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>add9247129b2eedf867eb07f84e24a9e9</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::osc::Square</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/structlimes_1_1dsp_1_1osc_1_1_square.html</Path>
    <Abstract>A basic square wave oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/structlimes_1_1dsp_1_1osc_1_1_square.html</Path>
    <Anchor>ad21aaae6227d7858f3b87a6457fc7e94</Anchor>
    <Abstract>Consructs a default square wave oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/structlimes_1_1dsp_1_1osc_1_1_square.html</Path>
    <Anchor>ae1d2eb8b1dc455e7a54f777901889316</Anchor>
    <Abstract>Returns the square wave&apos;s frequency.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>a93eb1b866027c610d3d29b49adbd1a3c</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/structlimes_1_1dsp_1_1osc_1_1_square.html</Path>
    <Anchor>a3d78b6880d8456a8732fdd07a5be767d</Anchor>
    <Abstract>Resets the square wave&apos;s phase.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/structlimes_1_1dsp_1_1osc_1_1_square.html</Path>
    <Anchor>acac8729b35871a3b556105eacf9f4489</Anchor>
    <Abstract>Sets the square wave&apos;s output frequency and samplerate.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>d7/d63/structlimes_1_1dsp_1_1_sample_stream.html</Path>
    <Anchor>add9247129b2eedf867eb07f84e24a9e9</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::osc::Triangle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d4/d24/structlimes_1_1dsp_1_1osc_1_1_triangle.html</Path>
    <Abstract>A basic triangle wave oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d4/d24/structlimes_1_1dsp_1_1osc_1_1_triangle.html</Path>
    <Anchor>ab46c9e7ecb44933254fcc9fdb8af28d0</Anchor>
    <Abstract>Constructs a default triangle wave.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d4/d24/structlimes_1_1dsp_1_1osc_1_1_triangle.html</Path>
    <Anchor>a6e4f26e990d45ac7d9257bff93e3ea7d</Anchor>
    <Abstract>Returns the square wave&apos;s frequency.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d4/d24/structlimes_1_1dsp_1_1osc_1_1_triangle.html</Path>
    <Anchor>aa0108ba771b355b28ab3f97a6819ec1a</Anchor>
    <Abstract>Resets the triangle wave&apos;s phase.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d4/d24/structlimes_1_1dsp_1_1osc_1_1_triangle.html</Path>
    <Anchor>afa5dc4bd7cbb6171e4ba1632c8375f7e</Anchor>
    <Abstract>Sets the triangle wave&apos;s output frequency and samplerate.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::psola</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::dsp::psola</Scope>
    </TokenIdentifier>
    <Path>d6/d4e/namespacelimes_1_1dsp_1_1psola.html</Path>
    <Abstract>This namespace provides classes for implementing a PSOLA algorithm.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::psola::PeakFinder</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>d6/db6/classlimes_1_1dsp_1_1psola_1_1_peak_finder.html</Path>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PeakFinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>d6/db6/classlimes_1_1dsp_1_1psola_1_1_peak_finder.html</Path>
    <Anchor>a8f25caf391d138794c0849b40d8dd9ba</Anchor>
    <Abstract>Constructor.</Abstract>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findPeaks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>d6/db6/classlimes_1_1dsp_1_1psola_1_1_peak_finder.html</Path>
    <Anchor>a42b1862be4650d287290de0c22af0be4</Anchor>
    <Abstract>Analyzes a stream of audio and identifies the best set of pitch peaks to use for PSOLA pitch shifting...</Abstract>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>d6/db6/classlimes_1_1dsp_1_1psola_1_1_peak_finder.html</Path>
    <Anchor>a28e5fbc5c919ee69e2e7ef26b1c6c1e5</Anchor>
    <Abstract>Prepares the analyzer for a new maximum blocksize.</Abstract>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseResources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>d6/db6/classlimes_1_1dsp_1_1psola_1_1_peak_finder.html</Path>
    <Anchor>a003bd2109db0ff54237f27e6de2b7883</Anchor>
    <Abstract>Releases all resources used by the analyzer.</Abstract>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>d6/db6/classlimes_1_1dsp_1_1psola_1_1_peak_finder.html</Path>
    <Anchor>adb00d0c87150523d6f3a31833f6dcf5c</Anchor>
    <Abstract>Resets the analyzer to its initial state, without freeing any resources.</Abstract>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::psola::PitchDetector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a1febe22aa26291b78b1959fd9cbb08e7</Anchor>
    <Abstract>Convenience typedef for a vector of samples.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PitchDetector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a2c6f9aea5333c7a1a221305cffe27955</Anchor>
    <Abstract>Creates a pitch detector with an initial minimum detectable frequency and confidence threshold.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentLegalPeriodRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>afecb34f51d61ea6083fe1cf20750442d</Anchor>
    <Abstract>Returns the current legal period range for the last analyzed frame of audio.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatencySamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a4cf882fe60d48ddd3beaf278db212ef7</Anchor>
    <Abstract>Returns the latency in samples of the detection algorithm.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a9107221fa4c44e8c75374ddc89ceb222</Anchor>
    <Abstract>Returns the minimum frequency in Hz that this pitch detector is configured to detect.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseResources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a3c566764e1431c5bda0002634366b9f9</Anchor>
    <Abstract>Releases all of the pitch detector&apos;s internal resources.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>ac96adde0c5cebf27e7798fb0716bcb8f</Anchor>
    <Abstract>Resets the internal state of the pitch detector without releasing any resources.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfidenceThresh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a590978d795d1c10924e5f9f4b90f01ab</Anchor>
    <Abstract>Sets the confidence threshold of the pitch detection algorithm.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMinHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>ae80853bc6dc61a8e568b677a0e352be1</Anchor>
    <Abstract>Sets the minimum detectable frequency for the pitch detector.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSamplerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a8cad6007fd0a2c642b4aa47af41c5e26</Anchor>
    <Abstract>Sets the samplerate in Hz of the pitch detector.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a6649faa218eb48a9c1a779d8f05800d2</Anchor>
    <Abstract>Detects the pitch in Hz for a frame of audio.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a3eab04a43808d8c9feb73bfa1682542e</Anchor>
    <Abstract>Detects the pitch in Hz for a frame of audio.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>ac47c8d598df64de8bf9da025ab97de30</Anchor>
    <Abstract>Detects the period, in samples, for a frame of audio.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d5/d03/classlimes_1_1dsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>aeee84dd862849f24519eb846fa615ecc</Anchor>
    <Abstract>Detects the period, in samples, for a frame of audio.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::dsp::psola::Shifter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>d0/dfd/classlimes_1_1dsp_1_1psola_1_1_shifter.html</Path>
    <Abstract>A class that repitches a stream of monophonic audio using PSOLA-like techniques.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Shifter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>d0/dfd/classlimes_1_1dsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>aed7aae0a2c2a21a210612ed319bd984d</Anchor>
    <Abstract>Creates a Shifter.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Shifter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>d0/dfd/classlimes_1_1dsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>abd9dd9677e9e92d099c1031017e1d00a</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>d0/dfd/classlimes_1_1dsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>a828d821a12795e3172c32b2352a8d18d</Anchor>
    <Abstract>Returns the pitch, in Hz, this shifter is outputting.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseResources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>d0/dfd/classlimes_1_1dsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>aa84c5c1774346e603ef015ae83d534d3</Anchor>
    <Abstract>Releases all the resources used by the Shifter.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>d0/dfd/classlimes_1_1dsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>a55d21b21d51c60cb8ffec8c88e3cd402</Anchor>
    <Abstract>Resets the shifter to its initial state, without releasing any resources.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPitchHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>d0/dfd/classlimes_1_1dsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>a28168c68db4288d0cc0b13b591ea838b</Anchor>
    <Abstract>Sets the pitch, in Hz, of the shifter&apos;s output.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>analyzer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>d0/dfd/classlimes_1_1dsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>ab00f0a27448593aa5d009533b91964e5</Anchor>
    <Abstract>The parent Analyzer object that this shifter is a client of.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::files</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d4/d2f/namespacelimes_1_1files.html</Path>
    <Abstract>This namespace contains filesystem utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::files</Scope>
    </TokenIdentifier>
    <Path>d4/d2f/namespacelimes_1_1files.html</Path>
    <Anchor>a9b369c605632b7d321ac920bd06b57bc</Anchor>
    <Abstract>Convenience typedef for filesystem paths.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::files::CFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Abstract>This class is a wrapper around a C-style FILE* that takes care of freeing the file when the object is...</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>a429bc6ba979cfcc94566ea8d4c2bc0e7</Anchor>
    <Abstract>CFile is not copyable.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>ad3826c478c77926d875f068f1feaa234</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>a4eb0302b9bbbedeb9e7add25994f9450</Anchor>
    <Abstract>If the file is currently open, this closes it by calling fclose() .</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>ad2e13c3e72a605f8075f877c8b6567e9</Anchor>
    <Abstract>Returns true if the file is currently open.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>aabd32a305400d25d86e56d60df90fc32</Anchor>
    <Abstract>Opens the given file in the given mode.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>a1f2e41ca49ba9de711e022caf5528f00</Anchor>
    <Abstract>Evaluates to true if the file is currently open.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>af3ee31761b80d8ba8ae136a0c53206be</Anchor>
    <Abstract>Move assignment operator.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>afbdbcd23b36785f37e330af61748c4eb</Anchor>
    <Abstract>CFile is not copyable.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>a3cecd66ac28f61c09040f352b9195ef3</Anchor>
    <Abstract>Creates a default CFile that holds a nullptr.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>a377b0f45d308a6db27a019071417a9c1</Anchor>
    <Abstract>Creates a CFile referencing the given filepath, in the given mode.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>a3537b591c882b7fdd366c8e1d79e3567</Anchor>
    <Abstract>Move constructor.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>a3fb8d8abfa375b2a5ef6b93bc5e5fe22</Anchor>
    <Abstract>Returns the pointer this object holds.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>a402e65a006a69af106e019d1103b9009</Anchor>
    <Abstract>Returns the pointer this object holds.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::CFile</Scope>
    </TokenIdentifier>
    <Path>dd/d30/classlimes_1_1files_1_1_c_file.html</Path>
    <Anchor>aa6b3e72173b532b758c4dc4e42a547be</Anchor>
    <Abstract>Dereferences the pointer this object holds.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::files::Directory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Abstract>This class represents a directory on the filesystem.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Directory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>ac1fda59fafddf1555b3ce3fe8f737f75</Anchor>
    <Abstract>Directory is default copyable.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Directory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a5160122b946082656694b49d386eda4f</Anchor>
    <Abstract>Directory is default movable.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a813c5e74f5f7748392abf59e450b032f</Anchor>
    <Abstract>Changes the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a5ee5668feaf8e5dc9697d2b3e9e7ff89</Anchor>
    <Abstract>Returns true if this directory contains the passed FilesystemEntry.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a0377e3d43d0a79e0f94f04020cc3b4db</Anchor>
    <Abstract>Returns true if this directory contains a child with the specified name.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>afc1630a2ca11608817afc45b7259a192</Anchor>
    <Abstract>Overwriting.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2e0e0d1f66621a1d3d02dcd435c710d3</Anchor>
    <Abstract>Creates a copy of this filesystem object, with the same filename, in a different directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIfDoesntExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a48c3c4d086f8638b3c8d82528975a185</Anchor>
    <Abstract>Creates the directory this object refers to, if it doesn&apos;t already exist.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteIfExists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af92959c0034988e8916e785f5d032853</Anchor>
    <Abstract>Deletes the filesystem entry this object refers to, if it exists.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0c87f867a75ee2330072e9e91895af16</Anchor>
    <Abstract>Returns true if the filesystem object this object refers to exists on disk.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a6837e96187fad2f1accd6b79a0e3a5cf</Anchor>
    <Abstract>Creates a FilesystemEntry with an empty path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a55827ee7992dcc8a26a31ef2d4fa7337</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>af3cd09fff8be85dda7c6902bf0b5c9c5</Anchor>
    <Abstract>Creates a FilesystemEntry referring to the specified path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a8a2f67ecba8c860a35e8a97c483b3997</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0eae45ce1561bf72e33ec75ab53a232f</Anchor>
    <Abstract>Returns the full, absolute path of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a4250489ddcaf673b8dca97ae5bacd2ab</Anchor>
    <Abstract>Returns all child filesystem entries that exist in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a5dc7acf9df160ac077676d52619d8e5d</Anchor>
    <Abstract>Returns a type-erased FilesystemEntry representing a filesystem object in this directory with the spe...</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2c6d40629d81eca75a5d6d7e4715cdef</Anchor>
    <Abstract>Returns the directory containing this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af6570e86f2840432f148376076d02594</Anchor>
    <Abstract>If this object refers to a directory, constructs a Directory object referring to the same directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>abc3456c403f683df46d1ed5d17fa8274</Anchor>
    <Abstract>If this object refers to a file, constructs a File object referring to the same file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a614d61d25bf568b0de95474125c15718</Anchor>
    <Abstract>Returns the last modification time of the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af145ee65370d4ddf5e964d0d2ed85dc9</Anchor>
    <Abstract>Returns the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParentDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>acaa8fc6f3a48bac82c94b4536e1b73d7</Anchor>
    <Abstract>Returns the parent directory of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0773027fdfe1edd5a1819a60cbe61dda</Anchor>
    <Abstract>Returns the current path held by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a89ef140a9263208c86e42acb1610cdb8</Anchor>
    <Abstract>Returns the current permissions of the filesystem entry this object refers to.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a8a549c852527e0a39d5f28e8c17d250f</Anchor>
    <Abstract>Returns the input path made relative to this directory&apos;s path.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymLinkObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ade7c64e7c3f1519c8cc031af0c9bd1e0</Anchor>
    <Abstract>If this object refers to a symbolic link, constructs a SymLink object referring to the same link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae2f76345dd51a0711685dcabf4281222</Anchor>
    <Abstract>Returns true if the path this object holds is a relative path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrentWorkingDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>aacee8c5bf83b5cb2e4a75b480062d57f</Anchor>
    <Abstract>Returns true if this directory is the current working directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a53be2187431d94020c5ac2d88e083ae3</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a4df651c6e70ed0f994c000f43e9f9049</Anchor>
    <Abstract>Returns true if this directory contains no children.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>affc28938364e3c9567ec0542fb83da75</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ab600bc5b74ee21dcb468400172ea0c96</Anchor>
    <Abstract>Returns true if the filename of this object begins with a .</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6e6b908424d03bb59bd865f7a3b2ae48</Anchor>
    <Abstract>Returns true if the path this object holds is an absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a372931dfb7269595625be23b773f266d</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a symbolic link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a63f9049d6ded60b90d39705a248c43be</Anchor>
    <Abstract>Returns true if this object holds a valid filesystem path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterateAllChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>ae54bab0682ba86b9725526eed5e8fb8c</Anchor>
    <Abstract>Iterates through all child objects of this directory, calling different callbacks for each object dep...</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterateAllChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a2d6d86b8814339a8e6def300703aa2a2</Anchor>
    <Abstract>Iterates through all child objects of this directory, calling a single type-erased callback for each ...</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8edaa47b3ec229af6f96ee2457e633d2</Anchor>
    <Abstract>If the path this object holds is already absolute, this function does nothing.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeToCWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a389035084450a378047d413054b56eeb</Anchor>
    <Abstract>Similar to makeAbsoluteRelativeTo(), but uses the current working directory as the base path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a19f0cc29126fde0dd07e940cf11ccb22</Anchor>
    <Abstract>Converts this filesystem entry to its absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6d38b6b295518d14632f03457276e9a5</Anchor>
    <Abstract>Returns a new FilesystemEntry referring to a subpath of this one.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0b9079d111f9f6dc0bf1e450bbbce052</Anchor>
    <Abstract>Assigns this object&apos;s path to a subpath of the current path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a30260d960a65ab762be51dbbdb30dc72</Anchor>
    <Abstract>Directory is default copyable.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>ae1cc63bb6ac43e7cb66324445935b331</Anchor>
    <Abstract>Directory is default movable.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0b0f7cd6712487a341837b36576b8222</Anchor>
    <Abstract>Renames this filesystem object to a new path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6f9c1e65e4055a037588c41bbf51905e</Anchor>
    <Abstract>Renames this filesystem entry to a new filename within its current directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsWorkingDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>ace1d64217949bf0dc4d376d95eac403e</Anchor>
    <Abstract>Sets this directory as the current working directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae3fe6aabdb110bc6bea69aa6df4777c8</Anchor>
    <Abstract>Sets the permissions for the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a4b101e1ff2461ce286e541d49cb72de0</Anchor>
    <Abstract>Returns the size of this directory, calculated as the cumulative size of all this directory&apos;s content...</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7fa4cd4b03de7654ad7be7b026e45da6</Anchor>
    <Abstract>If the filesystem entry this object refers do doesn&apos;t exist, this function creates it.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch_noCreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2e495352f79252fa9ed62845e78c5c99</Anchor>
    <Abstract>The same as touch(), except this function does not create the filesystem entry if it didn&apos;t already e...</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a3019832824cd0fbd324e23825af214b5</Anchor>
    <Abstract>Assigns this object to refer to a new path.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>ad308913b72b186171ee4e5fd1058a3a5</Anchor>
    <Abstract>Assigns this object to refer to a new path.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a4bf7234a8b52b6a0bfa929e6273052ec</Anchor>
    <Abstract>Returns a File object representing a file in this directory with the specified name.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildFiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a502e2ed4ea1d963528458c1a75af1f90</Anchor>
    <Abstract>Returns all child files that exist in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterateFiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a45693142f7e26c517757557dea9b1dc7</Anchor>
    <Abstract>Calls a function for each child file that exists in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a33b17e6246d1e2ec14a73a95043fef92</Anchor>
    <Abstract>Returns a Directory object that represents a subdirectory of this one with the specified name.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildDirectories</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a54876728766643404da3d353914026e8</Anchor>
    <Abstract>Returns all child directories that exist in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterateDirectories</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>af1b82ccc286441381ea9c5d2743d822b</Anchor>
    <Abstract>Calls a function for each child directory that exists in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createChildSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>aafc7549e4cadae2e99b141ad7ee19d56</Anchor>
    <Abstract>Child symbolic links.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildSymLinks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>abef982393515259484aee3aee35c8ff7</Anchor>
    <Abstract>Returns all child symbolic links that exist in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterateSymLinks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a943d23a7f5d62cb82ad496d3abb634af</Anchor>
    <Abstract>Calls a function for each child symbolic link that exists in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentWorkingDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>afe631e96bcffb17cfc290a931a89c8db</Anchor>
    <Abstract>Returns a directory object representing the current working directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPATH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>af5ac63817a5f029011681befa51c5bc5</Anchor>
    <Abstract>Returns the contents of the PATH environment variable as a vector of Directory objects.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTempFileDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::files::Directory</Scope>
    </TokenIdentifier>
    <Path>db/de1/classlimes_1_1files_1_1_directory.html</Path>
    <Anchor>a0398cef7012f5a5538f07ec6dd2cec47</Anchor>
    <Abstract>Returns a directory appropriate for storing temporary files.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::files::DynamicLibrary</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Abstract>This class represents a dynamically loaded library.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>a83188d5389a35e8c6c07e9a8441ba212</Anchor>
    <Abstract>DynamicLibrary is default copyable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>aafb08f56d4e16a6e8733929d75bf9df2</Anchor>
    <Abstract>DynamicLibrary is default movable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DynamicLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>ac377a197d8dc8c570ba77553e7a63cda</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>afff5f80b6f3939f52cb0d7b2345f13cc</Anchor>
    <Abstract>Closes the shared library, if one is open.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>ace38b34ffb08fb41824278647619ae8a</Anchor>
    <Abstract>Attempts to locate a function within the shared library, and, if found, returns a pointer to the func...</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>a98a8101632dc7eb026b1dd6a284b2630</Anchor>
    <Abstract>Attempts to locate the file on disk where the code for the current shared library is actually located...</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>a5ad4818dd58d67b233b2507175b8ac34</Anchor>
    <Abstract>Returns an opaque platform-specific handle to the currently open shared library (if any).</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>a0bb4b3c974da87dfa5ab547d36511218</Anchor>
    <Abstract>Attempts to determine the name of the library, if it is open.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>acc45045af56c00758e333f5316839036</Anchor>
    <Abstract>Returns true if the library is currently open.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>a3f8c65babd1a4375084903fa3b1d1ee9</Anchor>
    <Abstract>Attempts to open a new shared library.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>a75e62333dd144637fc42756fb90264f1</Anchor>
    <Abstract>Returns true if this library object does not refer to the same shared library as the other one.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>aa562f770623453e99be5c4f64aac96e0</Anchor>
    <Abstract>DynamicLibrary is default copyable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>a83481c237a04959d2ad172db24904347</Anchor>
    <Abstract>DynamicLibrary is default movable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>a2835690fb71fb4dde2a29f8823977283</Anchor>
    <Abstract>Returns true if this library object refers to the same shared library as the other one.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>a2791ac8655ec1dd90f86d79c801e330c</Anchor>
    <Abstract>Creates an unopened library object.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/dd3/classlimes_1_1files_1_1_dynamic_library.html</Path>
    <Anchor>af8b6584652d2f7c300b2b7a60ac5f736</Anchor>
    <Abstract>Creates a library object and attempts to open the specified library.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::files::File</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Abstract>This class represents a file on the filesystem.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>File</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>ae76499c311f6226899bdcfea2c0f1abc</Anchor>
    <Abstract>File is default copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>File</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a45176e613e34e83e12a12f2d2e24b78c</Anchor>
    <Abstract>File is default movable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a813c5e74f5f7748392abf59e450b032f</Anchor>
    <Abstract>Changes the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>afc1630a2ca11608817afc45b7259a192</Anchor>
    <Abstract>Overwriting.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2e0e0d1f66621a1d3d02dcd435c710d3</Anchor>
    <Abstract>Creates a copy of this filesystem object, with the same filename, in a different directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIfDoesntExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>aff5e5220c7afa6ba6a8a0c37d439bcb0</Anchor>
    <Abstract>Creates the filesystem entry this object refers to, if it doesn&apos;t already exist.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteIfExists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af92959c0034988e8916e785f5d032853</Anchor>
    <Abstract>Deletes the filesystem entry this object refers to, if it exists.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a1890722ae740ed51db8a9674b4bea456</Anchor>
    <Abstract>Duplicates this file within its directory.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0c87f867a75ee2330072e9e91895af16</Anchor>
    <Abstract>Returns true if the filesystem object this object refers to exists on disk.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a6837e96187fad2f1accd6b79a0e3a5cf</Anchor>
    <Abstract>Creates a FilesystemEntry with an empty path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a55827ee7992dcc8a26a31ef2d4fa7337</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>af3cd09fff8be85dda7c6902bf0b5c9c5</Anchor>
    <Abstract>Creates a FilesystemEntry referring to the specified path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a8a2f67ecba8c860a35e8a97c483b3997</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0eae45ce1561bf72e33ec75ab53a232f</Anchor>
    <Abstract>Returns the full, absolute path of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a89ee2d65090e111fb062620a01639296</Anchor>
    <Abstract>Returns a CFile referring to this file.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2c6d40629d81eca75a5d6d7e4715cdef</Anchor>
    <Abstract>Returns the directory containing this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af6570e86f2840432f148376076d02594</Anchor>
    <Abstract>If this object refers to a directory, constructs a Directory object referring to the same directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a27483cd6bb494a1e390d4579f518d7c7</Anchor>
    <Abstract>Returns this file&apos;s file extension, if any.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a65c9ba797f3ec8f1a135269481319d83</Anchor>
    <Abstract>Returns this file&apos;s filename.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>abc3456c403f683df46d1ed5d17fa8274</Anchor>
    <Abstract>If this object refers to a file, constructs a File object referring to the same file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a614d61d25bf568b0de95474125c15718</Anchor>
    <Abstract>Returns the last modification time of the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af145ee65370d4ddf5e964d0d2ed85dc9</Anchor>
    <Abstract>Returns the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParentDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>acaa8fc6f3a48bac82c94b4536e1b73d7</Anchor>
    <Abstract>Returns the parent directory of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0773027fdfe1edd5a1819a60cbe61dda</Anchor>
    <Abstract>Returns the current path held by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a89ef140a9263208c86e42acb1610cdb8</Anchor>
    <Abstract>Returns the current permissions of the filesystem entry this object refers to.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymLinkObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ade7c64e7c3f1519c8cc031af0c9bd1e0</Anchor>
    <Abstract>If this object refers to a symbolic link, constructs a SymLink object referring to the same link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a2f2e1f4885a35eda86935c0c507701a6</Anchor>
    <Abstract>Returns true if this file has a file extension.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a09fc5b263698be070e44597e5ed46927</Anchor>
    <Abstract>Returns true if this file has the specified file extension.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a1016cf8c87676da58a709af3f868d2f6</Anchor>
    <Abstract>Calculates a hash of the file&apos;s content using the specified hash type.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae2f76345dd51a0711685dcabf4281222</Anchor>
    <Abstract>Returns true if the path this object holds is a relative path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a53be2187431d94020c5ac2d88e083ae3</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>affc28938364e3c9567ec0542fb83da75</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ab600bc5b74ee21dcb468400172ea0c96</Anchor>
    <Abstract>Returns true if the filename of this object begins with a .</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6e6b908424d03bb59bd865f7a3b2ae48</Anchor>
    <Abstract>Returns true if the path this object holds is an absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a372931dfb7269595625be23b773f266d</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a symbolic link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a63f9049d6ded60b90d39705a248c43be</Anchor>
    <Abstract>Returns true if this object holds a valid filesystem path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8edaa47b3ec229af6f96ee2457e633d2</Anchor>
    <Abstract>If the path this object holds is already absolute, this function does nothing.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeToCWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a389035084450a378047d413054b56eeb</Anchor>
    <Abstract>Similar to makeAbsoluteRelativeTo(), but uses the current working directory as the base path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a19f0cc29126fde0dd07e940cf11ccb22</Anchor>
    <Abstract>Converts this filesystem entry to its absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6d38b6b295518d14632f03457276e9a5</Anchor>
    <Abstract>Returns a new FilesystemEntry referring to a subpath of this one.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0b9079d111f9f6dc0bf1e450bbbce052</Anchor>
    <Abstract>Assigns this object&apos;s path to a subpath of the current path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a155fcfd4a8847132b29f9886d8662e92</Anchor>
    <Abstract>File is default copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>af9f7765ac8fefddb7a22a5c71ce7d0b5</Anchor>
    <Abstract>File is default movable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0b0f7cd6712487a341837b36576b8222</Anchor>
    <Abstract>Renames this filesystem object to a new path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6f9c1e65e4055a037588c41bbf51905e</Anchor>
    <Abstract>Renames this filesystem entry to a new filename within its current directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a3fdb9587a43fbb71e21ee1139e32ad91</Anchor>
    <Abstract>Replaces the filename in the path this object refers to.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae3fe6aabdb110bc6bea69aa6df4777c8</Anchor>
    <Abstract>Sets the permissions for the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a35360245811558df87f6362bb979e669</Anchor>
    <Abstract>Returns the size, in bytes, of the filesystem entry referred to by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7fa4cd4b03de7654ad7be7b026e45da6</Anchor>
    <Abstract>If the filesystem entry this object refers do doesn&apos;t exist, this function creates it.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch_noCreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2e495352f79252fa9ed62845e78c5c99</Anchor>
    <Abstract>The same as touch(), except this function does not create the filesystem entry if it didn&apos;t already e...</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a223fafd66672d5003d821870036539da</Anchor>
    <Abstract>Assigns this object to refer to a new path.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a52eb39edc95d049e8e83bb1b43f7f017</Anchor>
    <Abstract>Assigns this object to refer to a new path.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentExecutable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a59340d0aa6ba49e4d54ec33a24238572</Anchor>
    <Abstract>Returns a file representing the location of the executable file that launched the current process.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentModule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>afa6800b8f00f81fc02b0402a45896708</Anchor>
    <Abstract>Returns a file representing the location of the current code module.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::files::FilesystemEntry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Abstract>The base class for any kind of object in the filesystem.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a55827ee7992dcc8a26a31ef2d4fa7337</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8a2f67ecba8c860a35e8a97c483b3997</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a926cbf8d0aae5a1306b23bd277f47da1</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a813c5e74f5f7748392abf59e450b032f</Anchor>
    <Abstract>Changes the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>afc1630a2ca11608817afc45b7259a192</Anchor>
    <Abstract>Overwriting.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2e0e0d1f66621a1d3d02dcd435c710d3</Anchor>
    <Abstract>Creates a copy of this filesystem object, with the same filename, in a different directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIfDoesntExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>aff5e5220c7afa6ba6a8a0c37d439bcb0</Anchor>
    <Abstract>Creates the filesystem entry this object refers to, if it doesn&apos;t already exist.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteIfExists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af92959c0034988e8916e785f5d032853</Anchor>
    <Abstract>Deletes the filesystem entry this object refers to, if it exists.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0c87f867a75ee2330072e9e91895af16</Anchor>
    <Abstract>Returns true if the filesystem object this object refers to exists on disk.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0eae45ce1561bf72e33ec75ab53a232f</Anchor>
    <Abstract>Returns the full, absolute path of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2c6d40629d81eca75a5d6d7e4715cdef</Anchor>
    <Abstract>Returns the directory containing this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af6570e86f2840432f148376076d02594</Anchor>
    <Abstract>If this object refers to a directory, constructs a Directory object referring to the same directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>abc3456c403f683df46d1ed5d17fa8274</Anchor>
    <Abstract>If this object refers to a file, constructs a File object referring to the same file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a614d61d25bf568b0de95474125c15718</Anchor>
    <Abstract>Returns the last modification time of the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af145ee65370d4ddf5e964d0d2ed85dc9</Anchor>
    <Abstract>Returns the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParentDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>acaa8fc6f3a48bac82c94b4536e1b73d7</Anchor>
    <Abstract>Returns the parent directory of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0773027fdfe1edd5a1819a60cbe61dda</Anchor>
    <Abstract>Returns the current path held by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a89ef140a9263208c86e42acb1610cdb8</Anchor>
    <Abstract>Returns the current permissions of the filesystem entry this object refers to.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymLinkObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ade7c64e7c3f1519c8cc031af0c9bd1e0</Anchor>
    <Abstract>If this object refers to a symbolic link, constructs a SymLink object referring to the same link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae2f76345dd51a0711685dcabf4281222</Anchor>
    <Abstract>Returns true if the path this object holds is a relative path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a53be2187431d94020c5ac2d88e083ae3</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>affc28938364e3c9567ec0542fb83da75</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ab600bc5b74ee21dcb468400172ea0c96</Anchor>
    <Abstract>Returns true if the filename of this object begins with a .</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6e6b908424d03bb59bd865f7a3b2ae48</Anchor>
    <Abstract>Returns true if the path this object holds is an absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a372931dfb7269595625be23b773f266d</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a symbolic link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a63f9049d6ded60b90d39705a248c43be</Anchor>
    <Abstract>Returns true if this object holds a valid filesystem path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8edaa47b3ec229af6f96ee2457e633d2</Anchor>
    <Abstract>If the path this object holds is already absolute, this function does nothing.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeToCWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a389035084450a378047d413054b56eeb</Anchor>
    <Abstract>Similar to makeAbsoluteRelativeTo(), but uses the current working directory as the base path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a19f0cc29126fde0dd07e940cf11ccb22</Anchor>
    <Abstract>Converts this filesystem entry to its absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6d38b6b295518d14632f03457276e9a5</Anchor>
    <Abstract>Returns a new FilesystemEntry referring to a subpath of this one.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0b9079d111f9f6dc0bf1e450bbbce052</Anchor>
    <Abstract>Assigns this object&apos;s path to a subpath of the current path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7a64374a1a8f7a560a6585dbd7718c97</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a3eaca825658a5cea6df5c37d0a15c849</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0b0f7cd6712487a341837b36576b8222</Anchor>
    <Abstract>Renames this filesystem object to a new path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6f9c1e65e4055a037588c41bbf51905e</Anchor>
    <Abstract>Renames this filesystem entry to a new filename within its current directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae3fe6aabdb110bc6bea69aa6df4777c8</Anchor>
    <Abstract>Sets the permissions for the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a35360245811558df87f6362bb979e669</Anchor>
    <Abstract>Returns the size, in bytes, of the filesystem entry referred to by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7fa4cd4b03de7654ad7be7b026e45da6</Anchor>
    <Abstract>If the filesystem entry this object refers do doesn&apos;t exist, this function creates it.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch_noCreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2e495352f79252fa9ed62845e78c5c99</Anchor>
    <Abstract>The same as touch(), except this function does not create the filesystem entry if it didn&apos;t already e...</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6837e96187fad2f1accd6b79a0e3a5cf</Anchor>
    <Abstract>Creates a FilesystemEntry with an empty path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af3cd09fff8be85dda7c6902bf0b5c9c5</Anchor>
    <Abstract>Creates a FilesystemEntry referring to the specified path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a5c18b0e61674dcfc66c586f5635b3e4c</Anchor>
    <Abstract>Assigns the path this filesystem entry represents.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a1eda638315d79819fede26b8b821949c</Anchor>
    <Abstract>Assigns the path this filesystem entry represents.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8eb71ce03cdc6c9a6f6859cde8ec8f51</Anchor>
    <Abstract>Assigns the path this filesystem entry represents.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::files::SymLink</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Abstract>This class represents a symbolic link on the filesystem.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>afc94e16262bb2bac9fa654e7706dab9c</Anchor>
    <Abstract>Creates a symbolic link object (the link itself will also be created on the filesystem).</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>a9b1f2edc64e78eadbd3087398601c24a</Anchor>
    <Abstract>SymLink is default copyable.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>a2109199acac91ee3c9dee00a23891ef8</Anchor>
    <Abstract>SymLink is default movable.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a813c5e74f5f7748392abf59e450b032f</Anchor>
    <Abstract>Changes the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>afc1630a2ca11608817afc45b7259a192</Anchor>
    <Abstract>Overwriting.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2e0e0d1f66621a1d3d02dcd435c710d3</Anchor>
    <Abstract>Creates a copy of this filesystem object, with the same filename, in a different directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIfDoesntExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>aff5e5220c7afa6ba6a8a0c37d439bcb0</Anchor>
    <Abstract>Creates the filesystem entry this object refers to, if it doesn&apos;t already exist.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteIfExists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af92959c0034988e8916e785f5d032853</Anchor>
    <Abstract>Deletes the filesystem entry this object refers to, if it exists.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0c87f867a75ee2330072e9e91895af16</Anchor>
    <Abstract>Returns true if the filesystem object this object refers to exists on disk.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>a6837e96187fad2f1accd6b79a0e3a5cf</Anchor>
    <Abstract>Creates a FilesystemEntry with an empty path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>a55827ee7992dcc8a26a31ef2d4fa7337</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>af3cd09fff8be85dda7c6902bf0b5c9c5</Anchor>
    <Abstract>Creates a FilesystemEntry referring to the specified path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>a8a2f67ecba8c860a35e8a97c483b3997</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>follow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>a7dd4aeb0eeef4a2bb3deb64a1850e785</Anchor>
    <Abstract>Follows the symbolic link to find its target.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0eae45ce1561bf72e33ec75ab53a232f</Anchor>
    <Abstract>Returns the full, absolute path of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2c6d40629d81eca75a5d6d7e4715cdef</Anchor>
    <Abstract>Returns the directory containing this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af6570e86f2840432f148376076d02594</Anchor>
    <Abstract>If this object refers to a directory, constructs a Directory object referring to the same directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>abc3456c403f683df46d1ed5d17fa8274</Anchor>
    <Abstract>If this object refers to a file, constructs a File object referring to the same file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a614d61d25bf568b0de95474125c15718</Anchor>
    <Abstract>Returns the last modification time of the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af145ee65370d4ddf5e964d0d2ed85dc9</Anchor>
    <Abstract>Returns the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParentDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>acaa8fc6f3a48bac82c94b4536e1b73d7</Anchor>
    <Abstract>Returns the parent directory of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0773027fdfe1edd5a1819a60cbe61dda</Anchor>
    <Abstract>Returns the current path held by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a89ef140a9263208c86e42acb1610cdb8</Anchor>
    <Abstract>Returns the current permissions of the filesystem entry this object refers to.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymLinkObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ade7c64e7c3f1519c8cc031af0c9bd1e0</Anchor>
    <Abstract>If this object refers to a symbolic link, constructs a SymLink object referring to the same link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae2f76345dd51a0711685dcabf4281222</Anchor>
    <Abstract>Returns true if the path this object holds is a relative path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a53be2187431d94020c5ac2d88e083ae3</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>affc28938364e3c9567ec0542fb83da75</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ab600bc5b74ee21dcb468400172ea0c96</Anchor>
    <Abstract>Returns true if the filename of this object begins with a .</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6e6b908424d03bb59bd865f7a3b2ae48</Anchor>
    <Abstract>Returns true if the path this object holds is an absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a372931dfb7269595625be23b773f266d</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a symbolic link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a63f9049d6ded60b90d39705a248c43be</Anchor>
    <Abstract>Returns true if this object holds a valid filesystem path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8edaa47b3ec229af6f96ee2457e633d2</Anchor>
    <Abstract>If the path this object holds is already absolute, this function does nothing.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeToCWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a389035084450a378047d413054b56eeb</Anchor>
    <Abstract>Similar to makeAbsoluteRelativeTo(), but uses the current working directory as the base path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a19f0cc29126fde0dd07e940cf11ccb22</Anchor>
    <Abstract>Converts this filesystem entry to its absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6d38b6b295518d14632f03457276e9a5</Anchor>
    <Abstract>Returns a new FilesystemEntry referring to a subpath of this one.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0b9079d111f9f6dc0bf1e450bbbce052</Anchor>
    <Abstract>Assigns this object&apos;s path to a subpath of the current path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>a5354c2a21f6f44b533048ead160f8909</Anchor>
    <Abstract>SymLink is default copyable.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>a3d009ee0352ee33c801864294508ec11</Anchor>
    <Abstract>SymLink is default movable.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>references</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>afb4bc89772fa83ec7465fb0b0bd0399e</Anchor>
    <Abstract>Returns true if this symbolic link references the given FilesystemEntry, either as its immediate targ...</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referencesSameLocationAs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>aac9ce8f0e567b58479368653836be27f</Anchor>
    <Abstract>Returns true if the other symbolic link references the same target as this one, either as its immedia...</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0b0f7cd6712487a341837b36576b8222</Anchor>
    <Abstract>Renames this filesystem object to a new path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6f9c1e65e4055a037588c41bbf51905e</Anchor>
    <Abstract>Renames this filesystem entry to a new filename within its current directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae3fe6aabdb110bc6bea69aa6df4777c8</Anchor>
    <Abstract>Sets the permissions for the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a35360245811558df87f6362bb979e669</Anchor>
    <Abstract>Returns the size, in bytes, of the filesystem entry referred to by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7fa4cd4b03de7654ad7be7b026e45da6</Anchor>
    <Abstract>If the filesystem entry this object refers do doesn&apos;t exist, this function creates it.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch_noCreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2e495352f79252fa9ed62845e78c5c99</Anchor>
    <Abstract>The same as touch(), except this function does not create the filesystem entry if it didn&apos;t already e...</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>ab2b53effba988e24a7e7ea4a713b220d</Anchor>
    <Abstract>Creates a symbolic link on the filesystem.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::files::SymLink</Scope>
    </TokenIdentifier>
    <Path>d8/db4/classlimes_1_1files_1_1_sym_link.html</Path>
    <Anchor>aa3ec6430d0f16c0500c676039d7d94d4</Anchor>
    <Abstract>Creates a symbolic link on the filesystem.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::files::TempFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d7/df8/classlimes_1_1files_1_1_temp_file.html</Path>
    <Abstract>Represents a temporary file.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TempFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d7/df8/classlimes_1_1files_1_1_temp_file.html</Path>
    <Anchor>a1a31c3dfed7fd9cdcbe089e1e46e6a2b</Anchor>
    <Abstract>Creates a temporary file with the specified filename.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TempFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d7/df8/classlimes_1_1files_1_1_temp_file.html</Path>
    <Anchor>aa55b35efe608db7651d3be210d3d1287</Anchor>
    <Abstract>TempFile is not copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TempFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d7/df8/classlimes_1_1files_1_1_temp_file.html</Path>
    <Anchor>a5b6e033362982e36f03a8121f205a454</Anchor>
    <Abstract>Move constructor.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TempFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d7/df8/classlimes_1_1files_1_1_temp_file.html</Path>
    <Anchor>a9ba2d56f21404eda8552fd28045ffe47</Anchor>
    <Abstract>The temporary file will be deleted from the filesystem when this object is destroyed,...</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a813c5e74f5f7748392abf59e450b032f</Anchor>
    <Abstract>Changes the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>afc1630a2ca11608817afc45b7259a192</Anchor>
    <Abstract>Overwriting.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2e0e0d1f66621a1d3d02dcd435c710d3</Anchor>
    <Abstract>Creates a copy of this filesystem object, with the same filename, in a different directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIfDoesntExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>aff5e5220c7afa6ba6a8a0c37d439bcb0</Anchor>
    <Abstract>Creates the filesystem entry this object refers to, if it doesn&apos;t already exist.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteIfExists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af92959c0034988e8916e785f5d032853</Anchor>
    <Abstract>Deletes the filesystem entry this object refers to, if it exists.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a1890722ae740ed51db8a9674b4bea456</Anchor>
    <Abstract>Duplicates this file within its directory.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0c87f867a75ee2330072e9e91895af16</Anchor>
    <Abstract>Returns true if the filesystem object this object refers to exists on disk.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a6837e96187fad2f1accd6b79a0e3a5cf</Anchor>
    <Abstract>Creates a FilesystemEntry with an empty path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a55827ee7992dcc8a26a31ef2d4fa7337</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>af3cd09fff8be85dda7c6902bf0b5c9c5</Anchor>
    <Abstract>Creates a FilesystemEntry referring to the specified path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a8a2f67ecba8c860a35e8a97c483b3997</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0eae45ce1561bf72e33ec75ab53a232f</Anchor>
    <Abstract>Returns the full, absolute path of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a89ee2d65090e111fb062620a01639296</Anchor>
    <Abstract>Returns a CFile referring to this file.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2c6d40629d81eca75a5d6d7e4715cdef</Anchor>
    <Abstract>Returns the directory containing this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af6570e86f2840432f148376076d02594</Anchor>
    <Abstract>If this object refers to a directory, constructs a Directory object referring to the same directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a27483cd6bb494a1e390d4579f518d7c7</Anchor>
    <Abstract>Returns this file&apos;s file extension, if any.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a65c9ba797f3ec8f1a135269481319d83</Anchor>
    <Abstract>Returns this file&apos;s filename.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>abc3456c403f683df46d1ed5d17fa8274</Anchor>
    <Abstract>If this object refers to a file, constructs a File object referring to the same file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a614d61d25bf568b0de95474125c15718</Anchor>
    <Abstract>Returns the last modification time of the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>af145ee65370d4ddf5e964d0d2ed85dc9</Anchor>
    <Abstract>Returns the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParentDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>acaa8fc6f3a48bac82c94b4536e1b73d7</Anchor>
    <Abstract>Returns the parent directory of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0773027fdfe1edd5a1819a60cbe61dda</Anchor>
    <Abstract>Returns the current path held by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a89ef140a9263208c86e42acb1610cdb8</Anchor>
    <Abstract>Returns the current permissions of the filesystem entry this object refers to.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymLinkObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ade7c64e7c3f1519c8cc031af0c9bd1e0</Anchor>
    <Abstract>If this object refers to a symbolic link, constructs a SymLink object referring to the same link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a2f2e1f4885a35eda86935c0c507701a6</Anchor>
    <Abstract>Returns true if this file has a file extension.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a09fc5b263698be070e44597e5ed46927</Anchor>
    <Abstract>Returns true if this file has the specified file extension.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a1016cf8c87676da58a709af3f868d2f6</Anchor>
    <Abstract>Calculates a hash of the file&apos;s content using the specified hash type.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae2f76345dd51a0711685dcabf4281222</Anchor>
    <Abstract>Returns true if the path this object holds is a relative path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a53be2187431d94020c5ac2d88e083ae3</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>affc28938364e3c9567ec0542fb83da75</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ab600bc5b74ee21dcb468400172ea0c96</Anchor>
    <Abstract>Returns true if the filename of this object begins with a .</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6e6b908424d03bb59bd865f7a3b2ae48</Anchor>
    <Abstract>Returns true if the path this object holds is an absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a372931dfb7269595625be23b773f266d</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a symbolic link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a63f9049d6ded60b90d39705a248c43be</Anchor>
    <Abstract>Returns true if this object holds a valid filesystem path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8edaa47b3ec229af6f96ee2457e633d2</Anchor>
    <Abstract>If the path this object holds is already absolute, this function does nothing.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeToCWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a389035084450a378047d413054b56eeb</Anchor>
    <Abstract>Similar to makeAbsoluteRelativeTo(), but uses the current working directory as the base path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a19f0cc29126fde0dd07e940cf11ccb22</Anchor>
    <Abstract>Converts this filesystem entry to its absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6d38b6b295518d14632f03457276e9a5</Anchor>
    <Abstract>Returns a new FilesystemEntry referring to a subpath of this one.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0b9079d111f9f6dc0bf1e450bbbce052</Anchor>
    <Abstract>Assigns this object&apos;s path to a subpath of the current path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d7/df8/classlimes_1_1files_1_1_temp_file.html</Path>
    <Anchor>af3fce20ebbfa2aae9e86bdee1f779d86</Anchor>
    <Abstract>TempFile is not copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d7/df8/classlimes_1_1files_1_1_temp_file.html</Path>
    <Anchor>a4750cea6719e7f97c4316c59e2305bcf</Anchor>
    <Abstract>Move assignment operator.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a0b0f7cd6712487a341837b36576b8222</Anchor>
    <Abstract>Renames this filesystem object to a new path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a6f9c1e65e4055a037588c41bbf51905e</Anchor>
    <Abstract>Renames this filesystem entry to a new filename within its current directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a3fdb9587a43fbb71e21ee1139e32ad91</Anchor>
    <Abstract>Replaces the filename in the path this object refers to.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae3fe6aabdb110bc6bea69aa6df4777c8</Anchor>
    <Abstract>Sets the permissions for the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a35360245811558df87f6362bb979e669</Anchor>
    <Abstract>Returns the size, in bytes, of the filesystem entry referred to by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7fa4cd4b03de7654ad7be7b026e45da6</Anchor>
    <Abstract>If the filesystem entry this object refers do doesn&apos;t exist, this function creates it.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch_noCreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a2e495352f79252fa9ed62845e78c5c99</Anchor>
    <Abstract>The same as touch(), except this function does not create the filesystem entry if it didn&apos;t already e...</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8eb71ce03cdc6c9a6f6859cde8ec8f51</Anchor>
    <Abstract>Assigns the path this filesystem entry represents.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a9769e7f27fea1f1b437c6b4ae1517a7f</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a740503af22b77d69386a2a9ef5e647ef</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7f37e70f24765041c8a77eb8cb0c0906</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae0684b1ecf571d09ecbb44573f16e752</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a3fe23b8c2c82839d273f9c685873a188</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae9c29f7de3d159afc471cbf407d205d4</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a463f060f5862bcdf7c5e7337c40d5335</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ad0368132a8d1738f99c67aef72c7a4fd</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ab8c363b25e6797b1376afa26c5687081</Anchor>
    <Abstract>Creates a copy of this filesystem entry at a new location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a5dd6965a59f27e87a2411f9ad7a5785b</Anchor>
    <Abstract>Creates a copy of this filesystem entry at a new location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a99e21b761aac363f1641d37a954eee03</Anchor>
    <Abstract>Replaces the file&apos;s contents with the given data.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a8e6a359a45514bcebc4c49ae06c3528b</Anchor>
    <Abstract>Replaces the file&apos;s contents with the given data.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>aa88d052b619925e53f1722487349724a</Anchor>
    <Abstract>Replaces the file&apos;s contents with the given data.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>abafe9417760772ff67daa0f36541f467</Anchor>
    <Abstract>Appends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>ab540948b17653fb59ce4e0eb684f8968</Anchor>
    <Abstract>Appends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a3a634c1fd085bc646e86b763b5837eaf</Anchor>
    <Abstract>Appends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>acdce777670b6cc7697d63d2b8ecb93f4</Anchor>
    <Abstract>Prepends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>abcfca3cd7424b8a0bdfe371742767d48</Anchor>
    <Abstract>Prepends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>aef7a1e45f76236a9971e2041eeae8d9f</Anchor>
    <Abstract>Prepends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a5c07682ded522206774b07b9cbe5bbec</Anchor>
    <Abstract>Loads the file&apos;s contents as a RawData object.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>aa312be5aa8cfb09a0cd1052ec3e0de85</Anchor>
    <Abstract>Loads the file&apos;s contents as a string.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsLines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a7cb6395e979d5eaac38fa38b509c8966</Anchor>
    <Abstract>Loads the file&apos;s contents as a vector of strings, with each string containing the contents of one lin...</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8eb71ce03cdc6c9a6f6859cde8ec8f51</Anchor>
    <Abstract>Assigns the path this filesystem entry represents.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a9769e7f27fea1f1b437c6b4ae1517a7f</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a740503af22b77d69386a2a9ef5e647ef</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7f37e70f24765041c8a77eb8cb0c0906</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae0684b1ecf571d09ecbb44573f16e752</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a3fe23b8c2c82839d273f9c685873a188</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae9c29f7de3d159afc471cbf407d205d4</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a463f060f5862bcdf7c5e7337c40d5335</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ad0368132a8d1738f99c67aef72c7a4fd</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ab8c363b25e6797b1376afa26c5687081</Anchor>
    <Abstract>Creates a copy of this filesystem entry at a new location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a5dd6965a59f27e87a2411f9ad7a5785b</Anchor>
    <Abstract>Creates a copy of this filesystem entry at a new location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a9769e7f27fea1f1b437c6b4ae1517a7f</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a740503af22b77d69386a2a9ef5e647ef</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7f37e70f24765041c8a77eb8cb0c0906</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae0684b1ecf571d09ecbb44573f16e752</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a3fe23b8c2c82839d273f9c685873a188</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a463f060f5862bcdf7c5e7337c40d5335</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae9c29f7de3d159afc471cbf407d205d4</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ad0368132a8d1738f99c67aef72c7a4fd</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ab8c363b25e6797b1376afa26c5687081</Anchor>
    <Abstract>Creates a copy of this filesystem entry at a new location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a5dd6965a59f27e87a2411f9ad7a5785b</Anchor>
    <Abstract>Creates a copy of this filesystem entry at a new location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8eb71ce03cdc6c9a6f6859cde8ec8f51</Anchor>
    <Abstract>Assigns the path this filesystem entry represents.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a9769e7f27fea1f1b437c6b4ae1517a7f</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a740503af22b77d69386a2a9ef5e647ef</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7f37e70f24765041c8a77eb8cb0c0906</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae0684b1ecf571d09ecbb44573f16e752</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a3fe23b8c2c82839d273f9c685873a188</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae9c29f7de3d159afc471cbf407d205d4</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a463f060f5862bcdf7c5e7337c40d5335</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ad0368132a8d1738f99c67aef72c7a4fd</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ab8c363b25e6797b1376afa26c5687081</Anchor>
    <Abstract>Creates a copy of this filesystem entry at a new location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a5dd6965a59f27e87a2411f9ad7a5785b</Anchor>
    <Abstract>Creates a copy of this filesystem entry at a new location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a99e21b761aac363f1641d37a954eee03</Anchor>
    <Abstract>Replaces the file&apos;s contents with the given data.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a8e6a359a45514bcebc4c49ae06c3528b</Anchor>
    <Abstract>Replaces the file&apos;s contents with the given data.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>aa88d052b619925e53f1722487349724a</Anchor>
    <Abstract>Replaces the file&apos;s contents with the given data.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>abafe9417760772ff67daa0f36541f467</Anchor>
    <Abstract>Appends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>ab540948b17653fb59ce4e0eb684f8968</Anchor>
    <Abstract>Appends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a3a634c1fd085bc646e86b763b5837eaf</Anchor>
    <Abstract>Appends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>acdce777670b6cc7697d63d2b8ecb93f4</Anchor>
    <Abstract>Prepends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>abcfca3cd7424b8a0bdfe371742767d48</Anchor>
    <Abstract>Prepends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>aef7a1e45f76236a9971e2041eeae8d9f</Anchor>
    <Abstract>Prepends the given data to the file&apos;s current contents.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a5c07682ded522206774b07b9cbe5bbec</Anchor>
    <Abstract>Loads the file&apos;s contents as a RawData object.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>aa312be5aa8cfb09a0cd1052ec3e0de85</Anchor>
    <Abstract>Loads the file&apos;s contents as a string.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsLines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a7cb6395e979d5eaac38fa38b509c8966</Anchor>
    <Abstract>Loads the file&apos;s contents as a vector of strings, with each string containing the contents of one lin...</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a8eb71ce03cdc6c9a6f6859cde8ec8f51</Anchor>
    <Abstract>Assigns the path this filesystem entry represents.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a9769e7f27fea1f1b437c6b4ae1517a7f</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a740503af22b77d69386a2a9ef5e647ef</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a7f37e70f24765041c8a77eb8cb0c0906</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae0684b1ecf571d09ecbb44573f16e752</Anchor>
    <Abstract>Compares this filesystem entry&apos;s absolute path with the other one&apos;s for equality.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a3fe23b8c2c82839d273f9c685873a188</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ae9c29f7de3d159afc471cbf407d205d4</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a463f060f5862bcdf7c5e7337c40d5335</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ad0368132a8d1738f99c67aef72c7a4fd</Anchor>
    <Abstract>Lexicographically compares this filesystem entry&apos;s absolute path with another path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>ab8c363b25e6797b1376afa26c5687081</Anchor>
    <Abstract>Creates a copy of this filesystem entry at a new location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>df/d73/classlimes_1_1files_1_1_filesystem_entry.html</Path>
    <Anchor>a5dd6965a59f27e87a2411f9ad7a5785b</Anchor>
    <Abstract>Creates a copy of this filesystem entry at a new location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentExecutable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>a59340d0aa6ba49e4d54ec33a24238572</Anchor>
    <Abstract>Returns a file representing the location of the executable file that launched the current process.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentModule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::files::File</Scope>
    </TokenIdentifier>
    <Path>df/d1e/classlimes_1_1files_1_1_file.html</Path>
    <Anchor>afa6800b8f00f81fc02b0402a45896708</Anchor>
    <Abstract>Returns a file representing the location of the current code module.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d7/df8/classlimes_1_1files_1_1_temp_file.html</Path>
    <Anchor>ac6cdb5b1a481be665267d8a5a7268852</Anchor>
    <Abstract>Returns a new temporary file, with the name generated using a counter specific to the current process...</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::func</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d60/namespacelimes_1_1func.html</Path>
    <Abstract>This namespace contains some utilities for working with higher-level functions and functions as objec...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga7c4fa56ce61b8e28103b43f250ba851c</Anchor>
    <Abstract>This typedef evaluates to the result type returned by calling the given function with the given argum...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>call_once</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga423a59d89a77cb46a1e475eca33dd4e4</Anchor>
    <Abstract>Calls the function object exactly once throughout the entire life of the program.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consteval_invoke</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga677b37e66b96cec89ef70ad374f8aa2b</Anchor>
    <Abstract>Forces a given function to be executed at compile time.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>curry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga580272ce196b901393443435200a88dc</Anchor>
    <Abstract>Breaks down a function that takes multiple arguments into a series of functions that each take one ar...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>try_call</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga8ae3d6b9aba39513f038c0784215c739</Anchor>
    <Abstract>Executes a potentially-throwing function within a try-catch block, and returns false if an exception ...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga782eabbc5a0ba6fa51ac3e263d8cf2e6</Anchor>
    <Abstract>@concept Function This concept simply requires that an object is invocable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::func::CallDeferred</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>dc/d5e/classlimes_1_1func_1_1_call_deferred.html</Path>
    <Abstract>This class calls a given function when its destructor is executed.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallDeferred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>dc/d5e/classlimes_1_1func_1_1_call_deferred.html</Path>
    <Anchor>a3ceebd4b335585e2bfecbfa648651649</Anchor>
    <Abstract>CallDeferred is not movable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallDeferred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>dc/d5e/classlimes_1_1func_1_1_call_deferred.html</Path>
    <Anchor>a1383de4999e839e299534b70b564bfd2</Anchor>
    <Abstract>CallDeferred is not copyable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallDeferred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>dc/d5e/classlimes_1_1func_1_1_call_deferred.html</Path>
    <Anchor>a51fafc960b74260f7f033fd53056823b</Anchor>
    <Abstract>The constructor simply stores the function object, it does not execute it.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CallDeferred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>dc/d5e/classlimes_1_1func_1_1_call_deferred.html</Path>
    <Anchor>a8783934958df2ebc3662a5b7e7867416</Anchor>
    <Abstract>The destructor executes the stored function.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>dc/d5e/classlimes_1_1func_1_1_call_deferred.html</Path>
    <Anchor>a406219e0b7fd6d0d917bfb51e86959b5</Anchor>
    <Abstract>CallDeferred is not movable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>dc/d5e/classlimes_1_1func_1_1_call_deferred.html</Path>
    <Anchor>ab6d06b6eb5cff14ed55525e132543570</Anchor>
    <Abstract>CallDeferred is not copyable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::func::RAIICaller</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>dc/dca/classlimes_1_1func_1_1_r_a_i_i_caller.html</Path>
    <Abstract>This generic RAII object allows you to specify a function to be called when it is created and when it...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RAIICaller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>dc/dca/classlimes_1_1func_1_1_r_a_i_i_caller.html</Path>
    <Anchor>a985dcd106ab9b289b193855fef6fe662</Anchor>
    <Abstract>RAIICaller is not copyable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RAIICaller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>dc/dca/classlimes_1_1func_1_1_r_a_i_i_caller.html</Path>
    <Anchor>a9d832e0230439caf3676c08c6c116a6e</Anchor>
    <Abstract>RAIICaller is not movable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>dc/dca/classlimes_1_1func_1_1_r_a_i_i_caller.html</Path>
    <Anchor>a7d82b53f9f7f2838d1621fb1d3cac965</Anchor>
    <Abstract>RAIICaller is not copyable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>dc/dca/classlimes_1_1func_1_1_r_a_i_i_caller.html</Path>
    <Anchor>ad6817709ed8f23b102e6312adfc6229c</Anchor>
    <Abstract>RAIICaller is not movable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::hash</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>d4/d1f/namespacelimes_1_1hash.html</Path>
    <Abstract>This namespace contains some common hash functions and utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf04b8b325b6d8808cfa8ab662c415563</Anchor>
    <Abstract>Calculates an MD5 hash for the given data.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga1ad1ee42c5a8c1f5b7bbab3753b842ed</Anchor>
    <Abstract>Calculates an MD5 hash for the given string.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga02ce419d9a24011ce06c363e567d8f37</Anchor>
    <Abstract>Calculates a SHA1 hash for the given data.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gad59db2ed6ec21f087da8040f514fd10d</Anchor>
    <Abstract>Calculates a SHA1 hash for the given string.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga53e991f9748b5819d4b679260b12da28</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gae4c137f728f6a479fa5bb7f00205a9de</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafcffbf237b396138431cfb85b4f1e956</Anchor>
    <Abstract>Calculates a SHA256 hash for the given data.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaeb7d7327a54d7701f116804d6a40e250</Anchor>
    <Abstract>Calculates a SHA256 hash for the given string.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaeaa6253a21c6303fd96385172bf16f1f</Anchor>
    <Abstract>Calculates a SHA384 hash for the given data.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga4bc79e7feba628b1ef01bb1c064a9e36</Anchor>
    <Abstract>Calculates a SHA384 hash for the given string.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaac385895667ef7f184bb0728ba10d718</Anchor>
    <Abstract>Calculates a SHA512 hash for the given data.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga772508093ab1e982231feb0e75c3b019</Anchor>
    <Abstract>Calculates a SHA512 hash for the given string.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHasherForType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gac34cb84df8bc2dfec8c97755d632208a</Anchor>
    <Abstract>Creates an appropriate Hasher for the given Type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafaa42983a7f5867ce673f70cf08762ea</Anchor>
    <Abstract>Calculates a hash value for the input data using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga767adfd86b44e74eecded43fb40575b8</Anchor>
    <Abstract>Calculates a hash value for the input string using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::hash::Hasher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Abstract>A base class representing an object that calculates a hash function.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Hasher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Anchor>ad6902b33b3439b7fa884acf0d409b2e7</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Anchor>a907915e1f3fb947c46c0ca8bb9eeed1c</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Anchor>ab0d6539f35733809c61271b108419d4f</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Anchor>aee5a61d5d23d32f1ae6972f9a215fcaf</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::hash::MD5</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::hash::MD5</Scope>
    </TokenIdentifier>
    <Path>db/de7/classlimes_1_1hash_1_1_m_d5.html</Path>
    <Abstract>A Hasher object that calculates an MD5 hash.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::MD5</Scope>
    </TokenIdentifier>
    <Path>db/de7/classlimes_1_1hash_1_1_m_d5.html</Path>
    <Anchor>a4767ff88fb188b2872e1ad1a796a4bf3</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Anchor>ab0d6539f35733809c61271b108419d4f</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::MD5</Scope>
    </TokenIdentifier>
    <Path>db/de7/classlimes_1_1hash_1_1_m_d5.html</Path>
    <Anchor>a97806eb9a70b2cb746b92bcbc5f0ff24</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::hash::SHA1</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::hash::SHA1</Scope>
    </TokenIdentifier>
    <Path>df/dd8/classlimes_1_1hash_1_1_s_h_a1.html</Path>
    <Abstract>A Hasher object that calculates a SHA1 hash.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::SHA1</Scope>
    </TokenIdentifier>
    <Path>df/dd8/classlimes_1_1hash_1_1_s_h_a1.html</Path>
    <Anchor>a636dcbc7da086eb278097e2c2a5d4e48</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Anchor>ab0d6539f35733809c61271b108419d4f</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::SHA1</Scope>
    </TokenIdentifier>
    <Path>df/dd8/classlimes_1_1hash_1_1_s_h_a1.html</Path>
    <Anchor>af8442e02ca8b7e86c9f5ebd9417428e0</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::hash::SHA224</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::hash::SHA224</Scope>
    </TokenIdentifier>
    <Path>dc/ddb/classlimes_1_1hash_1_1_s_h_a224.html</Path>
    <Abstract>A Hasher object that calculates a SHA224 hash.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::SHA224</Scope>
    </TokenIdentifier>
    <Path>dc/ddb/classlimes_1_1hash_1_1_s_h_a224.html</Path>
    <Anchor>ac053ea0a1e76e791fa975c99dbbd73f9</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Anchor>ab0d6539f35733809c61271b108419d4f</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::SHA224</Scope>
    </TokenIdentifier>
    <Path>dc/ddb/classlimes_1_1hash_1_1_s_h_a224.html</Path>
    <Anchor>a89d5eadfc53bafa98b980abc9c4650cd</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::hash::SHA256</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::hash::SHA256</Scope>
    </TokenIdentifier>
    <Path>d9/d97/classlimes_1_1hash_1_1_s_h_a256.html</Path>
    <Abstract>A Hasher object that calculates a SHA256 hash.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::SHA256</Scope>
    </TokenIdentifier>
    <Path>d9/d97/classlimes_1_1hash_1_1_s_h_a256.html</Path>
    <Anchor>a27049075b5cfe25b5420faae5e44ddb8</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Anchor>ab0d6539f35733809c61271b108419d4f</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::SHA256</Scope>
    </TokenIdentifier>
    <Path>d9/d97/classlimes_1_1hash_1_1_s_h_a256.html</Path>
    <Anchor>a1ce823abba80c2e0cb6259f2ccd9a821</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::hash::SHA384</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::hash::SHA384</Scope>
    </TokenIdentifier>
    <Path>df/d93/classlimes_1_1hash_1_1_s_h_a384.html</Path>
    <Abstract>A Hasher object that calculates a SHA384 hash.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::SHA384</Scope>
    </TokenIdentifier>
    <Path>df/d93/classlimes_1_1hash_1_1_s_h_a384.html</Path>
    <Anchor>a98b73983b222a5414b9b34fe054c4fdd</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Anchor>ab0d6539f35733809c61271b108419d4f</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::SHA384</Scope>
    </TokenIdentifier>
    <Path>df/d93/classlimes_1_1hash_1_1_s_h_a384.html</Path>
    <Anchor>ac8eeb63c4940df284c283d46b2782d56</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::hash::SHA512</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::hash::SHA512</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classlimes_1_1hash_1_1_s_h_a512.html</Path>
    <Abstract>A Hasher object that calculates a SHA512 hash.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::SHA512</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classlimes_1_1hash_1_1_s_h_a512.html</Path>
    <Anchor>ae99a3107844b431b56683a6696f42551</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>d9/da7/classlimes_1_1hash_1_1_hasher.html</Path>
    <Anchor>ab0d6539f35733809c61271b108419d4f</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::hash::SHA512</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classlimes_1_1hash_1_1_s_h_a512.html</Path>
    <Anchor>ae551da25af066484e6e77244e4160c76</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::hash::util</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::hash::util</Scope>
    </TokenIdentifier>
    <Path>da/d6d/namespacelimes_1_1hash_1_1util.html</Path>
    <Abstract>This namespace contains implementation details for the hash functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::json</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::json</Scope>
    </TokenIdentifier>
    <Path>d6/dbd/namespacelimes_1_1json.html</Path>
    <Abstract>This namespace contains utilities for working with JSON.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::json::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::json::Node</Scope>
    </TokenIdentifier>
    <Path>d2/dbf/classlimes_1_1json_1_1_node.html</Path>
    <Abstract>Represents any kind of JSON object.</Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJsonText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::json::Node</Scope>
    </TokenIdentifier>
    <Path>d2/dbf/classlimes_1_1json_1_1_node.html</Path>
    <Anchor>a45d709a73c683c90642a68cf43c59435</Anchor>
    <Abstract>Re-encodes this object into its JSON string representation.</Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::json::Node</Scope>
    </TokenIdentifier>
    <Path>d2/dbf/classlimes_1_1json_1_1_node.html</Path>
    <Anchor>aee9e4c750b8afaa81e66093b865d6833</Anchor>
    <Abstract>Returns the type of this object.</Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::locale</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>de/dcb/namespacelimes_1_1locale.html</Path>
    <Abstract>This namespace contains utilities for localization and internationalization.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllCountries</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>gae116ceac637605bca56517965824c5c2</Anchor>
    <Abstract>Returns a vector of all known Country objects.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllKnownLanguages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga11ae481240c4d4d320de358bc46a9396</Anchor>
    <Abstract>Returns all known Language objects in Limes&apos;s internal database.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga4bc4cb67166962cd71ae97868aa77935</Anchor>
    <Abstract>Returns the Country object representing the given ISO country code.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga3e029e65c56bc15ba7f56ea04fea45cb</Anchor>
    <Abstract>Returns the Country object representing the country with the given name.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga746e6628a179acfa800d441c08c7bd66</Anchor>
    <Abstract>Returns the Language object representing the language with the given name.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguageForCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga382c8c09f879ffd9be0a24088b2ee5cb</Anchor>
    <Abstract>Returns the Language object representing the given ISO language code.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguagesForCountry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gadb7784b01623f7aa80324d1ea10b6856</Anchor>
    <Abstract>Returns a vector of Language objects representing languages that may be spoken in the given country.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::locale::Country</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::locale::Country</Scope>
    </TokenIdentifier>
    <Path>df/d0e/structlimes_1_1locale_1_1_country.html</Path>
    <Abstract>This struct represents metadata about a country.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale::Country</Scope>
    </TokenIdentifier>
    <Path>df/d0e/structlimes_1_1locale_1_1_country.html</Path>
    <Anchor>aa903d8d73328dab6ad1accd1abf8147a</Anchor>
    <Abstract>Returns a vector of Language objects representing languages that may be spoken in this country.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale::Country</Scope>
    </TokenIdentifier>
    <Path>df/d0e/structlimes_1_1locale_1_1_country.html</Path>
    <Anchor>a4889227264a1a597fcc69440b1de8518</Anchor>
    <Abstract>Returns true if all the metadata fields contain valid data.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countryCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::locale::Country</Scope>
    </TokenIdentifier>
    <Path>df/d0e/structlimes_1_1locale_1_1_country.html</Path>
    <Anchor>a2d498d8781f9d3fc442d9d5b7e63635e</Anchor>
    <Abstract>The ISO country code for this country.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countryName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::locale::Country</Scope>
    </TokenIdentifier>
    <Path>df/d0e/structlimes_1_1locale_1_1_country.html</Path>
    <Anchor>ab52b347a1f104baecc04a666c42ce7ee</Anchor>
    <Abstract>The full name of this country.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::locale::Language</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Abstract>This struct represents metadata about a spoken human language.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountries</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Anchor>a48e30167f8674142a88032694412e757</Anchor>
    <Abstract>Returns a vector of Country objects representing countries in which a meaningful proportion of the po...</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isForCountry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Anchor>a3ae0e4f1f3634cb465936d1adb0e523e</Anchor>
    <Abstract>Returns true if this language is likely to be spoken by a meaningful proportion of the given country&apos;...</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Anchor>aa20d35e9480825668f83d9679f710cde</Anchor>
    <Abstract>Returns true if all the metadata fields contain valid data.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Language</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Anchor>a8a598935738a176e0ec1381999157b22</Anchor>
    <Abstract>This library contains an internal database of known languages; you should rarely need to construct on...</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Language</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Anchor>abd5027a9a13b7f283ca43fb4bd20e011</Anchor>
    <Abstract>Constructs a null language object containing no metadata.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countryCodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Anchor>ae123d0bbcef3ad0dbf35c5254fdc0a47</Anchor>
    <Abstract>A vector of ISO country codes identifying countries where a meaningful proportion of the population m...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ISO639_1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Anchor>a82790ed7d5201d8d859ebd095ebb6263</Anchor>
    <Abstract>The 2-digit ISO 639-1 code identifying this language.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ISO639_2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Anchor>ad1abe25a344547a20a097f7a03c94b4e</Anchor>
    <Abstract>The 3-digit ISO 639-2 code identifying this language.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRightToLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Anchor>a4a6f6e88feeb906aa79dec87d41955b9</Anchor>
    <Abstract>True if this language is written right to left.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>languageName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::locale::Language</Scope>
    </TokenIdentifier>
    <Path>d7/d51/structlimes_1_1locale_1_1_language.html</Path>
    <Anchor>a8dcaecc32b276d3bd0c2ba1664bf469f</Anchor>
    <Abstract>The full name of the language.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d2/df3/namespacelimes_1_1math.html</Path>
    <Abstract>This namespace contains math utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga96017616aa33e280ac4559d327e11889</Anchor>
    <Abstract>@concept Scalar A scalar type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga78b6e7e3ca15b70ce958d0f028d607ed</Anchor>
    <Abstract>@concept Integral An integral type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga340ba1fa93e3ff5987d94fd11d07b39a</Anchor>
    <Abstract>A constexpr-enabled max function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gada391234ea82372c9e005ed208f2db13</Anchor>
    <Abstract>A constexpr-enabled min function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga514ee773c330a0ff7d19286b13f83b53</Anchor>
    <Abstract>A constexpr-enabled absolute value function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga005b096167e7e48847b69c7f1f350915</Anchor>
    <Abstract>A constexpr-enabled negation function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>round</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6cc3bd33ef5ff0347c79ba7cc8adec36</Anchor>
    <Abstract>A constexpr-enabled rounding function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga7fa3c07491e7409e7f695a70960d4579</Anchor>
    <Abstract>A constexpr-enabled clipping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>power</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8d26141199f013e584e33b0cf04bd0b8</Anchor>
    <Abstract>A constexpr-enabled power function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8e1376561c18c5700f25bf9d16fa5f3a</Anchor>
    <Abstract>A constexpr-enabled mapping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPowerOf2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaf28ea8c4fcd46ef3a5423f212b1bcc1e</Anchor>
    <Abstract>Returns true if val is 2^something.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDivisibleBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga77464df61c396b206d8357c5f9884b5b</Anchor>
    <Abstract>Returns true if the number is divisible by the divisor with no remainder.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberIsEven</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaa5495769808eff098130215ee85fcf2d</Anchor>
    <Abstract>Returns true if the number is evenly divisible by 2.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga950e07ddb605b6e7721142a145bec24c</Anchor>
    <Abstract>Returns true if the number is a prime number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factorial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga5d2f2720c191268e9a17d15e0b25ff3c</Anchor>
    <Abstract>Computes the factorial of the number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>middleOfThree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga82cc1c47568221dc63727ebe3686d60d</Anchor>
    <Abstract>Returns the median of three values.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>periodInSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaad252ebdd65713b59abdbe0f5f2d7bd9</Anchor>
    <Abstract>Returns the period in samples of a frequency at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqFromPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaacee5ce0fef613d9f08eb4ec86bfe056</Anchor>
    <Abstract>Returns the frequency in Hz with a given period in samples at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampsToMs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gab8a73b8ec5cd084065838b8d2b860874</Anchor>
    <Abstract>Converts a number of samples to milliseconds at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>msToSamps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga47e9b2f032b32583e46d7e312a576222</Anchor>
    <Abstract>Converts a number of milliseconds to the closest integer number of samples at the specified samplerat...</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midiToFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga958bfa906aac63346cd915d6b5a08698</Anchor>
    <Abstract>Converts a MIDI note to a frequency in Hz.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqToMidi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga79c120b8a72137dd368c391208d82240</Anchor>
    <Abstract>Converts a frequency in Hz to a MIDI note.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::Fraction</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Abstract>This class represents a fraction.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a8736cbe796f7822e8434dfc8ea5f26c1</Anchor>
    <Abstract>Fraction is default copyable at compile time.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>aea83c1179d7ef44ba3061bcaa8af792c</Anchor>
    <Abstract>Fraction is default movable at compile time.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divided</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>abac80c23b040a7e2a8f850272bdfa0d3</Anchor>
    <Abstract>Divides the numerator by the denominator and returns the result.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReciprocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>aee637963fb5ac566fccc410365da9322</Anchor>
    <Abstract>Returns the reciprocal of this fraction.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEquivalentTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>af6ebcf03827a8b1481237498f8e4e710</Anchor>
    <Abstract>Returns true if the two fractions are equivalent, regardless of their exact representations.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNegative</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>abcf23a8d7f1ec0f54dab40c1b3bc5033</Anchor>
    <Abstract>Returns true if this fraction is negative.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leastCommonDenominatorWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a81021562851996a68c2f263683bfc570</Anchor>
    <Abstract>Returns the least common denominator between this fraction and the other one.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator T</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a7614597d780e55bc052348a4aa87cdd5</Anchor>
    <Abstract>Converts this fraction to a value of the desired type by dividing the numerator by the denominator.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>aa22a25fb423de011a418758202fd4c05</Anchor>
    <Abstract>Fraction is default copyable at compile time.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a895c8886b2569ae89a21a54be462b40e</Anchor>
    <Abstract>Assigns this fraction to a new value.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a393146373e3972e5b1fe059b5548010b</Anchor>
    <Abstract>Fraction is default movable at compile time.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reduce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a2041522b9a3826e1310d21f716673be0</Anchor>
    <Abstract>If the fraction can be reduced, this function returns a new fraction with the reduced numerator and d...</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withDenominator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a7aa5f6655bd64601470eb02227f90c83</Anchor>
    <Abstract>Returns a new fraction representing the same numerical value as this one, but expressed in terms of t...</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a7ea20783daba8bb87af26d0680e614fc</Anchor>
    <Abstract>Creates a default fraction with a numerator and denominator of 0.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a061f61e676c1a0ac9812441a560becb4</Anchor>
    <Abstract>Creates a fraction.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a1a507be71b11de44b85cc91a3ee0fec1</Anchor>
    <Abstract>Creates a fraction.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>denominator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>af9643c94ca31351607d13a09555893fe</Anchor>
    <Abstract>The fraction&apos;s denominator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d9/d48/structlimes_1_1math_1_1_fraction.html</Path>
    <Anchor>a9a005beb1346dab5e4fb9e27953f89f8</Anchor>
    <Abstract>The fraction&apos;s numerator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::Matrix</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Abstract>This class is a matrix, a rectangular array of objects arranged in rows and columns.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Element</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a3964149d343657eab3a389fc554b28e1</Anchor>
    <Abstract>You can access the stored type of objects through this typedef.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>ac1a5a7930e13c35bdca0c6c5717b2164</Anchor>
    <Abstract>Returns a reference to an object at a specified location in the matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a17c69d0efb5f00caa53829d0f55bffe4</Anchor>
    <Abstract>Returns a reference to an object at a specified location in the matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>aea135624c57cdbecd76c6b2395f3d7d1</Anchor>
    <Abstract>Returns a column of the matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSubmatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>ad52fc8cd405cb48847861688a2aea297</Anchor>
    <Abstract>Returns a new matrix containing copies of a subset of this matrix&apos;s objects.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a348a4948116deb0560abc947db6aa9d7</Anchor>
    <Abstract>Returns true if not every object in both matrices is equivalent.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a164748d200f14157c6d17c5f4505050a</Anchor>
    <Abstract>Adds each element in other to the element at the corresponding position in this matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a7ed5f3b9504e95bf1ef3c889316c5d2a</Anchor>
    <Abstract>Adds the object to every object in this matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a4ef875b55a0d15528e341055fde486bb</Anchor>
    <Abstract>Subtracts each element in other from the element at the corresponding position in this matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a0bb5a25326f269eab1d583e3de1ca91b</Anchor>
    <Abstract>Subtracts the object from every object in this matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>ad3c58e1f155958c02bca2ecd23834a77</Anchor>
    <Abstract>Returns true if every object in both matrices is equivalent.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a38fa3fd1fb3e4d51297eabadb434e78d</Anchor>
    <Abstract>Returns a reference to a row of the matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a3057c276d6c2281b1a7c4a6a2dcb7640</Anchor>
    <Abstract>Returns a reference to a row of the matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a410d428b0135aec03d971f9439ad8817</Anchor>
    <Abstract>Assigns an object at a specified location in the matrix to a new value.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a7c5fb29b76f43413556b7ad18cd1bed2</Anchor>
    <Abstract>Returns the number of columns the matrix contains.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumRows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a6379e7ae17ed1d6631160fc434dc3733</Anchor>
    <Abstract>Returns the number of rows the matrix contains.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalNumElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a43849d216a98d46ffc7a1d2b5c9bf60f</Anchor>
    <Abstract>Returns the number of total number of elements the matrix contains.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classlimes_1_1math_1_1_matrix.html</Path>
    <Anchor>a47453a230653b6b4d79b0529dc078041</Anchor>
    <Abstract>Returns true if the matrix is square; ie, its number of rows is equal to its number of columns.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::Random</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Abstract>This class is a random number generator.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EngineType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>aa5ff312694cf91b409fecd25a952330f</Anchor>
    <Abstract>The type of random number generation engine being used internally.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ValueType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>af9ea0006b4074c39dbc3dc79620fbcc2</Anchor>
    <Abstract>The types of values the random number engine outputs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Random</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>a6668b1000516faaf85ab4dde1140f581</Anchor>
    <Abstract>Random is default copyable.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Random</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>a2a9de16a08a854a3d98aad7333f75869</Anchor>
    <Abstract>Random is default movable.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fork</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>a99efbf3a277d38b796c7c8314fe0df3d</Anchor>
    <Abstract>Creates a new random number generator, which is seeded with this generator&apos;s next value.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>next</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>acbe9fcf294eb5ea71a68aebf66a7c6c0</Anchor>
    <Abstract>Returns the next value from the random number generator as a specified type, optionally mapped to a s...</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>ae0da5457fff59128461b19d53c276a14</Anchor>
    <Abstract>Returns the next value from the random number generator, interpreted as a boolean.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>af6592c9736cd5db7e1a3595880d026bd</Anchor>
    <Abstract>Returns the next value from the random number generator.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>ad9eecb8fb472399e1eb863a2b26845d2</Anchor>
    <Abstract>Random is default copyable.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>ad30c98dc7c185138424c3dfb0752e7bf</Anchor>
    <Abstract>Random is default movable.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>a1f31ca33d61c4597150df2e41ab97ed6</Anchor>
    <Abstract>Sets the seed of the random number generator.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Random</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>a4585ab7a2fa978e4fe6e30721946cc2d</Anchor>
    <Abstract>Creates a random number generator with a specified seed value.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Random</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>a186ab4d368e954ca71b5d7d6b52a52a1</Anchor>
    <Abstract>Creates a random number generator with a specified seed value.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Random</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>acf0ae91a42a9cc564a179eb4cefd8461</Anchor>
    <Abstract>Creates a random number generator with a random seed value.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::Random</Scope>
    </TokenIdentifier>
    <Path>dd/d7f/classlimes_1_1math_1_1_random.html</Path>
    <Anchor>a823ba7484d3789a42fbba11e59d5351b</Anchor>
    <Abstract>Returns a static, system-wide random number generator.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::constants</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::math::constants</Scope>
    </TokenIdentifier>
    <Path>d4/d22/namespacelimes_1_1math_1_1constants.html</Path>
    <Abstract>This namespace contains some mathematical constants.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blackman_alpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math::constants</Scope>
    </TokenIdentifier>
    <Path>d4/d22/namespacelimes_1_1math_1_1constants.html</Path>
    <Anchor>acd2c4e25f4779b0adbaf2d0bec4c8130</Anchor>
    <Abstract>The alpha value used for computing default Blackman filters.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>half_pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math::constants</Scope>
    </TokenIdentifier>
    <Path>d4/d22/namespacelimes_1_1math_1_1constants.html</Path>
    <Anchor>a38913333455736bdae51b03d7e8640bb</Anchor>
    <Abstract>One-half pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math::constants</Scope>
    </TokenIdentifier>
    <Path>d4/d22/namespacelimes_1_1math_1_1constants.html</Path>
    <Anchor>a3ddbfac5c33f6dcad2ecb4b9d1ba4969</Anchor>
    <Abstract>Pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two_pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::math::constants</Scope>
    </TokenIdentifier>
    <Path>d4/d22/namespacelimes_1_1math_1_1constants.html</Path>
    <Anchor>aea8ef708548f3ac24fccd3d686be83c2</Anchor>
    <Abstract>Two pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::math::geometry</Scope>
    </TokenIdentifier>
    <Path>d8/d10/namespacelimes_1_1math_1_1geometry.html</Path>
    <Abstract>This namespace contains utilities for working with geometric shapes and calculations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::geometry</Scope>
    </TokenIdentifier>
    <Path>d7/dcd/group___two_dgeometry.html</Path>
    <Anchor>ga34a4f995efaff20408b272939689f926</Anchor>
    <Abstract>Returns true if the Rectangle and Square do not have equal dimensions.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::math::geometry</Scope>
    </TokenIdentifier>
    <Path>d7/dcd/group___two_dgeometry.html</Path>
    <Anchor>ga5cdfdcd69f79295c4eef46793103aad4</Anchor>
    <Abstract>Returns true if the Rectangle and Square have equal dimensions.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Angle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Abstract>This class represents a geometric angle.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Angle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a2a2849df0f7ccc093ea2c29511cf3867</Anchor>
    <Abstract>Creates an Angle representing the given number of degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bisect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a809df2ca602495869bbd40569ab387ac</Anchor>
    <Abstract>Returns a new angle object representing half of this angle&apos;s measure.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator ValueType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>aebec8a9bc0c1a6fd0fdebf970cf4c6eb</Anchor>
    <Abstract>Returns the angle&apos;s measure in degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>degrees</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>ab501fc7e42ae24188aaa17d6e5e7212e</Anchor>
    <Abstract>Returns the angle&apos;s measure in degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radians</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a7391c704726cb87be05cfc05998db731</Anchor>
    <Abstract>Returns the angle&apos;s measure in radians.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a8fc25f0002d714cbad2af29df2a22ca6</Anchor>
    <Abstract>Returns true if the angle is exactly 90 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAcute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a65ecd741b1f9d0dd28e3de0770a8ea3a</Anchor>
    <Abstract>Returns true if the angle is less than 90 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObtuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>aa071fb0cf5b2f38819fd137731c90edd</Anchor>
    <Abstract>Returns true if the angle is larger than 90 degrees and smaller than 180 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStraight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>abec47c7b9332322f73c160b186f6eba4</Anchor>
    <Abstract>Returns true if the angle is exactly 180 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReflex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a3251e95ac802f08e244d323490137b77</Anchor>
    <Abstract>Returns true if the angle is larger than 180 degrees and smaller than 360 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFull</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a854aaeda41fda90e50e1e956a4cec773</Anchor>
    <Abstract>Returns true if the angle is exactly 360 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOblique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a3a4eca126c3d6576d7623d4742766bb5</Anchor>
    <Abstract>Returns true if the angle&apos;s measure in degrees is not divisible by 90.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComplementaryWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a702f3f9cf52a5e067e9e1061cd6b1aa1</Anchor>
    <Abstract>Returns true if this angle and the other&apos;s measures in degrees sum to 90.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getComplement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a163c511419f9b06155edfa1bb4bdc9d7</Anchor>
    <Abstract>Returns an angle object such that the new angle&apos;s measure in degrees added to this angle&apos;s measure wi...</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupplementaryWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a0e6aea4e08826fff0fc0e9d386b112fc</Anchor>
    <Abstract>Returns true if this angle and the other&apos;s measures in degrees sum to 180.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupplement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>afad7225a14fd96ec5b182fd0c0af8657</Anchor>
    <Abstract>Returns an angle object such that the new angle&apos;s measure in degrees added to this angle&apos;s measure wi...</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExplementaryWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a2d23fc851da5cc975df7e33b2228ed37</Anchor>
    <Abstract>Returns true if this angle and the other&apos;s measures in degrees sum to 360.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExplement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>aebf5c743eeff2e23a93ed5cf4c05bfd6</Anchor>
    <Abstract>Returns an angle object such that the new angle&apos;s measure in degrees added to this angle&apos;s measure wi...</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>right</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>aed5fbe1a11030787fdc780148593bba5</Anchor>
    <Abstract>Convenience function for creating a right angle object (90 degrees).</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>straight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>a253959981c1d10d14d2a4ffed3b8f85d</Anchor>
    <Abstract>Convenience function for creating a straight angle object (180 degrees).</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>full</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d3/d76/classlimes_1_1math_1_1geometry_1_1_angle.html</Path>
    <Anchor>ae6a2245cdf5d9018de5b858d0970e454</Anchor>
    <Abstract>Convenience function for creating a full angle object (360 degrees).</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Circle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>de/ddf/classlimes_1_1math_1_1geometry_1_1_circle.html</Path>
    <Abstract>Represents a circle.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>de/ddf/classlimes_1_1math_1_1geometry_1_1_circle.html</Path>
    <Anchor>aac281d6081acfc070e970bc4b3a493b7</Anchor>
    <Abstract>Circle is default movable at compile time.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>de/ddf/classlimes_1_1math_1_1geometry_1_1_circle.html</Path>
    <Anchor>ac2190473d8ca9466419de429c919e6c7</Anchor>
    <Abstract>Circle is default copyable at compile time.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>de/ddf/classlimes_1_1math_1_1geometry_1_1_circle.html</Path>
    <Anchor>a59137ffb4cf40be9a36a399c03f2e291</Anchor>
    <Abstract>Creates a circle with the given radius (in unspecified units).</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>de/ddf/classlimes_1_1math_1_1geometry_1_1_circle.html</Path>
    <Anchor>a015ef9fdd430dfc53bd9f11aff61f369</Anchor>
    <Abstract>Returns the area of the circle.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>de/ddf/classlimes_1_1math_1_1geometry_1_1_circle.html</Path>
    <Anchor>a683d4036d9ca2233374d5406d0b149c2</Anchor>
    <Abstract>Returns the diameter of the circle.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>de/ddf/classlimes_1_1math_1_1geometry_1_1_circle.html</Path>
    <Anchor>ad54304846b59dfe76bcb1f92c1246cdc</Anchor>
    <Abstract>Circle is default movable at compile time.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>de/ddf/classlimes_1_1math_1_1geometry_1_1_circle.html</Path>
    <Anchor>abe440c3e6d8b2a5ebdcc7661debd7854</Anchor>
    <Abstract>Circle is default copyable at compile time.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>de/ddf/classlimes_1_1math_1_1geometry_1_1_circle.html</Path>
    <Anchor>ab38b3a49f164fdfbb05cd7ac31526ac8</Anchor>
    <Abstract>Returns the perimeter of the circle.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>de/ddf/classlimes_1_1math_1_1geometry_1_1_circle.html</Path>
    <Anchor>aeab786c413bbff4af62fd6c5d121773d</Anchor>
    <Abstract>Returns the radius of the circle.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Cone</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Abstract>This class represents a cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>afabf5aac2dab28a2e0e6b600dc5062a5</Anchor>
    <Abstract>Cone is default movable at compile time.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>a75ff584625ff1acc3147fb7dc9717a11</Anchor>
    <Abstract>Cone is default copyable at compile time.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>a49a21827172b5eadd71d1128b12076be</Anchor>
    <Abstract>Returns the diameter of the cone&apos;s face.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>a3a8d721f6756032aba0e69cc4038a86c</Anchor>
    <Abstract>Returns a Circle object representing the face of this cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>a156bd2c57b1df373eb1f0794f9d4aba1</Anchor>
    <Abstract>Returns the height of the cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>a1e38645dbdc500f8100ba57d10a734df</Anchor>
    <Abstract>Cone is default movable at compile time.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>a7eed383f74adbe4ade9d28bafb03d815</Anchor>
    <Abstract>Cone is default copyable at compile time.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>aa0c5de4cd000b57e43be63ff4995161b</Anchor>
    <Abstract>Returns the radius of the cone&apos;s face.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>slantHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>a105f2a1ff66d405a2b8ee86c6413b56f</Anchor>
    <Abstract>Returns the slant height area of the cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>a46cc18b659913982a7ba212327b4c9d8</Anchor>
    <Abstract>Returns the surface area of the cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ae415dec2021c2da43e3907efc849f827</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>a024cb6bf2b3280cd773125b1e66a7382</Anchor>
    <Abstract>Returns the volume of the cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a5f2df8ea7467e3da87f77b358e15c4a9</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>a0925a3d1e45658e8f636263ae4ba849a</Anchor>
    <Abstract>Creates a cone with the given radius (of its face) and height.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>d7/d9f/classlimes_1_1math_1_1geometry_1_1_cone.html</Path>
    <Anchor>ab7333bf09bdafcc408b09de6115008dd</Anchor>
    <Abstract>Creates a cone with the given face and height.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Cube</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Abstract>This class represents a cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cube</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a3d921dd910fe402b23413f9ad99c20f6</Anchor>
    <Abstract>Cube is default copyable at compile time.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cube</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a52429d7d71aa6230a2e17628c5debc07</Anchor>
    <Abstract>Cube is default movable at compile time.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>ac82968beeb15775d0500279da08b7401</Anchor>
    <Abstract>Returns a Square object representing a face of this cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRectangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a4ef25894fd4b3ab5846976fd8e2725fe</Anchor>
    <Abstract>Returns a RectangularPrism object with the same dimensions as this cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a25b6b162b3363244ae84be6dbf7541ca</Anchor>
    <Abstract>Cube is default copyable at compile time.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a5dc11abeba8452443e3efb30e18ade1f</Anchor>
    <Abstract>Cube is default movable at compile time.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sideLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a455f8b679fe91b06580ecec12ebaf1f9</Anchor>
    <Abstract>Returns the side length of the cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spaceDiagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a89182774da701ed544b240dc0f9a3d31</Anchor>
    <Abstract>Returns the space diagonal of the cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a69a3f2df457fa0267f2cec95b51994f5</Anchor>
    <Abstract>Returns the surface area of the cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ae415dec2021c2da43e3907efc849f827</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfacePerimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a37c80353a99fbc7c4a76f6f1d31e068c</Anchor>
    <Abstract>Returns the surface perimeter of the cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a963b432a2a3d485c16ecfc4384fa5212</Anchor>
    <Abstract>Returns the volume of the cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a5f2df8ea7467e3da87f77b358e15c4a9</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cube</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>aeed6f6172dcb8a248be20cb24b1c8a65</Anchor>
    <Abstract>Creates a cube with the given side length.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cube</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/d8f/classlimes_1_1math_1_1geometry_1_1_cube.html</Path>
    <Anchor>a9749967ec4dfb56ac188c96246843611</Anchor>
    <Abstract>Creates a cube with the given face.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Cylinder</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Abstract>This class represents a cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>aec599f49e8063c16dda50b2fea9486d3</Anchor>
    <Abstract>Cylinder is default copyable at compile time.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>ab32390244babffac797b9493e54279c4</Anchor>
    <Abstract>Cylinder is default movable at compile time.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>circumference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a0ca465fa39b474187ba7b47ba9b2a998</Anchor>
    <Abstract>Returns the circumference of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a3f5dc2aee16b5fab9e41d31e79c35a75</Anchor>
    <Abstract>Returns the diameter of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a1b12381a55c2040302c30dabea2ff22d</Anchor>
    <Abstract>Returns a Circle representing a face of this cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a99b0c03bb5b6ce673d0bd78231472c82</Anchor>
    <Abstract>Cylinder is default copyable at compile time.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a4ce05712917df453de4c168e14731828</Anchor>
    <Abstract>Cylinder is default movable at compile time.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>ad31f97d577df1c7a8c71c80ff2b433bd</Anchor>
    <Abstract>Returns the radius of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a8dae817eda9748f647d6852a93c4a811</Anchor>
    <Abstract>Returns the surface area of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ae415dec2021c2da43e3907efc849f827</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfacePerimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a80d842b678eb4c47dcfa4d9fd44c11ae</Anchor>
    <Abstract>Returns the surface perimeter of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>aca035db22458f9dc9c6957cd1e099cd6</Anchor>
    <Abstract>Returns the volume of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a5f2df8ea7467e3da87f77b358e15c4a9</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a169655e9f9077b5ec1631d045acfff66</Anchor>
    <Abstract>Creates a cylinder with the given radius and height.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d7/d42/classlimes_1_1math_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>ac543cfc582d22244338a4e072fb26097</Anchor>
    <Abstract>Creates a cylinder with the given face and height.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Hexagon</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Abstract>Represents a hexagon.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hexagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>ad74e2febeaa7cd6927fce647c057c86f</Anchor>
    <Abstract>Hexagon is default copyable at compile time.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hexagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>ad75408ee8061271730e5561a78fe1731</Anchor>
    <Abstract>Hexagon is default movable at compile time.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hexagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>ae61853010d4d8a8bc60cb6c0131f631a</Anchor>
    <Abstract>Creates a hexagon with the specified side length (in unspecified units).</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a55ebf086996fa5e412662caf2b05456a</Anchor>
    <Abstract>Returns the area of the hexagon.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>ad3c97a7309beb8961441d10fafb565d9</Anchor>
    <Abstract>Hexagon is default copyable at compile time.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a7b6e8d7e681030ccb9281261676afac0</Anchor>
    <Abstract>Hexagon is default movable at compile time.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>ad3eb17db93bafac996ccfe4e86ba677f</Anchor>
    <Abstract>Returns the perimeter of the hexagon.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sideLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a82931dbf452312a54f7df7b4c5af674f</Anchor>
    <Abstract>Returns the side length of the hexagon.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exteriorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a846177939eb4442039cb5787ac0c60ae</Anchor>
    <Abstract>Returns the exterior angle of any hexagon (60 degrees).</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interiorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>d2/dac/classlimes_1_1math_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>ab46ff876fd47e2a611e70d8967841dd4</Anchor>
    <Abstract>Returns the interior angle of any hexagon (120 degrees).</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Octagon</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Abstract>Represents an octagon.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Octagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Anchor>aa56ff945f6159fde0bbc2fc72442e184</Anchor>
    <Abstract>Octagon is default copyable at compile time.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Octagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Anchor>ab25f4cec39fa6d513e469567f9eb4d3f</Anchor>
    <Abstract>Octagon is default movable at compile time.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Octagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Anchor>ac0548c4b1d36c257f43fa5e10373e977</Anchor>
    <Abstract>Creates an octagon with the specified side length (in unspecified units).</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a351e8eb84378cd3561b83ee6e01e177b</Anchor>
    <Abstract>Returns the area of the octagon.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a871ae052cd3ded432d1a6ce9c4d91b9c</Anchor>
    <Abstract>Octagon is default copyable at compile time.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a4faa3db318053790883c7a2d2da46cf1</Anchor>
    <Abstract>Octagon is default movable at compile time.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a1dcbe35b4afb8af87668eeb6074c02d9</Anchor>
    <Abstract>Returns the perimeter of the octagon.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sideLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a9bfc3bb4a0e9e23b203a1a92f258cba8</Anchor>
    <Abstract>Returns the side length of the octagon.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exteriorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a6db462522590e42faa39b01eb5c6ea9c</Anchor>
    <Abstract>Returns the exterior angle of any octagon (45 degrees).</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interiorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>dd/d0b/classlimes_1_1math_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a46a78f4ab632c1ba14406563aa31ba76</Anchor>
    <Abstract>Returns the interior angle of any octagon (135 degrees).</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Pentagon</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Abstract>Represents a pentagon.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pentagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>ad299edfd64d51c69f8ae26f680d4ebd8</Anchor>
    <Abstract>Pentagon is default copyable at compile time.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pentagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a45339c63a5edca2a17526af9ea1287dd</Anchor>
    <Abstract>Pentagon is default movable at compile time.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pentagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>ab1f75a4a126cb1d370070fc420a9429c</Anchor>
    <Abstract>Creates a pentagon with the specified side length (in unspecified units).</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a0eb625ce6b3bde864b4cf7694c7aab31</Anchor>
    <Abstract>Returns the area of the pentagon.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a0a498dc4d5ba3a1ed80203d36bf1c79f</Anchor>
    <Abstract>Returns the length of the internal diagonal of the pentagon.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a142562355f7c969b526622ec2adfd0ee</Anchor>
    <Abstract>Pentagon is default copyable at compile time.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a70392b23e49cedf96079a1504f2e4de4</Anchor>
    <Abstract>Pentagon is default movable at compile time.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>aa9c804e47895bc25dae1ddab0fc1f33e</Anchor>
    <Abstract>Returns the perimeter of the pentagon.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sideLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>ae6fef64670b072dfd69b9d9889281d2d</Anchor>
    <Abstract>Returns the side length of the pentagon.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exteriorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a0d606994038a17ff65dae58b755dbb97</Anchor>
    <Abstract>Returns the exterior angle of any pentagon (72 degrees).</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interiorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d1e/classlimes_1_1math_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a15abddf058e9c7f7aa23c3d0e4e7dcb4</Anchor>
    <Abstract>Returns the interior angle of any pentagon (108 degrees).</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Pyramid</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Abstract>This class represents a pyramid.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pyramid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a08a18e3315a66ff27c9cc3549adf3e16</Anchor>
    <Abstract>Pyramid is default copyable at compile time.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pyramid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a920a8781d738117b6f78826a64b7bb94</Anchor>
    <Abstract>Pyramid is default movable at compile time.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>baseLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>acd7fc4d6da2073616dbf20cb373722d3</Anchor>
    <Abstract>Returns the length of the pyramid&apos;s base.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>baseWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a7b9b5ef63ea7b441d894b25c10127de5</Anchor>
    <Abstract>Returns the width of the pyramid&apos;s base.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a0f6658eeba6e4864723b28285a8ac987</Anchor>
    <Abstract>Returns a Rectangle object representing this pyramid&apos;s base.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a98c42949d562843e5b47ea68499f11e2</Anchor>
    <Abstract>Returns the height of the pyramid.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a1fa6defe935c9fc3bd011debf220ba4a</Anchor>
    <Abstract>Pyramid is default copyable at compile time.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a7e0d9ae6bd27cce071e21c5e46451427</Anchor>
    <Abstract>Pyramid is default movable at compile time.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a002e55edce1da803843774c665c57a62</Anchor>
    <Abstract>Returns the surface area of the pyramid.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ae415dec2021c2da43e3907efc849f827</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>ad0c6c93c0e74e246efb815aa961a7840</Anchor>
    <Abstract>Returns the volume of the pyramid.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a5f2df8ea7467e3da87f77b358e15c4a9</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pyramid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a813146a0e76966ef4f5386d65f77fc72</Anchor>
    <Abstract>Creates a pyramid with the given dimensions.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pyramid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>de/d43/classlimes_1_1math_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a2c2cda28f36c9e179de70ac5e061539a</Anchor>
    <Abstract>Creates a pyramid with the given base and height.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Rectangle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Abstract>Represents a rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Rectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a0b5e742db780e2ed19415dc46914550e</Anchor>
    <Abstract>Rectangle is default copyable at compile time.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Rectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>ac9a0d6f44febd6540a52022ea94a2aac</Anchor>
    <Abstract>Rectangle is default movable at compile time.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Rectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>ae8f9fdf0f301292eeb160e6f77d38c4d</Anchor>
    <Abstract>Creates a rectangle with the specified length and width (in unspecified units).</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a8fe802311145a3a670ca4b3b60801c28</Anchor>
    <Abstract>Returns the area of the rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bisectDiagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a4e63470c8497958d78566c315831545c</Anchor>
    <Abstract>Returns a triangle representing the rectangle bisected along its internal diagonal.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>ab9d1436a161f0b59e7c9ee622c154b60</Anchor>
    <Abstract>Returns the length of the internal diagonal of the rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a9d35a78c50f419646e365472ac5a602e</Anchor>
    <Abstract>Returns true if the rectangle is square; ie, the length is equal to the width.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a3c9b3fc17a0b97ce3659a685addbd976</Anchor>
    <Abstract>Returns the length of the rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>af927de17bfea865b26a7586703f4fc96</Anchor>
    <Abstract>Rectangle is default copyable at compile time.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>ac63105a790d081cc874d10f40c7a5a7c</Anchor>
    <Abstract>Rectangle is default movable at compile time.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a2ba45334fb693bcc8ce436bf4fec2cb5</Anchor>
    <Abstract>Returns the perimeter of the rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d6/d5b/classlimes_1_1math_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a5975b89ef8d588fab189d6c16c037854</Anchor>
    <Abstract>Returns the width of the rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::RectangularPrism</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Abstract>This class represents a rectagular prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>aa674acd40d9b393df5467fc3b059995f</Anchor>
    <Abstract>RectangularPrism is default copyable at compile time.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>aea9a3c28639421bd6bad565d337468e7</Anchor>
    <Abstract>RectangularPrism is default movable at compile time.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>acfd5830236cedd40faabea76f3e3b0dc</Anchor>
    <Abstract>Creates a RectangularPrism with the given dimensions.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>aa483bb5bcbda58ebe7213b35aa6a1fd4</Anchor>
    <Abstract>Returns the height of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCube</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a82907a7bf300d3bf96752302614800d7</Anchor>
    <Abstract>Returns true if this rectangular prism is a cube.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a86d26f7ff10edc264c4d2a0d4dd6c4fb</Anchor>
    <Abstract>Returns the length of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>acfbecceed1680afcab79789621b65567</Anchor>
    <Abstract>RectangularPrism is default copyable at compile time.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>ad490d9f0c5aec16436981cbf39e71836</Anchor>
    <Abstract>RectangularPrism is default movable at compile time.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spaceDiagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a04aa482780b4a884fe355959d75d50ce</Anchor>
    <Abstract>Returns the space diagonal of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>ad0a7b78196b650b581cedec7f5446442</Anchor>
    <Abstract>Returns the surface area of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ae415dec2021c2da43e3907efc849f827</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a086817add494cf61726cf6c6459586ed</Anchor>
    <Abstract>Returns the volume of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a5f2df8ea7467e3da87f77b358e15c4a9</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>de/d19/classlimes_1_1math_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>ada00e6438833c01649113a65e8d14baa</Anchor>
    <Abstract>Returns the width of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Sphere</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Abstract>This class represents a sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a9fb7793dbd1932e6cafa305783bb7a89</Anchor>
    <Abstract>Sphere is default copyable at compile time.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>af681137b3992a82bcd99ee778a190f33</Anchor>
    <Abstract>Sphere is default movable at compile time.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>circumference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a9b0df3a475cd3ed4775377268f2baaaa</Anchor>
    <Abstract>Returns the circumference of the sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>ace2dba867384137aecd34983923968e8</Anchor>
    <Abstract>Returns the diameter of the sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGreatCircle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>af9ec8a7a9b731bafe7c177f52ddf82b1</Anchor>
    <Abstract>Returns a Circle object with the same radius as this sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a6bf68b77fc5354204233bef948c20c91</Anchor>
    <Abstract>Sphere is default copyable at compile time.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a035d50a5eb7813a8dda23fb698740291</Anchor>
    <Abstract>Sphere is default movable at compile time.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a1fd48ce63134937f2c02f2cb6b4d6360</Anchor>
    <Abstract>Returns the radius of the sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>ac463870c35ce8963e1154b0432b49751</Anchor>
    <Abstract>Returns the surface area of the sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ae415dec2021c2da43e3907efc849f827</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>ac7c00ce3314f993f74168a6c38f73bc5</Anchor>
    <Abstract>Returns the volume of the sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a5f2df8ea7467e3da87f77b358e15c4a9</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a63a3878a459b6ce7bf64db70fc424b7f</Anchor>
    <Abstract>Creates a sphere with the given radius.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>da/dbb/classlimes_1_1math_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a9bd063dcdd9853a05ef8c15ea0a1ac67</Anchor>
    <Abstract>Creates a sphere with the given great circle.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Square</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Abstract>Represents a square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>af855fb6c85225f5dae74d31656f57d1c</Anchor>
    <Abstract>Square is default copyable at compile time.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>a2f2f98ae41cabbdab3d7bf9aa3a61002</Anchor>
    <Abstract>Square is default movable at compile time.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>af01bb6bb89c74b28c5747ec293aedab3</Anchor>
    <Abstract>Creates a square with the specified side length (in unspecified units).</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>a2f20e309c643971348a645a00b77a04b</Anchor>
    <Abstract>Returns the area of the square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bisectDiagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>a6e82ba1441e087f96c9e5f980208ccda</Anchor>
    <Abstract>Returns a triangle representing this square bisected along its internal diagonal.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>acf867d773755c10af3a08b3b1282262c</Anchor>
    <Abstract>Returns the length of the internal diagonal of this square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>add68ca4e36d4c3a05f21b0894fb57b55</Anchor>
    <Abstract>Returns a Rectangle object with the same dimensions as this square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>a7b23c84b5d8f9f20f21bf22cfca10c87</Anchor>
    <Abstract>Square is default copyable at compile time.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>a5d1e62d0a6b4537f4690bf9fedfa403a</Anchor>
    <Abstract>Square is default movable at compile time.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>a56db43308c30448bb9220ad7c973293c</Anchor>
    <Abstract>Returns the perimeter of the square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sideLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d6/db8/classlimes_1_1math_1_1geometry_1_1_square.html</Path>
    <Anchor>a29b04c1ec9738e624547a34dbe02a616</Anchor>
    <Abstract>Returns the side length of the square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::ThreeDShape</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Abstract>A base class for any kind of 3-dimensional shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThreeDShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a31d7aff3f2453719bdc9bf0700a17053</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ae415dec2021c2da43e3907efc849f827</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a5f2df8ea7467e3da87f77b358e15c4a9</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::Triangle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Abstract>Represents a triangle.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a378acfa55d7144b4a503e9aec6313c76</Anchor>
    <Abstract>Triangle is default copyable at compile time.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a2b6ce5a956b8edf9bb05a5194366fdea</Anchor>
    <Abstract>Triangle is default movable at compile time.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>altitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a330456714f2983890499d7395fa7971e</Anchor>
    <Abstract>Returns the length of the vertical altitude from the triangle&apos;s base to the point opposite the base.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a96522b74c4f2ce69c67a8cd135d26906</Anchor>
    <Abstract>Returns the area of the triangle.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bisect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a18a0a3fb95423cf73304a07e81541924</Anchor>
    <Abstract>Returns a new triangle created by bisecting the requested side of the current triangle.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSimilarTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a71ddf8d3935d81fc13a45ac5fe25a723</Anchor>
    <Abstract>Returns true if the two triangles have the same angle measures, regardless of their side lengths.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>aeabb78073b50089ecadf5968eddbad17</Anchor>
    <Abstract>Triangle is default copyable at compile time.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a043220b261ffc86b0137520aa74eabca</Anchor>
    <Abstract>Triangle is default movable at compile time.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>ab6121a5e7bf9a7e440c3fe6de5bab216</Anchor>
    <Abstract>Returns the perimeter of the triangle.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>ad6f060364a89f4c6a4538a9323b78d01</Anchor>
    <Abstract>Creates a triangle with all three side lengths explicitly specified.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a7c47118dfbb8ed357bc524d4732b675e</Anchor>
    <Abstract>Creates a triangle from one side length and two angles.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>aa232fe30d8b243f5545206384096366c</Anchor>
    <Abstract>Creates a triangle from two side lengths and the angle between them.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a1019f38fe33f07732df09d0638e8b49a</Anchor>
    <Abstract>Returns the length of the triangle&apos;s base side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a68790979a25a874b8970d8b0446625db</Anchor>
    <Abstract>Returns the length of the triangle&apos;s height side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hypotenuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a65e74bd6be0b57e3caa5e597e7c74043</Anchor>
    <Abstract>Returns the length of the triangle&apos;s hypotenuse side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>ae5c1db6657e1b02a2cf8a41967bf4266</Anchor>
    <Abstract>Returns the length of the requested side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEquilateral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a5e69aa8dccd9ba8c78116786b25e848a</Anchor>
    <Abstract>Returns true if all three sides are the same length.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIsosceles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>aff69692d89ea7a68215b15866a8b8514</Anchor>
    <Abstract>Returns true if two sides have the same length.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScalene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a56e50366db44326959e481b4d1572a06</Anchor>
    <Abstract>Returns true if no two sides are the same length.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a33ffc05ca202161149c3577c3b5fb7b8</Anchor>
    <Abstract>Returns true if one of the angles is a right angle.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAcute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>adb023b2ae550960213633b552bde8abc</Anchor>
    <Abstract>Returns true if all three angles are acute.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObtuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>ab8a018b2161dea95183d70270eede7f0</Anchor>
    <Abstract>Returns true if one angle is obtuse.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBaseAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a7b14ae93c728070dd210620715e3db88</Anchor>
    <Abstract>Returns the angle opposite the base side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeightAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a2d2adcf58163570644ec15aa1578486d</Anchor>
    <Abstract>Returns the angle opposite the height side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHypotenuseAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>ae40f139dd45fd2bcb99198cae24a7e85</Anchor>
    <Abstract>Returns the angle opposite the hypotenuse side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>db/df4/classlimes_1_1math_1_1geometry_1_1_triangle.html</Path>
    <Anchor>af6f2c72e7e810cb415da227558f2411e</Anchor>
    <Abstract>Returns the angle opposite the requested side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::TriangularPrism</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Abstract>This class represents a triangular prism.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a594f04ee4352296a7a4bbb6eaef85559</Anchor>
    <Abstract>TriangularPrism is default copyable at compile time.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>aee68f0173331a9ee695dfef08575f843</Anchor>
    <Abstract>TriangularPrism is default movable at compile time.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a1c6c20e0d5432e996b2172d0a4455338</Anchor>
    <Abstract>Returns a Triangle object representing a face of this prism.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a1d813678d6dd86eca2baa63ab9940373</Anchor>
    <Abstract>Returns the length of the prism.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a5d2298339700dccafdd9807d6e8fb951</Anchor>
    <Abstract>TriangularPrism is default copyable at compile time.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a8b7b0e7e8cd1127965f805f00c46007b</Anchor>
    <Abstract>TriangularPrism is default movable at compile time.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>aa4d8cb50ee9701c9d8907ecefba26cdd</Anchor>
    <Abstract>Returns the surface area of the prism.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ae415dec2021c2da43e3907efc849f827</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a3ae1f5b118d4ba810cfafab3742d1e40</Anchor>
    <Abstract>Returns the volume of the prism.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d8b/classlimes_1_1math_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a5f2df8ea7467e3da87f77b358e15c4a9</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>aadcfb13ce927c7999aee31e8b61d6962</Anchor>
    <Abstract>Creates a triangular prism with the given face and length.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>db/ddc/classlimes_1_1math_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a8b74e3a002ff199e2041f5898ba3b75d</Anchor>
    <Abstract>Creates a triangular prism with the given dimensions.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::math::geometry::TwoDShape</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::math::geometry::TwoDShape</Scope>
    </TokenIdentifier>
    <Path>d9/d50/classlimes_1_1math_1_1geometry_1_1_two_d_shape.html</Path>
    <Abstract>A base class for any kind of 2-dimensional shape.</Abstract>
    <DeclaredIn>2Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TwoDShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TwoDShape</Scope>
    </TokenIdentifier>
    <Path>d9/d50/classlimes_1_1math_1_1geometry_1_1_two_d_shape.html</Path>
    <Anchor>a9574b007b872cda0754317de5b295d79</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>2Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TwoDShape</Scope>
    </TokenIdentifier>
    <Path>d9/d50/classlimes_1_1math_1_1geometry_1_1_two_d_shape.html</Path>
    <Anchor>aa78cba3a9c14a6c6ad9b64d68ab4a90c</Anchor>
    <Abstract>Returns the area of the shape.</Abstract>
    <DeclaredIn>2Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::math::geometry::TwoDShape</Scope>
    </TokenIdentifier>
    <Path>d9/d50/classlimes_1_1math_1_1geometry_1_1_two_d_shape.html</Path>
    <Anchor>a6a9123281f5cc3fb6dc7e030ca8e0bd6</Anchor>
    <Abstract>Returns the perimeter of the shape.</Abstract>
    <DeclaredIn>2Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d0/deb/namespacelimes_1_1memory.html</Path>
    <Abstract>This namespace contains utilities for working with memory allocation and management.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga33390ddedd9f134e7c29d771f8bf823f</Anchor>
    <Abstract>Allocates the desired number of objects with the desired alignment.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>gab2c3c66b09b7249811b98dd5b406b78f</Anchor>
    <Abstract>Deallocates a pointer that was previously allocated with allocate_aligned() .</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStaticObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>gada3cd95222acdc37ef8ecd1368a49138</Anchor>
    <Abstract>This function retrieves a static object of a specified type.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_static</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga416890115f8f2267d83aad03d1b6346b</Anchor>
    <Abstract>This function forces some data to be evaluated at compile time.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory::aligned_pointer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d5/dde/classlimes_1_1memory_1_1aligned__pointer.html</Path>
    <Abstract>An RAII object that calls allocate_aligned() on construction and deallocate_aligned() on destruction.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OwnedType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d5/dde/classlimes_1_1memory_1_1aligned__pointer.html</Path>
    <Anchor>aa1c17916f084c26f5892b469ba73eedb</Anchor>
    <Abstract>You can access the type of the owned object using this typdef.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aligned_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d5/dde/classlimes_1_1memory_1_1aligned__pointer.html</Path>
    <Anchor>a726ef0b6ed55db46902a99e1de019fec</Anchor>
    <Abstract>aligned_pointer is default movable.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aligned_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d5/dde/classlimes_1_1memory_1_1aligned__pointer.html</Path>
    <Anchor>a5923ef43d5f1ef4e8890a373333a3137</Anchor>
    <Abstract>aligned_pointer is not copyable.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aligned_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d5/dde/classlimes_1_1memory_1_1aligned__pointer.html</Path>
    <Anchor>a237a6e67430d13dee44af82378bedf91</Anchor>
    <Abstract>Creates an aligned_pointer.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~aligned_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d5/dde/classlimes_1_1memory_1_1aligned__pointer.html</Path>
    <Anchor>a479a844224cd7dd20c5bf4e423864247</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d5/dde/classlimes_1_1memory_1_1aligned__pointer.html</Path>
    <Anchor>af33bbcd0c4d5f3657c3cc03744f306bd</Anchor>
    <Abstract>Returns a reference to the owned object.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d5/dde/classlimes_1_1memory_1_1aligned__pointer.html</Path>
    <Anchor>aaad2df25469cb0deebe0febc9dbd92da</Anchor>
    <Abstract>aligned_pointer is default movable.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d5/dde/classlimes_1_1memory_1_1aligned__pointer.html</Path>
    <Anchor>ad932208dcfd979766790552a58117857</Anchor>
    <Abstract>aligned_pointer is not copyable.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d5/dde/classlimes_1_1memory_1_1aligned__pointer.html</Path>
    <Anchor>a8d24089a818d26a2c24dadbcd3c1cc09</Anchor>
    <Abstract>Indexes into the pointer like a C-style array.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory::AlignedAllocator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>de/d1e/classlimes_1_1memory_1_1_aligned_allocator.html</Path>
    <Abstract>An STL-style allocator that allocates aligned pointers.</Abstract>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AlignedAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>de/d1e/classlimes_1_1memory_1_1_aligned_allocator.html</Path>
    <Anchor>a085a3f95d9e9e556c1d042cba4d4196b</Anchor>
    <Abstract>AlignedAllocator is default movable at compile time.</Abstract>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AlignedAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>de/d1e/classlimes_1_1memory_1_1_aligned_allocator.html</Path>
    <Anchor>a9be3e1c921ddaf986b5c2076a0257f1b</Anchor>
    <Abstract>AlignedAllocator is default copyable at compile time.</Abstract>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>de/d1e/classlimes_1_1memory_1_1_aligned_allocator.html</Path>
    <Anchor>a4fed912e794b2d4470aaf4c09bb3f40a</Anchor>
    <Abstract>AlignedAllocator is default movable at compile time.</Abstract>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>de/d1e/classlimes_1_1memory_1_1_aligned_allocator.html</Path>
    <Anchor>a072e88720b999b21a66e8fe280943815</Anchor>
    <Abstract>AlignedAllocator is default copyable at compile time.</Abstract>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory::MemoryPool</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Abstract>This class is a pool of preallocated memory that can be doled out in smaller chunks,...</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a09721e4408200a9ded07fd92302a9075</Anchor>
    <Abstract>MemoryPool is not copyable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a82d264167210dce1298b701b1ccaefc9</Anchor>
    <Abstract>MemoryPool is not movable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a8182a2556da3ab78a6ed3fb6b7aab73a</Anchor>
    <Abstract>Creates a MemoryPool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MemoryPool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a2f06c0e6f648f20eca036b9e754097ef</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a969d37e17a58348462b7493e57265ae5</Anchor>
    <Abstract>Returns true if the memory pool&apos;s preallocated memory contains the passed memory location.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChunkSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a4d93a8a7e182a2153847ff6a82b55f2b</Anchor>
    <Abstract>Returns the pool&apos;s internal chunk size, in bytes.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemoryRootLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>ab51f19d1c131fb1cb1f2a91d103d7697</Anchor>
    <Abstract>Returns the start location of the pool&apos;s preallocated memory block.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemainingCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a0bf7a1c4016a81c8e5442d300c3d0e7e</Anchor>
    <Abstract>Returns the remaining space in the pool, expressed as the number of additional ObjectType objects it ...</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemainingSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a939ca8be78c78c2e03b4f60fab92a612</Anchor>
    <Abstract>Returns the total remaining free space in the memory pool, in bytes.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a3eb66ff22d357282efd9dbe92c1ca2c3</Anchor>
    <Abstract>Returns the total size of this memory pool, expressed as the number of ObjectType objects it can hold...</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a219e17071d131aa36347f5a6a0f6e1c7</Anchor>
    <Abstract>Returns the total size, in bytes, of the memory pool&apos;s preallocated memory.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a74e155a61b6c3f8198095cff27f6d85a</Anchor>
    <Abstract>MemoryPool is not copyable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>aa25d915d83ffb1e1bc313033c604d7b5</Anchor>
    <Abstract>MemoryPool is not movable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>owns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>af195dad3b61facb68d8d11b1fd74ae92</Anchor>
    <Abstract>Returns true if the pool owns the specified object – ie, if the pointer to the object is within the p...</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>aef41f5676da28ea5ef131e5b13cdaa2c</Anchor>
    <Abstract>Allocates the desired number of bytes from the pool&apos;s preallocated memory.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a539da3ba77e895176bd8469879d622fc</Anchor>
    <Abstract>Allocates sizeof(ObjectType) bytes, and returns a typed pointer to the allocated memory location.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>construct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a5aabcf14fcb9d46166a58573b6870f3c</Anchor>
    <Abstract>Allocates space for an object and constructs it in the allocated memory space.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constructOrBust</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a419feff9fd80841d3d281b926c8252cc</Anchor>
    <Abstract>Similar to construct(), but if allocation from the memory pool fails, falls back to a regular new cal...</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>a9dd2d88aee62131db721fd486df027d0</Anchor>
    <Abstract>Deallocates a certain number of bytes at a specific location within the pool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>ae9f585dc97e3d181f68e31ed83b9f489</Anchor>
    <Abstract>Deallocates the passed object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destruct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>acb71aef746fe8294e2cf46fb198247cf</Anchor>
    <Abstract>Calls an object&apos;s destructor and frees its memory from the pool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d2/d57/classlimes_1_1memory_1_1_memory_pool.html</Path>
    <Anchor>aadd29a5c4ecdff792861f7ceb35b177c</Anchor>
    <Abstract>Creates a MemoryPool that can hold a specified number of objects of a certain type.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory::MemoryPoolAllocator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>d7/dea/classlimes_1_1memory_1_1_memory_pool_allocator.html</Path>
    <Abstract>An STL-style allocator that uses an internal MemoryPool to allocate objects.</Abstract>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>d7/dea/classlimes_1_1memory_1_1_memory_pool_allocator.html</Path>
    <Anchor>aef0d057ffd30c73c998a5a2650b5a3ad</Anchor>
    <Abstract>MemoryPoolAllocator is not copyable.</Abstract>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>d7/dea/classlimes_1_1memory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a5d9a668b9aec3a541fbcd87577e983fd</Anchor>
    <Abstract>MemoryPoolAllocator is not movable.</Abstract>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>d7/dea/classlimes_1_1memory_1_1_memory_pool_allocator.html</Path>
    <Anchor>aff70496c354343816aaa62e5170a0a21</Anchor>
    <Abstract>MemoryPoolAllocator is not copyable.</Abstract>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>d7/dea/classlimes_1_1memory_1_1_memory_pool_allocator.html</Path>
    <Anchor>ab6f863e2561a621df4f1b2de9e672cee</Anchor>
    <Abstract>MemoryPoolAllocator is not movable.</Abstract>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory::MemoryPoolPointer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Abstract>A smart pointer to an object that lives within a MemoryPool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OwnedType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>aca4fac1e2b28438cebfe44a905b7c0a7</Anchor>
    <Abstract>You can access the type of the owned object via this typedef.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>ab6ccb05b7ae49a111074a2628422e2ea</Anchor>
    <Abstract>MemoryPoolPointer is not copyable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a8af2d6bfa02bf72832b17b77262d8349</Anchor>
    <Abstract>Creates the owned object by allocating its memory from the passed memory pool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a982c02c7ced5e5bf0f987d3f0e8bd677</Anchor>
    <Abstract>MemoryPoolPointer is default movable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MemoryPoolPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>ad5050712d837fe86b6e408625c4fd6ee</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOwnedByPool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a668b99c48e2a5fbf781078e5724f63c7</Anchor>
    <Abstract>Returns true if the object exists and was allocated from the memory pool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a8fd63cd80ffff15721311cc082214451</Anchor>
    <Abstract>Returns a reference to the owned object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a1e0ead09b60b8f6e0e275f27e5b4d0fe</Anchor>
    <Abstract>MemoryPoolPointer is not copyable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a4a1854618869906e756b675c92da5163</Anchor>
    <Abstract>MemoryPoolPointer is default movable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a20a0eab6e5041a6448c70c663b5c863d</Anchor>
    <Abstract>Accessors Returns a pointer to the owned object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a4c57ed223320aec448aeb649dd286331</Anchor>
    <Abstract>Accessors Returns a pointer to the owned object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator ObjectType *</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>afab4471552dafb96ab547a6c57fd2454</Anchor>
    <Abstract>Accessors Returns a pointer to the owned object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d0/d6e/classlimes_1_1memory_1_1_memory_pool_pointer.html</Path>
    <Anchor>aeb9cb0c3aa1dfb5ef9463ded41d1bc6b</Anchor>
    <Abstract>Accessors Returns a pointer to the owned object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory::OptionalObject</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Abstract>An object that retains its allocated memory, but can be dynamically constructed and destroyed (withou...</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Anchor>adca49aea73bc078088fe5aedc3e8b238</Anchor>
    <Abstract>You can access the type of the owned object with this typedef.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Anchor>ac3108cb3d69a3f84a3e53828d842fc18</Anchor>
    <Abstract>Constructs the object with the given arguments.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Anchor>ac84731fe580975466f83b08f48ad69f0</Anchor>
    <Abstract>Calls the object&apos;s destructor, but does not deallocate its memory.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Anchor>a4f439b2058f48e769317fb684b76b87e</Anchor>
    <Abstract>Returns true if the object currently exists.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Anchor>a91da80c5d44e16adc88ee3c78541d00e</Anchor>
    <Abstract>Returns a reference to the owned object.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OptionalObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Anchor>af49fddb5ed3407f08ae0ce452a1cf3a1</Anchor>
    <Abstract>Creates an uninitialized, null object.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OptionalObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Anchor>a4c33755033ced6a58c1d85c507fd0e80</Anchor>
    <Abstract>Constructs the object with the given arguments.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OptionalObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Anchor>a4ad8dd4a60174fe28f4c2e5282873c54</Anchor>
    <Abstract>Copy constructor.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OptionalObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Anchor>ad9639bf804b5b49e98119eed441e6ab5</Anchor>
    <Abstract>Move constructor.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>d5/d21/classlimes_1_1memory_1_1_optional_object.html</Path>
    <Anchor>acfc3b18bece91d6909d3efa34d1ea5e6</Anchor>
    <Abstract>Returns the size of the owned object (and thus, the preallocated memory), in bytes.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory::RawData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Abstract>This class is a wrapper around a pointer to some raw data on the heap.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>ad47445add8f8476551d38b895b9ce8e4</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a9b9b17e2962272eb55e008fa2ae69192</Anchor>
    <Abstract>Allocates new memory for this object.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a91f523b0be17ae83478852405aeff2d9</Anchor>
    <Abstract>Writes the specified value to every byte in this object&apos;s owned memory.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>free</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a155e744c46e1bf8f4dcb263e25812a64</Anchor>
    <Abstract>Frees all of this object&apos;s internal memory.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a0801422425b6857a481d9f8dc8f5ddd7</Anchor>
    <Abstract>Returns the size (in bytes) of the data that this object owns.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a619750d96593d05a29de5b9373874a6e</Anchor>
    <Abstract>Computes a hash value for this object&apos;s data, based on the specified hash type.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>ad6f38067d03905b30232894f34a9e0d2</Anchor>
    <Abstract>Returns true if this data object is empty.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a4ac134aa33a60c6e73374de741bc24f7</Anchor>
    <Abstract>Returns this object&apos;s memory pointer and releases ownership of it.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a0506e7223c51bb2bbe8c1dbe8c61e15a</Anchor>
    <Abstract>Returns a string representation of the data this object contains.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>ae4f4b142bf13509567caa47387eb10c0</Anchor>
    <Abstract>Writes this object&apos;s data to the passed output stream.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a9744d40e036a494cdbb1b7f7dbeb67e2</Anchor>
    <Abstract>Fills this object&apos;s owned memory with zeroes.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>ab0b2cfc82a7a35b60f94246a3ecdc09c</Anchor>
    <Abstract>Constructs an empty RawData object that owns no memory.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a0274f381705a30851fe96e3823f5cda5</Anchor>
    <Abstract>Constructs a RawData objects that is allocated some initial memory, optionally initialized to zeroes.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a36fae0b6a458df2888ac310f8d0a24b7</Anchor>
    <Abstract>Constructs a RawData object that refers to the specified data.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>afde165d2ff0603b2a32815ebf992c6a0</Anchor>
    <Abstract>Constructs a RawData object whose memory is initialized by reading the entire contents of the input s...</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>ad03d1c7a0dfd8febfc30aa1ba4a497ea</Anchor>
    <Abstract>Constructs a RawData object whose memory is initialized with the contents of the string.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>ae0f6f8cac5a3955952eca8235dd206e0</Anchor>
    <Abstract>Copy constructor.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a217e5122e22b9c6d8823a5232845e4ed</Anchor>
    <Abstract>Move constructor.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>afa060efa623234f00986768954d7ccaf</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a3d01fbbd700757366e5c83880ef43eac</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a75d954c4b32cf24dcfc3f311a5a93aaf</Anchor>
    <Abstract>Appends some data to the end of this object&apos;s data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a90fd86bf460cee85466351c7703bff24</Anchor>
    <Abstract>Appends some data to the end of this object&apos;s data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a1be30ef4dcddd961b925ee164689c796</Anchor>
    <Abstract>Prepends some data to the beginning of this object&apos;s data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>ad615d2fe5c34f81927a1c1a6b77b7438</Anchor>
    <Abstract>Prepends some data to the beginning of this object&apos;s data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>ab0c7ac95f0b1a1208d3b9697bb535ab1</Anchor>
    <Abstract>Overwrites this object&apos;s data with the input data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>aa812b70301a400f3541a9d16c89ec6bc</Anchor>
    <Abstract>Overwrites this object&apos;s data with the input data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>afc5a525a4cad1cd019174008594f458d</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>a87180c396b89589b7abd9db7f5fc2f8d</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::RawData</Scope>
    </TokenIdentifier>
    <Path>da/d70/classlimes_1_1memory_1_1_raw_data.html</Path>
    <Anchor>af944b40ae97f1d0c346cd1b69dd85890</Anchor>
    <Abstract>Returns a new RawData object that contains a copy of this object&apos;s data.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory::ReferenceCountedObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Abstract>An object that is reference-counted, and garbage collected once the reference count reaches 0.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Anchor>ac59d84a9c69e5dc0fe7651e83dbc7205</Anchor>
    <Abstract>Decrements the object&apos;s reference count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decRefCountWithoutDeleting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Anchor>a892ab41049bd99d85452c2e3df520289</Anchor>
    <Abstract>Decrements the object&apos;s reference count, but doesn&apos;t delete the object if the ref count reaches 0.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Anchor>ae6166a07a74f40a68e1af59e39c70b73</Anchor>
    <Abstract>Returns the object&apos;s current reference count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Anchor>a1991ecf2eb7a6e6e10d60f58adfa458f</Anchor>
    <Abstract>Increments the object&apos;s reference count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Anchor>a03f1d6232be0f671cbd7eaee95190b6c</Anchor>
    <Abstract>Creates the reference-counted object (with an initial ref count of zero).</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Anchor>af04c4630b263487a48a9a804d2731477</Anchor>
    <Abstract>Copying from another object does not affect this one&apos;s reference-count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Anchor>aa04456a22e0eabc99417e4857767edc2</Anchor>
    <Abstract>Copying from another object does not affect this one&apos;s reference-count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ReferenceCountedObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Anchor>a1faac06b21d98e0c02dca0c8f5963926</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Anchor>a81f15fe92154d64c9ed90f53e33f7888</Anchor>
    <Abstract>Copying from another object does not affect this one&apos;s reference-count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>d9/d0e/classlimes_1_1memory_1_1_reference_counted_object.html</Path>
    <Anchor>a1e12a3f3f19ae7ecfb31681e2f7afc64</Anchor>
    <Abstract>Copying from another object does not affect this one&apos;s reference-count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory::ReferenceCountedObjectPtr</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>ad3e8bf01cd12a6c218d89a3e83034533</Anchor>
    <Abstract>Creates a pointer to a null object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a31e6078cf687e355bace1d01705ff7b8</Anchor>
    <Abstract>Copies another pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a49f09912d18515920dfdc5de7efdbcc4</Anchor>
    <Abstract>Copies another pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>af5dac75321ed53b423e4930f45e6d25d</Anchor>
    <Abstract>Takes-over the object from another pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>aeec74013f03b63734cd87004b6934df7</Anchor>
    <Abstract>Creates a pointer to an object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a7ceb33621e5d29fa220ad6504ea7e2ab</Anchor>
    <Abstract>Creates a pointer to an object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a04c7f7fb856ca5cc4fec6b1845dab04c</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a4061bb139f26b35ac155709ab4252378</Anchor>
    <Abstract>Returns the object that this pointer references.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>ab9248b33b6090409c9a320c064349f92</Anchor>
    <Abstract>Checks whether this pointer is null.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>ac0068687213fc4094b247e6e546b4b3c</Anchor>
    <Abstract>Compares two ReferenceCountedObjectPtrs.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>abe7900792f7932483c962c0ea09f5087</Anchor>
    <Abstract>Compares two ReferenceCountedObjectPtrs.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a8c8cb9df70718719a23a418bc4070679</Anchor>
    <Abstract>Checks whether this pointer is null.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a39a8d1055d1fc7dac5e01ebe8f57dfe8</Anchor>
    <Abstract>Dereferences the object that this pointer references.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a19582f9a9cca6d1b450c4613578b5ccc</Anchor>
    <Abstract>Changes this pointer to point at a different object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>adc3b47920f717f6defc52e90c45f138a</Anchor>
    <Abstract>Changes this pointer to point at a different object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a83b6d31e58889421e21e0386e467e9ef</Anchor>
    <Abstract>Resets this pointer to a null pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a7afc2eaed4d4688abfbadebe3976932a</Anchor>
    <Abstract>Takes-over the object from another pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a08976f1953eb03d75b7def735c6e35c6</Anchor>
    <Abstract>Changes this pointer to point at a different object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>ae9fed3a15e19d9f6511de83ec3106dc6</Anchor>
    <Abstract>Changes this pointer to point at a different object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a97de717d38653c6b0933a4516d46d1b7</Anchor>
    <Abstract>Compares two ReferenceCountedObjectPtrs.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a2fdb52933a379a3f40a26a5cc8379159</Anchor>
    <Abstract>Compares two ReferenceCountedObjectPtrs.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a155a61ecce7b98a73b8272a92c898b27</Anchor>
    <Abstract>Checks whether this pointer is null.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>da/d92/classlimes_1_1memory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>ab526ead26163a8d25a2d5ee440d5dd25</Anchor>
    <Abstract>Resets this object to a null pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::memory::StackAllocator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d5/d2d/classlimes_1_1memory_1_1_stack_allocator.html</Path>
    <Abstract>An STL-style allocator that uses stack space to allocate objects.</Abstract>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::meta</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d0/d06/namespacelimes_1_1meta.html</Path>
    <Abstract>This namespace contains utilities for template metaprogramming.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga94038764f8ce07e7edd3b2a1168f18e0</Anchor>
    <Abstract>A utility typedef for an empty TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_type_list_from_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga9060d726b65a05a30106f61c012acabf</Anchor>
    <Abstract>Creates a typelist from the template arguments of a template type.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_typelist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gac84fa6c1440ae058963560bac7673709</Anchor>
    <Abstract>True if the specified type is a specialization of TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga16aa213be5982774c8ccb3873f47cb19</Anchor>
    <Abstract>@concept type_list</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::meta::TypeList</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Abstract>A compile-time list of types that can be manipulated.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a0faeff06fe5e188b40ca90ed2739302a</Anchor>
    <Abstract>The type of a new TypeList with the given types appended to the end.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>ad87dc639399361b4973c1a610efc90c9</Anchor>
    <Abstract>The type of a new TypeList with types added from another TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIfAbsent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a663ba4af6f138a4f464f897ef2f0fc20</Anchor>
    <Abstract>For each type in the passed list of types, adds it to the TypeList if it was not already in the list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>ad3053360fd3fde8b72d5bb70a1300149</Anchor>
    <Abstract>Appends a type to the end of the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_to</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>ab97fee30123980aacc342ee8c9c4d5b9</Anchor>
    <Abstract>Applies the types in this TypeList to a class template, as its template arguments.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>ab7fb0d88be2df6e354799b3be824f3e2</Anchor>
    <Abstract>Gets the type of an element of the list at the specified index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a0a83284e592886fdf3f833e0d1dd1963</Anchor>
    <Abstract>The type of the last element in the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a6d278b01387fd8eb35545fc39fd8c5ba</Anchor>
    <Abstract>Creates an empty TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>common_with</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a85d77134aa6dcbca81823516a85d0c54</Anchor>
    <Abstract>The type of a new TypeList that contains only types that were present in the original list and the pa...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>front</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>af819e6772f20842c9e6b1369f8a5b4dd</Anchor>
    <Abstract>The type of the first element in the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>ae7e366f6a6fda95cb6f8defccb5e4504</Anchor>
    <Abstract>Inserts a type in the TypeList at the given Index .</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>not_in</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a1f0fe3f87df4bf96340a670a9921ac14</Anchor>
    <Abstract>The type of a new TypeList that contains only types that were present in the original list and not in...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>ab954e601b47b33e8520de49c961a3d40</Anchor>
    <Abstract>Prepends a type to the beginning of the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>ad6c03b000bb3e24b46af7aef97889034</Anchor>
    <Abstract>The type of a new TypeList with all occurrences of the passed types removed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a2af91e71951d4c2a568cd1db21145dfd</Anchor>
    <Abstract>The type of a new TypeList with the type at the specified index removed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_duplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a4a8d1b7ea3914fec56368841b2996abc</Anchor>
    <Abstract>The type of a new TypeList with all duplicates removed – if a type appeared in the original list mult...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_first</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a33d25fe6b3a944580aa8ce87dd25377e</Anchor>
    <Abstract>Removes the first element of the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a12a7c3628cf8110d452f4ea842a8a025</Anchor>
    <Abstract>Evaluates the predicate for each type in the list, and removes it if the predicate is met.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if_not</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a369a63c778a61b0282ee8774add7b00a</Anchor>
    <Abstract>Evaluates the predicate for each type in the list, and removes it if the predicate is not met.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_last</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a4c583976943431017edf55cbb311f7bd</Anchor>
    <Abstract>Removes the last element of the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_null_types</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a28e0e2a6255106b05ff002b15617329c</Anchor>
    <Abstract>If any NullType elements are present in this TypeList, removes them.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>ac212e0d89642ed572a9abce0641641b6</Anchor>
    <Abstract>Replaces all occurrences of Replace in the list with With.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>ae4350ff0869a1b06e667061c08cbaffd</Anchor>
    <Abstract>Replaces the type at the specified Index with the new type ReplaceWith.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a0559d64590d686875e0bc55663d8955a</Anchor>
    <Abstract>The type of a new TypeList with the same types as this one, but in reverse order.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a6d63d0935af91e101aa57cbe37f2fc98</Anchor>
    <Abstract>Swaps two types in the list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a5f32fd5db3756b064d54e13c5d34d66d</Anchor>
    <Abstract>Swaps the types at two indices in the list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TypeID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a5af3ae9e6b8310937288b545f1fd3e68</Anchor>
    <Abstract>You can get the fully specialized type of this TypeList using this alias.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TypeList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a5e656b7470090879bfca35420d855f06</Anchor>
    <Abstract>You can&apos;t actually create an instance of one, TypeLists are only static objects.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>construct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a9dab8799343297acf3e51072921e332f</Anchor>
    <Abstract>Constructs an object of the type at the given index in the list.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>for_all</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>af9ccfc799276fc82774b48e6d6ab0df3</Anchor>
    <Abstract>Calls a templated function once, with the template arguments being the types contained in the list.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>for_each</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a6d7eb3fa39570e243493191e7855b08e</Anchor>
    <Abstract>Calls a templated function for each type in the list.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_unique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>aafe01e066f8859a387312bd62b0e476f</Anchor>
    <Abstract>The same as construct() , except it returns a unique_ptr to the new object.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>aa6755e72c5c97bdc5de48765e490890a</Anchor>
    <Abstract>True if all the passed types are contained in this TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_duplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a2cc02ab677f386542dd3e8413a54eca8</Anchor>
    <Abstract>True if any type appears in the list more than once.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a6c52114623e5f67160df2c012309d639</Anchor>
    <Abstract>True if this TypeList contains at least one of the passed types.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a1be2cddcb042924cc5eab9f78813eb81</Anchor>
    <Abstract>The number of types in the TypeList that satisfy the predicate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if_not</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a2cb6f789cf96745ce4e5842118e8c8c3</Anchor>
    <Abstract>The number of types in the TypeList that do not satisfy the predicate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a7ae10ac8200a2164bb8dae4765092d3f</Anchor>
    <Abstract>True if the TypeList is empty; false otherwise.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a72d5e06a8f19f1e44b6215ef382c4df0</Anchor>
    <Abstract>True if the other TypeList holds the same types in the same order as this one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equal_ignore_order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>af7ebf792d90cb8cc082fde248ebdccc0</Anchor>
    <Abstract>True if the other TypeList holds the same types as this one, regardless of their order.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>index_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a5d047961a49667677ef1451d5f966f77</Anchor>
    <Abstract>The index of the first occurrence of the specified type in the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>addc7c5792a1172b6daa057028c8d0ce2</Anchor>
    <Abstract>The number of times the given type appears in this TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d0/d51/classlimes_1_1meta_1_1_type_list.html</Path>
    <Anchor>a3a81122841a1b1627b2988324657b996</Anchor>
    <Abstract>The total size of the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::midi</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::midi</Scope>
    </TokenIdentifier>
    <Path>d2/d5a/namespacelimes_1_1midi.html</Path>
    <Abstract>This namespace contains utilities for working with MIDI.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::midi::PitchbendMapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d3c/classlimes_1_1midi_1_1_pitchbend_mapper.html</Path>
    <Abstract>This class maps MIDI pitchbend values and note numbers to fractional MIDI note numbers.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAdjustedMidiPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d3c/classlimes_1_1midi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a334e51c99643aaa752269f7652f4a468</Anchor>
    <Abstract>Returns an adjusted MIDI pitch for an incoming MIDI pitch.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastReceivedPitchbend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d3c/classlimes_1_1midi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a87b30461cf23005984f28b9f69475186</Anchor>
    <Abstract>Returns the last pitchbend value that was set via newPitchbendReceived() .</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRangeDown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d3c/classlimes_1_1midi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a8b9c1edbccabd75aaee006b9057d4880</Anchor>
    <Abstract>Returns the pitchbend range down in semitones.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRangeUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d3c/classlimes_1_1midi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a120fa33929e9cb4ba7224482bf72a6f4</Anchor>
    <Abstract>Returns the pitchbend range up in semitones.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newPitchbendReceived</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d3c/classlimes_1_1midi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a2de1cc5ab11c7c3908323339a53f026d</Anchor>
    <Abstract>Each incoming pitchbend value from the pitch wheel should be sent to this function.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPitchbend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d3c/classlimes_1_1midi_1_1_pitchbend_mapper.html</Path>
    <Anchor>ac8e7f6474f87dd9db5bfc696206184a7</Anchor>
    <Abstract>Resets the state of the internal pitchbend to 64 (neutral).</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d3c/classlimes_1_1midi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a4dbc2e825a2c61ae2ed1cf19c78b73bb</Anchor>
    <Abstract>Sets the range up and down in semitones.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::midi::VelocityMapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::midi::VelocityMapper</Scope>
    </TokenIdentifier>
    <Path>df/dd3/classlimes_1_1midi_1_1_velocity_mapper.html</Path>
    <Abstract>This class allows you to impose a &quot;sensitivity&quot; parameter on MIDI messages velocities.</Abstract>
    <DeclaredIn>VelocityMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSensitivity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::VelocityMapper</Scope>
    </TokenIdentifier>
    <Path>df/dd3/classlimes_1_1midi_1_1_velocity_mapper.html</Path>
    <Anchor>aa90f260a7aee763803aa0856a647e71d</Anchor>
    <Abstract>Returns the sensitivity that was set.</Abstract>
    <DeclaredIn>VelocityMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSensitivity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::VelocityMapper</Scope>
    </TokenIdentifier>
    <Path>df/dd3/classlimes_1_1midi_1_1_velocity_mapper.html</Path>
    <Anchor>aea4754b9d7f6af517fb0fd9b8c3fd160</Anchor>
    <Abstract>Sets the sensitivity of incoming velocity messages.</Abstract>
    <DeclaredIn>VelocityMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::midi::tuning</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::midi::tuning</Scope>
    </TokenIdentifier>
    <Path>d2/d1e/namespacelimes_1_1midi_1_1tuning.html</Path>
    <Abstract>This namespace contains utilities for working with MIDI tuning systems.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::midi::tuning::Client</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::midi::tuning::Client</Scope>
    </TokenIdentifier>
    <Path>d5/dba/classlimes_1_1midi_1_1tuning_1_1_client.html</Path>
    <Abstract>This class is a simple wrapper around the MTS-ESP MIDI tuning library.</Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frequencyToMidi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::tuning::Client</Scope>
    </TokenIdentifier>
    <Path>d5/dba/classlimes_1_1midi_1_1tuning_1_1_client.html</Path>
    <Anchor>a275256ff65b21b545531800329a8a0ec</Anchor>
    <Abstract>Converts a given frequency in Hz to a MIDI note, using the master tuning table.</Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScaleName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::tuning::Client</Scope>
    </TokenIdentifier>
    <Path>d5/dba/classlimes_1_1midi_1_1tuning_1_1_client.html</Path>
    <Anchor>a61e2fca38259edc63796ef912255d8d7</Anchor>
    <Abstract>Returns the scale name specified by the MTS-ESP session master.</Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::tuning::Client</Scope>
    </TokenIdentifier>
    <Path>d5/dba/classlimes_1_1midi_1_1tuning_1_1_client.html</Path>
    <Anchor>ad1f0455830999a47f4fa3e925331713e</Anchor>
    <Abstract>Returns true if this client is currently connected to an MTS-ESP session master.</Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midiToFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::tuning::Client</Scope>
    </TokenIdentifier>
    <Path>d5/dba/classlimes_1_1midi_1_1tuning_1_1_client.html</Path>
    <Anchor>abb19d354eb0ff55df5cd5a8fa4299282</Anchor>
    <Abstract>Converts a given MIDI note to a frequency in Hz, using the master tuning table.</Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retuneAmountInSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::tuning::Client</Scope>
    </TokenIdentifier>
    <Path>d5/dba/classlimes_1_1midi_1_1tuning_1_1_client.html</Path>
    <Anchor>ad29870a5f57e704d54bf35b3b6efab1b</Anchor>
    <Abstract>Returns the retune amount in semitones for a given MIDI pitch.</Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldFilterNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::midi::tuning::Client</Scope>
    </TokenIdentifier>
    <Path>d5/dba/classlimes_1_1midi_1_1tuning_1_1_client.html</Path>
    <Anchor>a9600c213c9a6c014f2b1c45b403367ef</Anchor>
    <Abstract>MTS-ESP supports &quot;filtering&quot; some notes out of tuning tables.</Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::misc</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::misc</Scope>
    </TokenIdentifier>
    <Path>d1/d70/namespacelimes_1_1misc.html</Path>
    <Abstract>This namespace contains miscellaneous things.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga6c28fc31963404ed09a07d4117181ee2</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gabf1ebcf6a9b51774bb0065caf5139467</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object, ending with &quot; pointer&quot;.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignore_unused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc</Scope>
    </TokenIdentifier>
    <Path>d1/ded/group__misc.html</Path>
    <Anchor>gaf60f405ce0a2830962ec41c546be5bf7</Anchor>
    <Abstract>A utility function to silence unused variable warnings.</Abstract>
    <DeclaredIn>IgnoreUnused.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::misc::Dimensions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>d4/d42/structlimes_1_1misc_1_1_dimensions.html</Path>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>d4/d42/structlimes_1_1misc_1_1_dimensions.html</Path>
    <Anchor>a106b6c310e72eab915f02852b17f69a2</Anchor>
    <Abstract>Creates an invalid Dimensions object.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>d4/d42/structlimes_1_1misc_1_1_dimensions.html</Path>
    <Anchor>abf840f8001ac427b752375b0a36762fb</Anchor>
    <Abstract>Creates a valid Dimensions object with a specified width and height.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>d4/d42/structlimes_1_1misc_1_1_dimensions.html</Path>
    <Anchor>a92b309d24c7e5e4fdc9cec2454aa5709</Anchor>
    <Abstract>Returns the aspect ratio of the represented dimensions, calculated as width / height.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>d4/d42/structlimes_1_1misc_1_1_dimensions.html</Path>
    <Anchor>a349787eb16fed78743bb4a12b1fe0f9c</Anchor>
    <Abstract>Returns the height of these dimensions.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>d4/d42/structlimes_1_1misc_1_1_dimensions.html</Path>
    <Anchor>a89428292d7d51a628c7d2894e29a8663</Anchor>
    <Abstract>Returns the width of these dimensions.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSameAspectRatioAs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>d4/d42/structlimes_1_1misc_1_1_dimensions.html</Path>
    <Anchor>a9f4cf1bd2e1a2d5a0c08b3af6f9b9a75</Anchor>
    <Abstract>Returns true if the passed Dimensions object has the same aspect ratio as this one.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>d4/d42/structlimes_1_1misc_1_1_dimensions.html</Path>
    <Anchor>aa219abc4832de75850de4f0995246d1c</Anchor>
    <Abstract>Returns true if the width and height are both greater than 0.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>d4/d42/structlimes_1_1misc_1_1_dimensions.html</Path>
    <Anchor>aba3efd2f9effc7f10097744cd4cd0b20</Anchor>
    <Abstract>Returns true if the passed Dimensions object is equal to this one.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>d4/d42/structlimes_1_1misc_1_1_dimensions.html</Path>
    <Anchor>ac1215a134b3034448b64e560562cd907</Anchor>
    <Abstract>Returns a string representation of these dimensions, eg &apos;400x600&apos;.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::misc::ScopedStreamFlags</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>d4/dc9/structlimes_1_1misc_1_1_scoped_stream_flags.html</Path>
    <Abstract>A simple RAII class to save and restore the state of a standard stream&apos;s flags.</Abstract>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedStreamFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>d4/dc9/structlimes_1_1misc_1_1_scoped_stream_flags.html</Path>
    <Anchor>ac08ca53c4024c8467e9de0bcf0f00bdc</Anchor>
    <Abstract>ScopedStreamFlags is not copyable.</Abstract>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedStreamFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>d4/dc9/structlimes_1_1misc_1_1_scoped_stream_flags.html</Path>
    <Anchor>ab1f2ad46d99fcdf3fd1949969a0b8434</Anchor>
    <Abstract>ScopedStreamFlags is not movable.</Abstract>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>d4/dc9/structlimes_1_1misc_1_1_scoped_stream_flags.html</Path>
    <Anchor>a70477f48aa2ac6896f880a42c80f0b80</Anchor>
    <Abstract>ScopedStreamFlags is not copyable.</Abstract>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>d4/dc9/structlimes_1_1misc_1_1_scoped_stream_flags.html</Path>
    <Anchor>a482a5d16a8605f1132cd32cdb9142a4b</Anchor>
    <Abstract>ScopedStreamFlags is not movable.</Abstract>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::misc::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Abstract>A class that represents a version of something, with major, minor, and patch numbers.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>af7850b02c36784d2c3674debfe912705</Anchor>
    <Abstract>Version is default copyable at compile time.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>ad7ab761dc49c04ae1cab8e9f632db36b</Anchor>
    <Abstract>Version is default movable at compile time.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bumpMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a0771c7978fd00044dae7c8b9e649619d</Anchor>
    <Abstract>Increments the major value and sets minor and patch to 0.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bumpMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>ae0d8ee8f0c4b15219cbbcefab6531a64</Anchor>
    <Abstract>Increments the minor value and sets patch to 0.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bumpPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>ac77266d702e4abd723108eb59dec8f9f</Anchor>
    <Abstract>Increments the patch value.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a355c40e730d9943fb25b41d0edfd4839</Anchor>
    <Abstract>Returns the major version number.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a59d059df6fad6641e7a435885bd708cc</Anchor>
    <Abstract>Returns the minor version number.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a87816880250d1bca07ff7f8f7a8ebe5b</Anchor>
    <Abstract>Returns the patch version number.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSameMajorVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a7fffe11b73e97c9cf0915971b132863d</Anchor>
    <Abstract>Returns true if this version has the same major release number as the other one.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>adf55b051b068dba4bd2d9bfdf641359a</Anchor>
    <Abstract>Version is default copyable at compile time.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>ab0cdc78bc73ee3da5c4bb1961565442b</Anchor>
    <Abstract>Version is default movable at compile time.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a482d0fa35466ba33cd50df9ff6d18c80</Anchor>
    <Abstract>Returns a string representation of this Version.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withMajorBump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a873164903f295843038f1ad28293c179</Anchor>
    <Abstract>Returns a new Version object with bumpMajor() applied.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withMinorBump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>ac564250a6369f435a461000a9432f326</Anchor>
    <Abstract>Returns a new Version object with bumpMinor() applied.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withPatchBump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a9f2418e9ce8a6172e37968e010f93704</Anchor>
    <Abstract>Returns a new Version object with bumpPatch() applied.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a233e9ba73f2becf42a9c217f7d76f20a</Anchor>
    <Abstract>Creates a default Version object with the value 0.0.1.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>ae6efb34ba08618a1e151b18919f2503b</Anchor>
    <Abstract>Creates a Version object with a specified value.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>ae5637c899914b329791118030c73c93a</Anchor>
    <Abstract>Returns true if this version is newer than the other one.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a6a37d484f01f9f6da4b051c48153fb66</Anchor>
    <Abstract>Returns true if this version is older than the other one.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewerThan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>ae4f438a99c89725b08aa0dbf970cae0c</Anchor>
    <Abstract>Returns true if this version is newer than the other one.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOlderThan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::misc::Version</Scope>
    </TokenIdentifier>
    <Path>d2/dfb/structlimes_1_1misc_1_1_version.html</Path>
    <Anchor>a4cf1e2cef6d8f4e9b94f82c21fba9053</Anchor>
    <Abstract>Returns true if this version is older than the other one.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>db/ddd/namespacelimes_1_1music.html</Path>
    <Abstract>This namespace contains music theory utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gad937197c36fe7b20d305edb703a8ac78</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga0132c8d23057886215fdbafa776d4aea</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gace85358102f38a5ae37e1f3cc4530512</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gab9baf0955c1a4114a492038c6628dc8a</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>semitonesInOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga3917948bc2fcef45dd070056036806ce</Anchor>
    <Abstract>Integer constant representing the number of semitones in an octave (12).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>octaveNumberOfMidiNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga46f2241f3fac360a4975989206736ba4</Anchor>
    <Abstract>Returns the octave number of a given MIDI pitch.</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lowestNoteOfMidiOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gaa93e375cd60ec541ae8510b99ae9987c</Anchor>
    <Abstract>Returns the lowest note of a given MIDI octave number (that octave&apos;s C key).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharpsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga0505fa816cef899f31e330801d7a58d1</Anchor>
    <Abstract>Returns an array of PitchClass objects representing each sharp in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFlatsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gab2aaf8e0eb63caaab354a4fc58060d4f</Anchor>
    <Abstract>Returns an array of pitch class objects representing each flat in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::Chord</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Abstract>This class represents a musical chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>a07ff675b6f21b66d103bba7a75b8265e</Anchor>
    <Abstract>Returns a new chord with each pitch shifted by a given interval.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fitsInScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>a527e66df910a49872d94ae63347d3281</Anchor>
    <Abstract>Returns true if all of this chord&apos;s pitches are present in the given scale without using accidentals.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHighestPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>ad2a78a36e9a0b58e25e202a43d3cfc39</Anchor>
    <Abstract>Returns the highest pitch in the chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>a89924f6296b12a17c8e0214fe90a8442</Anchor>
    <Abstract>Returns a list of intervals between each consecutive pair of notes in this chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLowestPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>a0989b82e8deccdb3f65b423b15f89c46</Anchor>
    <Abstract>Returns the lowest pitch in the chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>a4b73b684a7ef17789e8c194f66b7f7a0</Anchor>
    <Abstract>Returns the number of unique pitches in this chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumUniquePitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>a6fed6514602cc7f6e1842f7901446988</Anchor>
    <Abstract>Returns the number of unique pitch classes present in this chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>ac53d2ad1a774dd461d3e2e14b3085b7d</Anchor>
    <Abstract>Returns a list of pitch classes present in this chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>ab48d7f4a55bee73bf805e5c873360b25</Anchor>
    <Abstract>Returns a copy of the list of pitches present in this chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Chord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>a6193c9929955b929921482338db3dbbd</Anchor>
    <Abstract>Creates a chord from a list of pitches.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Chord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>ac6a290937c9d9eebf83eb95a2bf0189f</Anchor>
    <Abstract>Creates a chord from a list of pitches.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>a6038fafac4407d38aa5b2e0aa48ab6b0</Anchor>
    <Abstract>Returns true if this chord contains the given pitch or pitch class.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>a6e28349e251f79d48a9eaa906ce7f682</Anchor>
    <Abstract>Returns true if this chord contains the given pitch or pitch class.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Chord</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/classlimes_1_1music_1_1_chord.html</Path>
    <Anchor>a590784a79cb2816ef4909232c85bfc6d</Anchor>
    <Abstract>Returns true if this chord contains the given pitch or pitch class.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::CompoundInterval</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Abstract>A class for representing intervals larger than an octave.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyToPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a30ac5fe923179c1ec41ce9e361fb5e19</Anchor>
    <Abstract>Returns a new pitch object that represents the note this interval&apos;s distance above or below the passe...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCents_JustIntonation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>a253e63f0a0bf49e42d6300ff1474c50c</Anchor>
    <Abstract>Returns an array of possible cents values this interval can represent in just intonation,...</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a3b1ee8dbec7d76f4e10b4ecd85f99c49</Anchor>
    <Abstract>Returns the interval that is the inverse of this one, taking enharmonic spellings into account.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>adb9348e99309c6dbd915bca339b9ffb9</Anchor>
    <Abstract>Returns the kind of this compound interval as an integer, eg, 9, 10, etc.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumOctaves</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>a59f438b91817517a8a61ed00975ace64</Anchor>
    <Abstract>Returns the number of whole octaves contained in this compound interval.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>ae59d79b0f8198abc42c53af2518d8c26</Anchor>
    <Abstract>Returns the number of semitones this compound interval represents.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>a9db58f9b8789345a72438fc1cc9dd409</Anchor>
    <Abstract>Returns the quality of this compound interval.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimpleInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>a5f94655b2b0b769a6e751fd7ce3f94bb</Anchor>
    <Abstract>Returns the simple interval component of this compound interval.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSameSimpleInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>a99aef0aa62a395d8fdb0afc1ddf0c461</Anchor>
    <Abstract>Returns true if the two compound intervals have the same sub-octave component, regardless of how many...</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>a6f73ce47ec6eb2784ee789ba717494fc</Anchor>
    <Abstract>Returns true if the two intervals are not exactly equal.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>aee449fba09a362c5f2890c785cc96f76</Anchor>
    <Abstract>Returns true if this interval is semantically smaller than the other one, taking enharmonic spellings...</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>adbae213d86eb109f2878db3c89882aa8</Anchor>
    <Abstract>Returns true if this interval is semantically smaller than the other one, taking enharmonic spellings...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>a11b6b299563e8c4f6c0f4329b96fba93</Anchor>
    <Abstract>Returns true if the two compound intervals are exactly equal; that is, have the same number of octave...</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>a5db1a85bf3cee9d10d19adbd8253abf2</Anchor>
    <Abstract>Returns true if this interval is semantically larger than the other one, taking enharmonic spellings ...</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a0420fb025e56bf6e8f7226538bacf237</Anchor>
    <Abstract>Returns true if this interval is semantically larger than the other one, taking enharmonic spellings ...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>ad7b033a9c24c4a649ba2832a7179da1f</Anchor>
    <Abstract>Creates a compound interval with the given number of octaves and the given simple interval component.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>a5cff8da726c69f4240b930d48a071a6e</Anchor>
    <Abstract>Creates a compound interval from a given kind and quality, eg, major ninth, etc.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>ad1eb0cf4e1f7453c5ee6b58fc4704b6c</Anchor>
    <Abstract>Constructs a compound interval with the given number of semitones.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>ab107272b0217587d26f122fb883a4302</Anchor>
    <Abstract>Returns true if the two intervals are exactly equal – that is, have the same kind and quality.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a3ef327a8bb9629bfbaa50c15cd896d2f</Anchor>
    <Abstract>Returns true if the two intervals are not exactly equal.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEnharmonicTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a10a6e8dcda4202f5e6e29847b49e4f2d</Anchor>
    <Abstract>Returns true if the two intervals represent the same number of semitones, regardless of their enharmo...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a55ceb7e27f5a7e07c23ac6f038c6633c</Anchor>
    <Abstract>Adds another interval object to this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a54b9a69a036ed7397da211f2fe052ced</Anchor>
    <Abstract>Adds a number of semitones to this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a14d38fcbf5545e5ce0113ce191e751d0</Anchor>
    <Abstract>Adds another interval object to this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a1ff619d6afaa8d5451089cc28da91488</Anchor>
    <Abstract>Adds a number of semitones to this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a88231fcbfc93702b8cffc907b211be40</Anchor>
    <Abstract>Increments this interval by one semitone, preserving the kind by manipulating the quality where possi...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>abd9953f43198afb28447ab2a3776390e</Anchor>
    <Abstract>Subtracts another interval object from this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a5b15b96bedec89314d29b45d086be860</Anchor>
    <Abstract>Subtracts a number of semitones from this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>abb37575262b053097deabdeabd4ac7f4</Anchor>
    <Abstract>Subtracts another interval object from this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a0b411fb753ad69660561a80fa268988e</Anchor>
    <Abstract>Subtracts a number of semitones from this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a14a3adb58f49685423e344c6f1ad195a</Anchor>
    <Abstract>Decrements this interval by one semitone, preserving the kind by manipulating the quality where possi...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJustRatios</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a9547094cd9189a36de90c71a9cb54101</Anchor>
    <Abstract>Returns an array of fraction objects representing possible just intervals for this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCents_EqualTemperament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a8cfd0fded7eccb7171ed081340be7d65</Anchor>
    <Abstract>Returns the number of cents this interval represents in equal temperament.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>ab107272b0217587d26f122fb883a4302</Anchor>
    <Abstract>Returns true if the two intervals are exactly equal – that is, have the same kind and quality.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a3ef327a8bb9629bfbaa50c15cd896d2f</Anchor>
    <Abstract>Returns true if the two intervals are not exactly equal.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEnharmonicTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a10a6e8dcda4202f5e6e29847b49e4f2d</Anchor>
    <Abstract>Returns true if the two intervals represent the same number of semitones, regardless of their enharmo...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a55ceb7e27f5a7e07c23ac6f038c6633c</Anchor>
    <Abstract>Adds another interval object to this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a54b9a69a036ed7397da211f2fe052ced</Anchor>
    <Abstract>Adds a number of semitones to this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a14d38fcbf5545e5ce0113ce191e751d0</Anchor>
    <Abstract>Adds another interval object to this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a1ff619d6afaa8d5451089cc28da91488</Anchor>
    <Abstract>Adds a number of semitones to this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a88231fcbfc93702b8cffc907b211be40</Anchor>
    <Abstract>Increments this interval by one semitone, preserving the kind by manipulating the quality where possi...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>abd9953f43198afb28447ab2a3776390e</Anchor>
    <Abstract>Subtracts another interval object from this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a5b15b96bedec89314d29b45d086be860</Anchor>
    <Abstract>Subtracts a number of semitones from this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>abb37575262b053097deabdeabd4ac7f4</Anchor>
    <Abstract>Subtracts another interval object from this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a0b411fb753ad69660561a80fa268988e</Anchor>
    <Abstract>Subtracts a number of semitones from this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a14a3adb58f49685423e344c6f1ad195a</Anchor>
    <Abstract>Decrements this interval by one semitone, preserving the kind by manipulating the quality where possi...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidQualityForKind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a85bda49f7643404f55dfe12a681700fb</Anchor>
    <Abstract>Returns true if the quality is valid for the given kind of interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>ac3e5f62b42d700875354e941e202530d</Anchor>
    <Abstract>Returns a compound interval object representing the distance between two MIDI notes.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>d5/dce/classlimes_1_1music_1_1_compound_interval.html</Path>
    <Anchor>a6db2cf1dd481c368428a806b06f3089b</Anchor>
    <Abstract>Returns a compound interval object representing the distance between two pitch objects.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromNumSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>ac459a36b3423498436aafdc367c95a4a</Anchor>
    <Abstract>Creates an interval from a number of semitones.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::Interval</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Abstract>A class that represents a musical interval between two pitches.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Interval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>ad1d63870215c0a0668918d7ac7c5f56e</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyToPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a30ac5fe923179c1ec41ce9e361fb5e19</Anchor>
    <Abstract>Returns a new pitch object that represents the note this interval&apos;s distance above or below the passe...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a3b1ee8dbec7d76f4e10b4ecd85f99c49</Anchor>
    <Abstract>Returns the interval that is the inverse of this one, taking enharmonic spellings into account.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>ad0c290571bef6569347eb7bfa69fbe38</Anchor>
    <Abstract>Returns the kind of this interval as an integer.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>addc5f01cccb41ef394b1354e28104009</Anchor>
    <Abstract>Returns the number of semitones that this interval represents.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>ad6b0bf1b30654cda4f29cae5a1ea5869</Anchor>
    <Abstract>Returns the quality of this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>adbae213d86eb109f2878db3c89882aa8</Anchor>
    <Abstract>Returns true if this interval is semantically smaller than the other one, taking enharmonic spellings...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a0420fb025e56bf6e8f7226538bacf237</Anchor>
    <Abstract>Returns true if this interval is semantically larger than the other one, taking enharmonic spellings ...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Interval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a86c25726f8b4cd36c365eb1620a657b4</Anchor>
    <Abstract>Creates an interval representing a perfect unison.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Interval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a46edb7bed35f32eb3333449a3d9d0eba</Anchor>
    <Abstract>Creates an interval with a specified kind and quality.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidQualityForKind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a85bda49f7643404f55dfe12a681700fb</Anchor>
    <Abstract>Returns true if the quality is valid for the given kind of interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromNumSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>ac459a36b3423498436aafdc367c95a4a</Anchor>
    <Abstract>Creates an interval from a number of semitones.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a076542d795a6796d926d8fd1bd870937</Anchor>
    <Abstract>Creates an interval from the distance between two pitch objects.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a7d291b4835e623fc12b28bdc8fec9fb1</Anchor>
    <Abstract>Creates an interval from the distance between two MIDI pitches.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCents_JustIntonation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a6a867e77275bbbb5b338a11ca3773cdf</Anchor>
    <Abstract>Returns an array of possible cents values this interval can represent in just intonation,...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJustRatios</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a9547094cd9189a36de90c71a9cb54101</Anchor>
    <Abstract>Returns an array of fraction objects representing possible just intervals for this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCents_EqualTemperament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Interval</Scope>
    </TokenIdentifier>
    <Path>da/d90/classlimes_1_1music_1_1_interval.html</Path>
    <Anchor>a8cfd0fded7eccb7171ed081340be7d65</Anchor>
    <Abstract>Returns the number of cents this interval represents in equal temperament.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::MicrotonalInterval</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>dc/d2c/classlimes_1_1music_1_1_microtonal_interval.html</Path>
    <Abstract>A class that can represent intervals that are not whole numbers of semitones.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyToPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>dc/d2c/classlimes_1_1music_1_1_microtonal_interval.html</Path>
    <Anchor>a55b952b642f6515dc7d76564f4c70470</Anchor>
    <Abstract>Returns a new pitch object that represents the note this interval&apos;s distance above or below the passe...</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>dc/d2c/classlimes_1_1music_1_1_microtonal_interval.html</Path>
    <Anchor>a539222a98d4693f2c455a43db7ab6cda</Anchor>
    <Abstract>Returns the number of cents this microtonal interval would represent in equal temperament.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>dc/d2c/classlimes_1_1music_1_1_microtonal_interval.html</Path>
    <Anchor>aaab51a317df86523e54c238288768c3c</Anchor>
    <Abstract>Returns the number of semitones this microtonal interval represents.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>dc/d2c/classlimes_1_1music_1_1_microtonal_interval.html</Path>
    <Anchor>a8ad797a111219fd724846e9b96a9a0c4</Anchor>
    <Abstract>Returns true if these two microtonal intervals do not represent the same fractional amount of semiton...</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>dc/d2c/classlimes_1_1music_1_1_microtonal_interval.html</Path>
    <Anchor>a62724734a405a9aaf2ecac9884eefd25</Anchor>
    <Abstract>Returns true if this microtonal interval is smaller than the other one.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>dc/d2c/classlimes_1_1music_1_1_microtonal_interval.html</Path>
    <Anchor>a1ab7db58549a4c208ccf92a1ca5da58e</Anchor>
    <Abstract>Returns true if these two microtonal intervals represent the same fractional amount of semitones.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>dc/d2c/classlimes_1_1music_1_1_microtonal_interval.html</Path>
    <Anchor>a4c89b0c551f62a5571f591098b77a723</Anchor>
    <Abstract>Returns true if this microtonal interval is larger than the other one.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MicrotonalInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>dc/d2c/classlimes_1_1music_1_1_microtonal_interval.html</Path>
    <Anchor>a20813b514342f6d4858ee743bee970d1</Anchor>
    <Abstract>Creates a MicrotonalInterval representing a specified number of semitones.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MicrotonalInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>dc/d2c/classlimes_1_1music_1_1_microtonal_interval.html</Path>
    <Anchor>af97ba23988d3fc5c4a5635c08c0d08de</Anchor>
    <Abstract>Creates a MicrotonalInterval representing the number of semitones specified by the Fraction object.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::NoteDuration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Abstract>This class represents the duration of a kind of written musical note – eighth, quarter,...</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NoteDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>a8080450188b5cc07285f69e9d00b703f</Anchor>
    <Abstract>Creates a NoteDuration of the desired kind.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>a3a4b47b527bf90b6178dd66c4178b54a</Anchor>
    <Abstract>Returns the percentage of a whole note represented by this object.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumDots</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>ab7cd9520e6922034beebf20fd231c236</Anchor>
    <Abstract>Returns the number of dots this note duration has.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRatioToOtherDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>a263927756e7750d83efe2e0d788eeb0e</Anchor>
    <Abstract>Returns the ratio of this duration to the other one.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>a8f938fce514fba639c66fead390c6f26</Anchor>
    <Abstract>Returns true if the notehead representing this duration has a stem.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>noteHeadIsFilled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>a0aa98af67f34228e13d4e518d6442ad9</Anchor>
    <Abstract>Returns true if the notehead representing this duration is filled.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>af0b2204e2e5b4a4f2925b7795b7fe165</Anchor>
    <Abstract>Returns true if the two note durations are not equal.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>aaf1a377796f5a93a5f7e9464d4c55a76</Anchor>
    <Abstract>Increments the duration value to the next shortest notehead kind.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>a1bc6efb819c5bebbe7db6d14608bb3de</Anchor>
    <Abstract>Decrements the duration value to the next longest notehead kind.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>a56eb1315ccfa1cba321278e191a272b0</Anchor>
    <Abstract>Returns true if this duration is shorter than the other one.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>a3a40411ebe08cf793ce7bcb268e638c6</Anchor>
    <Abstract>Returns true if the two note durations are equal.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>d3/d97/structlimes_1_1music_1_1_note_duration.html</Path>
    <Anchor>a29383de875031908359814e5ad2976f1</Anchor>
    <Abstract>Returns true if this duration is longer than the other one.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::NoteLength</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d9a/structlimes_1_1music_1_1_note_length.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::Pitch</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Abstract>This class represents a pitch class in a specific octave.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFreqHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>a60b27bbb827acfe3fd4ed039c98007e5</Anchor>
    <Abstract>Returns this pitch as a frequency in Hz.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMidiPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>ab5860f37bfbf6222529c10df5951f58c</Anchor>
    <Abstract>Returns the MIDI pitch that this pitch object represents.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOctaveNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>ac357295a6117137a476e49c1b80d4d10</Anchor>
    <Abstract>Returns this pitch object&apos;s MIDI octave number.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>a815b92e767b8001aac67b35fd5ef4bcb</Anchor>
    <Abstract>Returns this pitch object&apos;s pitch class.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoundedFreqHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>aa2de861b20fac576599b340a567f9db8</Anchor>
    <Abstract>Returns this pitch as a frequency in Hz, rounded to the nearest integer.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoundedMidiPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>a8c00380570436f6bc2049efcc951a3bc</Anchor>
    <Abstract>Returns this pitch object&apos;s MIDI pitch, rounded to the nearest integer MIDI note.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>a840b91948286f009d1c469c238ae4efb</Anchor>
    <Abstract>Returns the pitch class of this pitch, in the desired MIDI octave.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBlackKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>ab6651291eb40362881b0cbbd23e740a4</Anchor>
    <Abstract>Returns true if this pitch&apos;s nearest integer MIDI note is a black key on a standard keyboard.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMicrotone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>a1440ccbe267ed689f25f0dc5b4be6394</Anchor>
    <Abstract>Returns true if this pitch does not correspond exactly with any of the keys on a piano tuned to equal...</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWhiteKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>a8427582c3afcb94a3021115c1378cc61</Anchor>
    <Abstract>Returns true if this pitch&apos;s nearest integer MIDI note is a white key on a standard keyboard.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>a6c6b90831f4046010578a240b5fff0f3</Anchor>
    <Abstract>Returns the difference between this and another pitch as an Interval object.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>abdedb61144cd3fd112480c0800a521f9</Anchor>
    <Abstract>Returns true if this pitch is lower than the other one.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>aeefb2034a6aa68478fbd3f5d071ff891</Anchor>
    <Abstract>Returns true if this pitch is higher than the other one.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>a79ae7fed8d7049f546f4f7a144c6ac24</Anchor>
    <Abstract>Creates a pitch object from a MIDI pitch, which can be passed to the constructor as any scalar arithm...</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>ac80360e21dd19774c1f05e62eb928d8b</Anchor>
    <Abstract>Creates a pitch object from a pitch class and a MIDI octave number.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>a48cc0509855a82e4da6772841fa86d56</Anchor>
    <Abstract>Returns true if the two pitch objects are exactly equal.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>aa03a590d20c9853b00707bd0b2f4fb9a</Anchor>
    <Abstract>Returns true if the two pitch objects are not exactly equal.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>approximatelyEqual</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::Pitch</Scope>
    </TokenIdentifier>
    <Path>d6/d5f/classlimes_1_1music_1_1_pitch.html</Path>
    <Anchor>afe44b9237b684918358f12d84b4736a1</Anchor>
    <Abstract>Returns true if the two pitch objects round to the same nearest MIDI note.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::PitchClass</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>dc/dd9/structlimes_1_1music_1_1_pitch_class.html</Path>
    <Abstract>A struct that represents a pitch class.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>dc/dd9/structlimes_1_1music_1_1_pitch_class.html</Path>
    <Anchor>acaba71b653dabf36a6e395d5de0ca1fd</Anchor>
    <Abstract>Creates a pitch class from an integer, where 0 is C, 1 is C#/Db, and 11 is B.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAsInt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>dc/dd9/structlimes_1_1music_1_1_pitch_class.html</Path>
    <Anchor>ac17291535f0afb50cc67dd73a9897879</Anchor>
    <Abstract>Returns this pitch class as an integer between 0 and 11, where 0 is C and 11 is B.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBlackKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>dc/dd9/structlimes_1_1music_1_1_pitch_class.html</Path>
    <Anchor>a18bfeff53e1fcd103f4a56901ed6ef89</Anchor>
    <Abstract>Returns true if this pitch class represents a black key on a standard keyboard.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWhiteKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>dc/dd9/structlimes_1_1music_1_1_pitch_class.html</Path>
    <Anchor>a099f9c2341fd3989b0262fbd60e2e12c</Anchor>
    <Abstract>Returns true if this pitch class represents a white key on a standard keyboard.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator int</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>dc/dd9/structlimes_1_1music_1_1_pitch_class.html</Path>
    <Anchor>ae57a1ce0ba65322125d436f5ec4a3e5a</Anchor>
    <Abstract>Returns this pitch class as an integer between 0 and 11, where 0 is C and 11 is B.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>dc/dd9/structlimes_1_1music_1_1_pitch_class.html</Path>
    <Anchor>ac924b156f24c7fe8d08d6c77f5713311</Anchor>
    <Abstract>Returns true if the two pitch classes are not equal.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>dc/dd9/structlimes_1_1music_1_1_pitch_class.html</Path>
    <Anchor>a89df0faa6c8278bb4de66c7f899fa23f</Anchor>
    <Abstract>Returns true if the two pitch classes are equal.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>dc/dd9/structlimes_1_1music_1_1_pitch_class.html</Path>
    <Anchor>aa95e6d540b9bb79c24d360e3184ade74</Anchor>
    <Abstract>Returns an iterable list of all the pitch classes, starting from 0 and ending with 11.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::scales</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::music::scales</Scope>
    </TokenIdentifier>
    <Path>d0/d3a/namespacelimes_1_1music_1_1scales.html</Path>
    <Abstract>This namespace contains utilities for working with musical scales.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::scales::Chromatic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>dc/d53/classlimes_1_1music_1_1scales_1_1_chromatic.html</Path>
    <Abstract>A class representing a chromatic scale.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6581a768d6079a801062cdff97030231</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a9e9628a3e00ef1e51bc4986b41f7d10d</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6ab0f04d5ec5ad484f289305a0cb0d4e</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>af7f86cf9724823c8fafefd4545262ceb</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>dc/d53/classlimes_1_1music_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a3494909f9e664a33c401215653f55d59</Anchor>
    <Abstract>Returns an array of 12 1&apos;s, since every interval in a chromatic scale is a half step.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>ad4c5ea0bb3b2315eedf615cbbeca176c</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>dc/d53/classlimes_1_1music_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a25a0a96cf19041ce9f2d6cc6a7fde2fc</Anchor>
    <Abstract>Returns the pitch class that this chromatic scale starts on.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a154b7fea68f8b05599e69185c2aeb593</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a4a6119cabee1c95f0b023fd7c7653219</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a98332f22ac3b61df8d4e42792fbc3fd0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a2269e36a578545b22f75d046dc290292</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>dc/d53/classlimes_1_1music_1_1scales_1_1_chromatic.html</Path>
    <Anchor>ab72d1515ffa06e111c3ad2a68c71fecf</Anchor>
    <Abstract>Returns 12.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>dc/d53/classlimes_1_1music_1_1scales_1_1_chromatic.html</Path>
    <Anchor>aba077751eeea6a29a2e56e128897eb11</Anchor>
    <Abstract>Returns true if the other chromatic scale does not start on the same pitch class as this one.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a3f61c64ae5f1e1f8cacd49a2c8584a</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>dc/d53/classlimes_1_1music_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a5fe0884d053066235437e1331531eeab</Anchor>
    <Abstract>Returns true if the other chromatic scale starts on the same pitch class as this one.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a7e41dab3eee3479e41c975da6a9b8668</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Chromatic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>dc/d53/classlimes_1_1music_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a569e97e90d226855da56c5be4494e129</Anchor>
    <Abstract>Creates a chromatic scale that starts on the specified MIDI pitch.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Chromatic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>dc/d53/classlimes_1_1music_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a5b99634eee9caf24a3179e9157d56df6</Anchor>
    <Abstract>Creates a chromatic scale that starts on the specified pitch class.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::scales::KeySignature</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Abstract>This class represents any traditional Western key signature (eg, major, natural minor,...</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6581a768d6079a801062cdff97030231</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a9e9628a3e00ef1e51bc4986b41f7d10d</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6ab0f04d5ec5ad484f289305a0cb0d4e</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDominantKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>aef8be5df28cf8248f17dde9c1ccb9d45</Anchor>
    <Abstract>Returns the major key whose root is a perfect fifth above this key&apos;s root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEnharmonicKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a8319cadedf8478c1333b6ca21c0cc35f</Anchor>
    <Abstract>If this key has an enharmonic, this function returns it.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>af7f86cf9724823c8fafefd4545262ceb</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a483a28755da0847decdb148ab9b0f094</Anchor>
    <Abstract>Returns the set of intervals that make up this key signature.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>ad8d04b31bd6bfcd8651b239cb95607d8</Anchor>
    <Abstract>Returns the type of this key signature.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumFlats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>ab63d6fbcc181a0e871b9ce5dec433f38</Anchor>
    <Abstract>If this key is spelled with flats, this returns the number of flats in the key.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSharps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a701d617da946aba4e789658471920a96</Anchor>
    <Abstract>If this key is spelled with sharps, this returns the number of sharps in the key.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParallelKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>aeebe711e818be3ef3869a46554dfd25f</Anchor>
    <Abstract>Returns a key signature object representing the parallel key of this key.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>ad4c5ea0bb3b2315eedf615cbbeca176c</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a3bf4d21680df5d05c83d957b8b7474ba</Anchor>
    <Abstract>Returns the pitch class of this scale&apos;s root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a154b7fea68f8b05599e69185c2aeb593</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a4a6119cabee1c95f0b023fd7c7653219</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a98332f22ac3b61df8d4e42792fbc3fd0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRelativeKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>af8fe7f7c8f7b40f12e6837e1320658a7</Anchor>
    <Abstract>Returns a key signature object representing the relative key of this key.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a2269e36a578545b22f75d046dc290292</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEnharmonicKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>ad2bb6b741902d8c611d11ce2bd675e8b</Anchor>
    <Abstract>Returns true if this key has an enharmonic equivalent that can be spelled using 7 or less flats or sh...</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDominantKeyOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a53c4e6706e5d7325d3220ac7f9a3c09d</Anchor>
    <Abstract>Returns true if this key signature object represents the dominant key of the other one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEnharmonicKeyOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a8b0f8cd06fff847fe345d853b916172f</Anchor>
    <Abstract>Returns true if this key signature object represents the enharmonic key of the other one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlatKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>ace4832c33e05ae077f5116c928f7872a</Anchor>
    <Abstract>Returns true if this key is spelled using flats.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMajorKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>afcbd8d9c09248426267a719ac2f6c722</Anchor>
    <Abstract>Returns true if this key is major.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMinorKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a0218048afc9841aa2142e3c041d10182</Anchor>
    <Abstract>Returns true if this key is minor.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isParallelKeyOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a8e1fee65e0f9d16bcb9e26b29a269d47</Anchor>
    <Abstract>Returns true if this key signature object represents the parallel key of the other one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativeKeyOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>acb74ae7615599119af43a8840e1acafe</Anchor>
    <Abstract>Returns true if this key signature object represents the relative key of the other one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSharpKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a13ac4686cac5b89a65ed25ed3f7a2118</Anchor>
    <Abstract>Returns true if this key is spelled using sharps.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a2f9f5594e6375260766b29eb6332d2b8</Anchor>
    <Abstract>Returns 8.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>acb5df964d526443c89540e48dec8cf53</Anchor>
    <Abstract>Returns true if the other key signature is not semantically equivalent to this one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a3f61c64ae5f1e1f8cacd49a2c8584a</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a2b8f24f3548f43b44ea1850adb897993</Anchor>
    <Abstract>Returns true if the other key signature is semantically equivalent to this one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a7e41dab3eee3479e41c975da6a9b8668</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a35da148e0a8dfc2a7021c492c15ec4de</Anchor>
    <Abstract>Creates a key signature object representing C major.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a4a278cec603fafe1f4d342ce872a4cf8</Anchor>
    <Abstract>Creates a key signature with a given root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>af65416f1e6d3d9663da08e4af1e5b14d</Anchor>
    <Abstract>Creates a key signature with a given root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a6a89fc5520f8ca80622fe704ef505aa1</Anchor>
    <Abstract>Creates a key signature with a given root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>d5/d0e/classlimes_1_1music_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a7832b1908614408b9d6f0fa770d1fc2f</Anchor>
    <Abstract>Creates a key signature with a given root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::scales::Mode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Abstract>This class represents a church mode scale.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6581a768d6079a801062cdff97030231</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a9e9628a3e00ef1e51bc4986b41f7d10d</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6ab0f04d5ec5ad484f289305a0cb0d4e</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>af7f86cf9724823c8fafefd4545262ceb</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Anchor>a1114c97a27add74ac8ef11d970149ca4</Anchor>
    <Abstract>Returns the set of intervals that make up this mode.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Anchor>a9ca47c7a05018f3e3e1c75b1e5415615</Anchor>
    <Abstract>Returns an equivalent key signature for this mode.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumFlats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Anchor>aa30899f8032a40a021642135ccea0dca</Anchor>
    <Abstract>Returns the number of flats that make up the key signature for this mode.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSharps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Anchor>ac36477729131d894c30891bec6bad759</Anchor>
    <Abstract>Returns the number of sharps that make up the key signature for this mode.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>ad4c5ea0bb3b2315eedf615cbbeca176c</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Anchor>a010b957600ab009cfed474849877796f</Anchor>
    <Abstract>Returns the pitch class of the root of this mode.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a154b7fea68f8b05599e69185c2aeb593</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a4a6119cabee1c95f0b023fd7c7653219</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a98332f22ac3b61df8d4e42792fbc3fd0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a2269e36a578545b22f75d046dc290292</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Anchor>a9e5d9aa3afcba7676d1045f1b2a004d2</Anchor>
    <Abstract>Returns 8.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Anchor>aa055ee2c7faaa888670bb10b7313a934</Anchor>
    <Abstract>Returns true if the other modal scale does not have the same type and root as this one.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a3f61c64ae5f1e1f8cacd49a2c8584a</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Anchor>a7146794c0c6219a799bb7efc761a2afa</Anchor>
    <Abstract>Returns true if the other modal scale has the same type and root as this one.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a7e41dab3eee3479e41c975da6a9b8668</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Anchor>ae8b64e950e0f4cf19a724184a8a37c56</Anchor>
    <Abstract>Creates a modal scale object with the given type and root.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/db4/classlimes_1_1music_1_1scales_1_1_mode.html</Path>
    <Anchor>ab74e81602552e6e8eb5eae5584744a98</Anchor>
    <Abstract>Creates a modal scale of the given type, starting on the given MIDI note.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::scales::Octatonic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>d4/dbd/classlimes_1_1music_1_1scales_1_1_octatonic.html</Path>
    <Abstract>Represents an octatonic scale.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6581a768d6079a801062cdff97030231</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a9e9628a3e00ef1e51bc4986b41f7d10d</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6ab0f04d5ec5ad484f289305a0cb0d4e</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>af7f86cf9724823c8fafefd4545262ceb</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>d4/dbd/classlimes_1_1music_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a1053fc2c5484fadc25d1765e7ccb1a06</Anchor>
    <Abstract>Returns a sequence of alternating 2&apos;s and 1&apos;s.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>ad4c5ea0bb3b2315eedf615cbbeca176c</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>d4/dbd/classlimes_1_1music_1_1scales_1_1_octatonic.html</Path>
    <Anchor>ae875f5c5399f171c4b93774d7cecdf81</Anchor>
    <Abstract>Returns the pitch class of the root of this scale.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a154b7fea68f8b05599e69185c2aeb593</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a4a6119cabee1c95f0b023fd7c7653219</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a98332f22ac3b61df8d4e42792fbc3fd0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a2269e36a578545b22f75d046dc290292</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>d4/dbd/classlimes_1_1music_1_1scales_1_1_octatonic.html</Path>
    <Anchor>adee36410693cc5772c921aa439ca9eae</Anchor>
    <Abstract>Returns 8.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>d4/dbd/classlimes_1_1music_1_1scales_1_1_octatonic.html</Path>
    <Anchor>af1162b5517d199f3478de4c5eabba65d</Anchor>
    <Abstract>Returns true if the other octatonic scale is not equal to this one.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a3f61c64ae5f1e1f8cacd49a2c8584a</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>d4/dbd/classlimes_1_1music_1_1scales_1_1_octatonic.html</Path>
    <Anchor>ad556101fa5ab232c0eaebca628060c0e</Anchor>
    <Abstract>Returns true if the other octatonic scale is equal to this one.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a7e41dab3eee3479e41c975da6a9b8668</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startsWithHalfStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>d4/dbd/classlimes_1_1music_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a872bf59beb846c87c53f50873e504677</Anchor>
    <Abstract>Returns true if this octatonic scale starts with a half step.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startsWithWholeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>d4/dbd/classlimes_1_1music_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a1486f49a83df85db4cb3b643a9e3691f</Anchor>
    <Abstract>Returns true if this octatonic scale starts with a whole step.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Octatonic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>d4/dbd/classlimes_1_1music_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a71ce09e425cf9194bd1990db0708151a</Anchor>
    <Abstract>Creates an octatonic scale object.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Octatonic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>d4/dbd/classlimes_1_1music_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a2ad50dd7a3521fd518399b0745c7dfdc</Anchor>
    <Abstract>Creates an octatonic scale object.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::scales::Scale</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Abstract>A base class for any kind of musical scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>aaa1a6da7e2821835372e1c8031c613af</Anchor>
    <Abstract>Default constructor.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a3d12e3871963af893584eb9dd2c2d1d3</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6581a768d6079a801062cdff97030231</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a9e9628a3e00ef1e51bc4986b41f7d10d</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6ab0f04d5ec5ad484f289305a0cb0d4e</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>af7f86cf9724823c8fafefd4545262ceb</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a4f9132c5a15fb9e71504740c210cfe7c</Anchor>
    <Abstract>Subclasses must implement this to return an array of integers representing the intervals in this scal...</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>ad4c5ea0bb3b2315eedf615cbbeca176c</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>af78abe5b23da34ef459bce9f2176f3cf</Anchor>
    <Abstract>Subclasses must implement this to return the pitch class of the root (or tonic) note of the scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a154b7fea68f8b05599e69185c2aeb593</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a4a6119cabee1c95f0b023fd7c7653219</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a98332f22ac3b61df8d4e42792fbc3fd0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a2269e36a578545b22f75d046dc290292</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>afebe48429d185416aefffbf349d34be7</Anchor>
    <Abstract>Subclasses must implement this to return the number of notes per octave in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a3f61c64ae5f1e1f8cacd49a2c8584a</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a7e41dab3eee3479e41c975da6a9b8668</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::music::scales::WholeTone</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d7/d2a/classlimes_1_1music_1_1scales_1_1_whole_tone.html</Path>
    <Abstract>A class that represents a whole tone scale.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6581a768d6079a801062cdff97030231</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a9e9628a3e00ef1e51bc4986b41f7d10d</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6ab0f04d5ec5ad484f289305a0cb0d4e</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>af7f86cf9724823c8fafefd4545262ceb</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d7/d2a/classlimes_1_1music_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a6493ae695158964bbdf394ac309306c2</Anchor>
    <Abstract>Returns an array of 6 2&apos;s, since every interval in this scale is a whole step.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>ad4c5ea0bb3b2315eedf615cbbeca176c</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d7/d2a/classlimes_1_1music_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a1ea4cada33be82285cb52bfae3d74b09</Anchor>
    <Abstract>Returns the pitch class of the root of this scale.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a154b7fea68f8b05599e69185c2aeb593</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a4a6119cabee1c95f0b023fd7c7653219</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a98332f22ac3b61df8d4e42792fbc3fd0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a2269e36a578545b22f75d046dc290292</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d7/d2a/classlimes_1_1music_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a3954b94ad30e6159a02704c033895bf1</Anchor>
    <Abstract>Returns 6.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a3f61c64ae5f1e1f8cacd49a2c8584a</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d7/d2a/classlimes_1_1music_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a48a20572a12882e9113970c360b53ffd</Anchor>
    <Abstract>Returns true if the other whole tone scale does not have the same root as this one.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d1/dd5/structlimes_1_1music_1_1scales_1_1_scale.html</Path>
    <Anchor>a7e41dab3eee3479e41c975da6a9b8668</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d7/d2a/classlimes_1_1music_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a7a31a8a4eaeed476d63d08f5e8c15c75</Anchor>
    <Abstract>Returns true if the other whole tone scale has the same root as this one.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WholeTone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d7/d2a/classlimes_1_1music_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a888035c89daf291026e683498a88dce1</Anchor>
    <Abstract>Creates a whole tone scale object with the given pitch class as its root.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WholeTone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d7/d2a/classlimes_1_1music_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>ab5a1a5442cf03106f58596cda90e90b5</Anchor>
    <Abstract>Creates a whole tone scale starting on the given MIDI note.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::strings</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Abstract>This namespace contains some text manipulation utilities for working with both C++ and C-style string...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropFirstChars</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a0b7a400beb65f2e9670638ed869fb664</Anchor>
    <Abstract>Removes a specified number of characters from the beginning of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropLastChars</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a9d4abaa686539d625750a529069fba92</Anchor>
    <Abstract>Removes a specified number of characters from the end of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromFirstOccurrenceOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>aff4685ec94a225acc1c1350958f3ae53</Anchor>
    <Abstract>Returns a copy of the passed string, beginning at the first occurrence of stringToFind .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLimesASCII</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a066ff4b49cc70facc5fa966afdcc5960</Anchor>
    <Abstract>Returns the Limes library ASCII logo as a string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNewline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a7a2c5fab298d131efac69b8af180519b</Anchor>
    <Abstract>Returns the platform&apos;s preferred newline separator: \r\n on Windows, \n everywhere else.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>join</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a82f5e683c92b49ed4f857e5750ed1a86</Anchor>
    <Abstract>Joins the input strings into one string, placing delimiter between each input string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinWithNewlines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a93eb0c2e2e48b1c9fe880a1ec8458fe9</Anchor>
    <Abstract>Joins the strings together, using the platform&apos;s preferred newline character as the token delimiter.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinWithWhitespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a996c796c5bcb3ab4987a4458abbd50e9</Anchor>
    <Abstract>Joins the strings together, using a space character as the token delimiter.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a07c1aa259a91de614185ddc5ad10629b</Anchor>
    <Abstract>Returns the length of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printLimesASCII</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>ae7f6ba4b01da3819578ac508c0478205</Anchor>
    <Abstract>Prints the Limes library ASCII logo to std::cout.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quoted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>ac4b8ef308a8cd430bee61fba270cf537</Anchor>
    <Abstract>Adds &quot; characters to the beginning and end of the string, if they aren&apos;t already there.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>split</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a93efca31cf8c803589273ba34958023f</Anchor>
    <Abstract>Takes an input string and splits it into a series of smaller strings.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitAtNewlines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a547acd73e4f10c96586c3d9e1cc560ae</Anchor>
    <Abstract>Splits the input string into lines.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitAtWhitespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>ad6e2ffeaa0b89a2b8e59c7daae06a9b3</Anchor>
    <Abstract>Splits the input string using whitespace characters as the delimiter, not including the whitespace in...</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toLower</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a2fca780250a3b862a9043b9f4d8d7651</Anchor>
    <Abstract>Returns a copy of the string, with all its characters converted to lower case.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toUpper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a74e4df0eb4b67a53993c6654aeda5082</Anchor>
    <Abstract>Returns a copy of the string, with all its characters converted to upper case.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a30033399e70246bd3fd0c2567a2905e7</Anchor>
    <Abstract>Removes any whitespace characters from the beginning and end of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unquoted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a51550da36e464bb82c7987544761072e</Anchor>
    <Abstract>Removes &quot; characters from the beginning and end of the string, if they were there.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upToFirstOccurrenceOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>aa13b5ee1f17632b4eb4d19204122fda0</Anchor>
    <Abstract>Returns a copy of the passed string, ending at the first occurrence of stringToFind .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>new_line</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::strings</Scope>
    </TokenIdentifier>
    <Path>d4/dc7/namespacelimes_1_1strings.html</Path>
    <Anchor>a782914839d6c939db85274ef89ca3f82</Anchor>
    <Abstract>A static variable that can be referenced for convenience, instead of needing to call getNewline() .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::strings::TextTable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d9/d88/classlimes_1_1strings_1_1_text_table.html</Path>
    <Abstract>A class that creates a table of strings, laid out in rows and columns, and can pretty-print them with...</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addColumnToCurrentRow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d9/d88/classlimes_1_1strings_1_1_text_table.html</Path>
    <Anchor>a692994afbbbd5c673a48c0b60e7364aa</Anchor>
    <Abstract>Appends text to the current row.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d9/d88/classlimes_1_1strings_1_1_text_table.html</Path>
    <Anchor>a07bbd0ba64ef04b1d0a1d9a77e911702</Anchor>
    <Abstract>Clears and resets the table.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d9/d88/classlimes_1_1strings_1_1_text_table.html</Path>
    <Anchor>a8d519c2947bdc339cc2ba29d19998205</Anchor>
    <Abstract>Finds the total number of columns, by looking for the row with the greatest number of columns.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumRows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d9/d88/classlimes_1_1strings_1_1_text_table.html</Path>
    <Anchor>a184f66b9453d6570ae420267283636e4</Anchor>
    <Abstract>Returns the current number of rows in the table.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d9/d88/classlimes_1_1strings_1_1_text_table.html</Path>
    <Anchor>ab13ad7eb05ff2b54f8bdec9760fb04f5</Anchor>
    <Abstract>Returns a vector with a string for each row.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d9/d88/classlimes_1_1strings_1_1_text_table.html</Path>
    <Anchor>aa2a46ffdfa9160f5da2f318ef3d48ca4</Anchor>
    <Abstract>Starts a new row.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d9/d88/classlimes_1_1strings_1_1_text_table.html</Path>
    <Anchor>a09d82573c2c3f11ff2cc978bb7c62d49</Anchor>
    <Abstract>Appends text to the current row.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startNewRow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d9/d88/classlimes_1_1strings_1_1_text_table.html</Path>
    <Anchor>a583fb7701fdfa21d2ba0ea039f277e04</Anchor>
    <Abstract>Starts a new row; subsequent calls to addTextToCurrentRow() will be added to the next row.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d9/d88/classlimes_1_1strings_1_1_text_table.html</Path>
    <Anchor>ad14d394191ae26e21d8830843af8f9bc</Anchor>
    <Abstract>Returns a string containing all the rows in the table.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Abstract>This namespace contains threading utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callAndBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>gab3a4c8ff9294d2321b63cef1e6757d55</Anchor>
    <Abstract>Calls a function on a background thread, blocks until the function finishes executing,...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callInBackground</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>ga73a4d8b593c31fdc8da1e8efff646227</Anchor>
    <Abstract>Launches a function on a background thread and returns immediately.</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumThreads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>gab39e0c57bedc0130c5004595687f148e</Anchor>
    <Abstract>Tries to detect the number of concurrent threads supported by the current hardware and implementation...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_realtime_copy_safe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Anchor>a7adf757eda75d7a3b25843a8eecdcd07</Anchor>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe copy constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_realtime_move_safe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Anchor>a2d52bd6f78be6bf72b3529ff3425f3a2</Anchor>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe move constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeCopySafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Anchor>a2f9ac9585907b3e2f2552345e14d569f</Anchor>
    <Abstract>@concept RealtimeCopySafe This concept requires that a type is realtime-safe copy constructable and c...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeMoveSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Anchor>a363f94f61a6074eade89e955ffd70ee0</Anchor>
    <Abstract>This concept requires that a type is realtime-safe move constructable and move assignable.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::threads</Scope>
    </TokenIdentifier>
    <Path>d0/de0/namespacelimes_1_1threads.html</Path>
    <Anchor>ad5370c9b98e25633fb74a958857cfe78</Anchor>
    <Abstract>This concept requires that a type is realtime-safe copy constructable, copy assignable,...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::is_realtime_copy_assignable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::is_realtime_copy_assignable</Scope>
    </TokenIdentifier>
    <Path>d5/dd1/structlimes_1_1threads_1_1is__realtime__copy__assignable.html</Path>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe copy assignable...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::is_realtime_copy_constructable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::is_realtime_copy_constructable</Scope>
    </TokenIdentifier>
    <Path>dd/dcc/structlimes_1_1threads_1_1is__realtime__copy__constructable.html</Path>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe copy constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::is_realtime_move_assignable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::is_realtime_move_assignable</Scope>
    </TokenIdentifier>
    <Path>d4/d52/structlimes_1_1threads_1_1is__realtime__move__assignable.html</Path>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe move assignable...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::is_realtime_move_constructable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::is_realtime_move_constructable</Scope>
    </TokenIdentifier>
    <Path>d3/d0b/structlimes_1_1threads_1_1is__realtime__move__constructable.html</Path>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe move constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::ThreadedObjectReader</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d65/structlimes_1_1threads_1_1_threaded_object_reader.html</Path>
    <Abstract>An object that holds a const reference to another object.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedObjectReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d65/structlimes_1_1threads_1_1_threaded_object_reader.html</Path>
    <Anchor>aa41d438bc93c0c97f2448c3de20cd0a7</Anchor>
    <Abstract>ThreadedObjectReader is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedObjectReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d65/structlimes_1_1threads_1_1_threaded_object_reader.html</Path>
    <Anchor>a88c2b9a7f553f260e6e6b5267042c2b8</Anchor>
    <Abstract>ThreadedObjectReader is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d65/structlimes_1_1threads_1_1_threaded_object_reader.html</Path>
    <Anchor>a7bac3cce22a58a386ad14165eae1ad06</Anchor>
    <Abstract>ThreadedObjectReader is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d65/structlimes_1_1threads_1_1_threaded_object_reader.html</Path>
    <Anchor>a7c209308ec31a86788c47e5e158a5f2a</Anchor>
    <Abstract>ThreadedObjectReader is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::ThreadedObjectWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>d7/db2/structlimes_1_1threads_1_1_threaded_object_writer.html</Path>
    <Abstract>An object that holds a non-const reference to another object.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedObjectWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>d7/db2/structlimes_1_1threads_1_1_threaded_object_writer.html</Path>
    <Anchor>acdec8134d3e22154da34b82d7c2c5fd1</Anchor>
    <Abstract>ThreadedObjectWriter is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedObjectWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>d7/db2/structlimes_1_1threads_1_1_threaded_object_writer.html</Path>
    <Anchor>a91aa7da00c0a1c08a7f6adefd0e485c0</Anchor>
    <Abstract>ThreadedObjectWriter is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>d7/db2/structlimes_1_1threads_1_1_threaded_object_writer.html</Path>
    <Anchor>aeb4d5bef751c148a7e04d5d8c47dad0d</Anchor>
    <Abstract>ThreadedObjectWriter is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>d7/db2/structlimes_1_1threads_1_1_threaded_object_writer.html</Path>
    <Anchor>aadbcc9b2d0c76d5fb91b777ec5479c8a</Anchor>
    <Abstract>ThreadedObjectWriter is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::ThreadSafeObject</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Abstract>A wrapper class that makes an object thread safe.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>aa280e8570f354ad786e9b3835725234a</Anchor>
    <Abstract>The type of a reader accessor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>a42218c4deec4b45ebb6b79d75fb3217f</Anchor>
    <Abstract>The type of a writer accessor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadSafeObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>acb0e71147d938ed1ca52b701e09cd1f1</Anchor>
    <Abstract>Constructor.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadSafeObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>ae8199cfb547a349846182f1a8a4bf877</Anchor>
    <Abstract>ThreadSafeObject is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadSafeObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>a29f5dd7c93ff58dfea9e8f28e6465976</Anchor>
    <Abstract>ThreadSafeObject is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLockFree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>acecfad6f52c752d5831cc58836ff610a</Anchor>
    <Abstract>Returns true if acquiring read and write accessors for the owned object is lock-free.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>aa4d9ca7b19dc614acd195a66260468ff</Anchor>
    <Abstract>ThreadSafeObject is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>aef91c0f4caa51601078bbd7400f0445d</Anchor>
    <Abstract>ThreadSafeObject is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>a1ccefb470b4be5051478b74e5584a2c7</Anchor>
    <Abstract>Acquires a read-only copy of the owned object.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>a3f3cc8ced121a90916b0a9f3267ffb7c</Anchor>
    <Abstract>Acquires a writable copy of the owned object.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlwaysLockFree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>d5/d3f/classlimes_1_1threads_1_1_thread_safe_object.html</Path>
    <Anchor>a9d4ff0dc3beef283212b0a02d8edb547</Anchor>
    <Abstract>Returns true if acquiring read and write accessors for the owned object is always lock-free.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::threads::detail</Scope>
    </TokenIdentifier>
    <Path>df/d82/namespacelimes_1_1threads_1_1detail.html</Path>
    <Abstract>This namespace contains implementation details for the realtime safety metaprogramming utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail::is_rt_safe</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::detail::is_rt_safe</Scope>
    </TokenIdentifier>
    <Path>d8/d3f/structlimes_1_1threads_1_1detail_1_1is__rt__safe.html</Path>
    <Abstract>Represents a query for realtime safety of the operation represented by Tag1 and Tag2 on the type T .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail::is_rt_safe&lt; std::map&lt; T, U &gt;, move_tag, Tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::detail::is_rt_safe&lt; std::map&lt; T, U &gt;, move_tag, Tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d7/da7/structlimes_1_1threads_1_1detail_1_1is__rt__safe_3_01std_1_1map_3_01_t_00_01_u_01_4_00_01move__tag_00_01_tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move operations within a std::map .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail::is_rt_safe&lt; std::set&lt; T &gt;, move_tag, Tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::detail::is_rt_safe&lt; std::set&lt; T &gt;, move_tag, Tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d80/structlimes_1_1threads_1_1detail_1_1is__rt__safe_3_01std_1_1set_3_01_t_01_4_00_01move__tag_00_01_tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move operations within a std::set .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail::is_rt_safe&lt; std::unordered_map&lt; T, U &gt;, move_tag, Tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::detail::is_rt_safe&lt; std::unordered_map&lt; T, U &gt;, move_tag, Tag &gt;</Scope>
    </TokenIdentifier>
    <Path>dc/dd6/structlimes_1_1threads_1_1detail_1_1is__rt__safe_3_01std_1_1unordered__map_3_01_t_00_01_u_01_4_00_01move__tag_00_01_tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move operations within a std::unordered_map .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail::is_rt_safe&lt; std::unordered_set&lt; T &gt;, move_tag, Tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::detail::is_rt_safe&lt; std::unordered_set&lt; T &gt;, move_tag, Tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d7/dcc/structlimes_1_1threads_1_1detail_1_1is__rt__safe_3_01std_1_1unordered__set_3_01_t_01_4_00_01move__tag_00_01_tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move operations within a std::unordered_set .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail::is_rt_safe&lt; std::vector&lt; T &gt;, move_tag, Tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::detail::is_rt_safe&lt; std::vector&lt; T &gt;, move_tag, Tag &gt;</Scope>
    </TokenIdentifier>
    <Path>dc/d36/structlimes_1_1threads_1_1detail_1_1is__rt__safe_3_01std_1_1vector_3_01_t_01_4_00_01move__tag_00_01_tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move operations within a std::vector .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail::is_rt_safe&lt; T, copy_tag, assignable_tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::detail::is_rt_safe&lt; T, copy_tag, assignable_tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d8/d9e/structlimes_1_1threads_1_1detail_1_1is__rt__safe_3_01_t_00_01copy__tag_00_01assignable__tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for copy assignment operations.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail::is_rt_safe&lt; T, copy_tag, constructible_tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::detail::is_rt_safe&lt; T, copy_tag, constructible_tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d9/db1/structlimes_1_1threads_1_1detail_1_1is__rt__safe_3_01_t_00_01copy__tag_00_01constructible__tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for copy construction operations.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail::is_rt_safe&lt; T, move_tag, assignable_tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::detail::is_rt_safe&lt; T, move_tag, assignable_tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d9/d5a/structlimes_1_1threads_1_1detail_1_1is__rt__safe_3_01_t_00_01move__tag_00_01assignable__tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move assignment operations.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::threads::detail::is_rt_safe&lt; T, move_tag, constructible_tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::threads::detail::is_rt_safe&lt; T, move_tag, constructible_tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d3/d5d/structlimes_1_1threads_1_1detail_1_1is__rt__safe_3_01_t_00_01move__tag_00_01constructible__tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move construction operations.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::time</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Abstract>This namespace contains utilities for working with time measurements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Point</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>abb837b0f3ad8c65346e615cf45f491f7</Anchor>
    <Abstract>Convenience typedef for a time point.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>a26c99add4885b8f4eda88ab0d4810443</Anchor>
    <Abstract>Convenience typedef for the system clock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertClockTimePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>a7f4bed4655cc16965b8501ef1162191c</Anchor>
    <Abstract>Converts a time point on one clock to a time point on another clock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>aa2f116163c55f3b14c7d033751982a5e</Anchor>
    <Abstract>Converts a std::time_t object to a time point on the given Clock type.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>ade6f250922af7c86e48d1994d3fc8559</Anchor>
    <Abstract>Converts a std::tm object to a time point on the given Clock type.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toSystemTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>a631f434e31c8cde9c22bd9ca57d3cfc4</Anchor>
    <Abstract>Converts a time point on any Clock type to a time point on the SystemClock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>a758c17dbfbcbdaa7606d54f3fe27fe92</Anchor>
    <Abstract>Converts a time point on any Clock type to a std::tm object.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::time</Scope>
    </TokenIdentifier>
    <Path>d1/d6c/namespacelimes_1_1time.html</Path>
    <Anchor>a17d433cb02c74ae882689d9935d35316</Anchor>
    <Abstract>@concept Clock The same as std::is_clock_v, only implemented here because the standard library concep...</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::time::Date</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Abstract>This class represents a date on the Gregorian calendar.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>ae123d744d997385bd33338051cdd8a8e</Anchor>
    <Abstract>Date is default copyable at compile time.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a0e176e9053cb41874acc2dffc101f6b4</Anchor>
    <Abstract>Date is default movable at compile time.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDayOfMonth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a448afbc3ab5de167126739eac5ab2dfc</Anchor>
    <Abstract>Returns the day of the month of this date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDayOfYear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a30ded9a00d74066b554dd422be9e9c8b</Anchor>
    <Abstract>Returns the day of the year this date represents.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMonth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>ae488a4b3bd7c45d2270139bd92227327</Anchor>
    <Abstract>Returns the month of this date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWeekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>abe9e38f1b63b248eb1975bcb3aa03bae</Anchor>
    <Abstract>Returns a Weekday object representing this date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWeekNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a95832ef58f5e08e34286ca39aa36327c</Anchor>
    <Abstract>Returns the week number of the year that this date represents.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getYear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a355dbba763c7e41e45bb8695e31737cb</Anchor>
    <Abstract>Returns the year of this date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFuture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a53afe8dfd6c2ec1f567f026d479d212f</Anchor>
    <Abstract>Returns true if this date is in the future.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInPast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a4c332ec9ccbc4626747fcce8985f8426</Anchor>
    <Abstract>Returns true if this date is in the past.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>af98980c1807a897b25e28850107c17ab</Anchor>
    <Abstract>Date is default copyable at compile time.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>affe257e3219127475073454b27d71bbc</Anchor>
    <Abstract>Date is default movable at compile time.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>ac75786e0557775a9e01f84fc5da803fc</Anchor>
    <Abstract>Returns a string representing this date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a73d9136bc8375ec637b368e0918de79c</Anchor>
    <Abstract>Creates a Date object representing January 1, year 0.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>ac979b6b4169d5e325b9ce3425497e3d9</Anchor>
    <Abstract>Creates a Date object.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a15da5099999f20c4a0cf5a5bc5c364c8</Anchor>
    <Abstract>Creates a Date object.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a087b52d88231b5de74e1a03757356aa7</Anchor>
    <Abstract>Creates a Date object from the given std::tm object.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>afce5ad6139ab85514502bfdfcd13de27</Anchor>
    <Abstract>Creates a Date object from the given std::time_t object.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a7fba13eb1ce0ee77fabe8ee7fce87c43</Anchor>
    <Abstract>Creates a Date object from a std::chrono::time_point of any Clock type.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationDate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>a2b9871d6d8252405af103eab128bd1a5</Anchor>
    <Abstract>Returns a Date object representing the date this code was compiled.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Date</Scope>
    </TokenIdentifier>
    <Path>da/dfd/classlimes_1_1time_1_1_date.html</Path>
    <Anchor>ace1f3ea98c3538c30d1172cf560a743b</Anchor>
    <Abstract>Returns a Date object representing the current date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::time::DateTime</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Abstract>This class represents both a Date and a Time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a0bcb2ed1eb504c29140b4afdeba1855c</Anchor>
    <Abstract>DateTime is default copyable at compile time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a6e5a0945b485000ac73a9e0e55cde0cd</Anchor>
    <Abstract>DateTime is default movable at compile time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStdTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>adff25142711b447b5e26d387d0817e07</Anchor>
    <Abstract>Converts this DateTime to a std::tm object.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimePoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a808e06d3b7541f8ddace416b66d66c47</Anchor>
    <Abstract>Converts this DateTime to a std::chrono::time_point object for the given Clock type.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a6688e0459164de9e92853d45d042da53</Anchor>
    <Abstract>Converts this DateTime to a std::time_t object.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFuture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a19d6d655c41ae62c5433efda413a5620</Anchor>
    <Abstract>Returns true if this date and time is in the future.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInPast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>ae4eb88b69ecc634668ffe59ef17d190e</Anchor>
    <Abstract>Returns true if this date and time is in the past.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a3554f4f0961669875c2a871cf4974a91</Anchor>
    <Abstract>DateTime is default copyable at compile time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a01d27ca7012449b22494ac6bbf8bab9b</Anchor>
    <Abstract>DateTime is default movable at compile time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a312bcc6548108d05c7258c5071ddd12e</Anchor>
    <Abstract>Returns a string representation of this date and time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a7e4bbc9dbb5723797c6b0a120eac3492</Anchor>
    <Abstract>Creates a DateTime object representing midnight on January 1, year 0.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a222a8763cc6d32e8ac501d3120c78151</Anchor>
    <Abstract>Creates a DateTime object from a Date and Time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>af916f02d45163c0cf979375d13db6ec7</Anchor>
    <Abstract>Creates a DateTime object from the given std::tm object.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a0f29ba63c27c728a12b21970e8450d31</Anchor>
    <Abstract>Creates a DateTime object from the given std::time_t object.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>af94fcb959abcd996c1b1976410d0509f</Anchor>
    <Abstract>Creates a DateTime object from a std::chrono::time_point of any Clock type.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>a18cf64fe67e90a696038ecc4b56a0614</Anchor>
    <Abstract>Returns a DateTime object representing the date and time this code was compiled.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::DateTime</Scope>
    </TokenIdentifier>
    <Path>d9/d9b/classlimes_1_1time_1_1_date_time.html</Path>
    <Anchor>ad099f30d6c4b0f637ed3699236cad143</Anchor>
    <Abstract>Returns a DateTime object representing the current date and time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::time::Hour</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Abstract>This class represents an hour of the day.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>a7fe80beaa95e48788c1c3480092b2953</Anchor>
    <Abstract>Hour is default copyable at compile time.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>ac27bee81da133984605d464d34f8e163</Anchor>
    <Abstract>Hour is default movable at compile time.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIn12HourFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>ab0abd1c116bed1edf599b630c4ef5ce1</Anchor>
    <Abstract>Returns this Hour represented as an integer between 1 and 12.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hoursSinceMidnight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>ac3777712dc46d77828afd85c767e88fb</Anchor>
    <Abstract>Returns the number of hours since midnight that this Hour represents.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>ab0bacd2dfad6603fcea944f7713a191d</Anchor>
    <Abstract>Returns true if this hour is between midnight and noon.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMidnight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>ade1ec8f4c95048e3ff50c22c38a1c0e8</Anchor>
    <Abstract>Returns true if this hour is exactly midnight.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNoon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>a3f3591ad8e1efa0d3e64fe2dc42c7821</Anchor>
    <Abstract>Returns true if this hour is exactly noon.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>a9d926ea1e51d89b1223d68872247086c</Anchor>
    <Abstract>Returns true if this hour is between noon and midnight.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>a4408460379b072ea8a4d1e1f0f39d8ae</Anchor>
    <Abstract>Hour is default copyable at compile time.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>ad2e470359f29f1bb025e8d8237476807</Anchor>
    <Abstract>Hour is default movable at compile time.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>aeabfc5d9997fbcd6ee070cdde835a35a</Anchor>
    <Abstract>Creates an Hour object representing midnight.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>a1b49872a2baf1d768f1dc4d8e48ce508</Anchor>
    <Abstract>Creates an Hour object representing the given number of hours since midnight.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>ab8ee2ddcbf5181d0292c919c97027ee8</Anchor>
    <Abstract>Creates an Hour object.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>a8aeecdf08290865e1f97ef0b8978af01</Anchor>
    <Abstract>Creates an Hour object from the given std::tm object.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>ac604f6f2a254d3f2e50ada1611f3c95f</Anchor>
    <Abstract>Creates an Hour object from the given std::time_t object.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationHour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>a08230f0b0fd058d8b704d907d3b8fc7f</Anchor>
    <Abstract>Returns an Hour object representing the hour this code was compiled.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>afc97a87f9036cced637c4502e5c70ba5</Anchor>
    <Abstract>Returns an Hour object representing the current hour.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midnight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>aef5a183c013fb5b47f702929b1a48cda</Anchor>
    <Abstract>Utility function for creating an Hour representing midnight.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>noon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Hour</Scope>
    </TokenIdentifier>
    <Path>df/d1b/classlimes_1_1time_1_1_hour.html</Path>
    <Anchor>a0db6884e0c74230d2b8b349e0d0e14f8</Anchor>
    <Abstract>Utility function for creating an Hour representing noon.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::time::Month</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Abstract>This class represents a month of the Gregorian calendar.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a803505dfd754294b2ffc624b1ec4724a</Anchor>
    <Abstract>Month is default copyable at compile time.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a4fb47f0879e338892c22e760ae8772e5</Anchor>
    <Abstract>Month is default movable at compile time.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMonthName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>ad1dc5d1a39d10f30eaafedcea5067de8</Anchor>
    <Abstract>Returns the Name of this month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMonthNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a1dd0105faee17c242dfb0672917b8e07</Anchor>
    <Abstract>Returns the number of this month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumDays</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a34c5884bc8bee7680f95965b3da0f080</Anchor>
    <Abstract>Returns the number of days in this month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumWeeks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>ae2e13b2f8120eda075cc3d9169a069ba</Anchor>
    <Abstract>Returns the number of full weeks in this month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a52057ffa14931a6b5e0a8eeca2278006</Anchor>
    <Abstract>Returns a string containing the name of this month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a8b34fa3912b971f4f338c4b10f8469ef</Anchor>
    <Abstract>Month is default copyable at compile time.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a57df33a54d70186e3d2832e1decbde15</Anchor>
    <Abstract>Month is default movable at compile time.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a3b0a2d4565835ed28856d7e8ee35778a</Anchor>
    <Abstract>Creates a Month object representing January.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a265718458416d1d68a7266f9ac6c1513</Anchor>
    <Abstract>Creates a Month object representing the given month of the year, with January being 1 and December be...</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a1f6d9fbb55aa7e292a1bdc16bef12288</Anchor>
    <Abstract>Creates a Month object representing the given named month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a21eb912880dde91070d2599e6598730f</Anchor>
    <Abstract>Creates a Month object from the std::tm object.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>ac5d530615554fdb981e3175a95590cfb</Anchor>
    <Abstract>Creates a Month object from the std::time_t object.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationMonth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>a441889fa8108d8974f32f01c8b5a2c23</Anchor>
    <Abstract>Returns a Month object representing the month this code was compiled.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Month</Scope>
    </TokenIdentifier>
    <Path>d4/dc2/classlimes_1_1time_1_1_month.html</Path>
    <Anchor>adc5fb8a78056c1ebbea32e26b83548f4</Anchor>
    <Abstract>Returns a Month object representing the current month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::time::Time</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Abstract>This class represents a time of day, with a specific Hour, minute, and second.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a8b5054cdbc7e5d70c65d4d3b3cd2d097</Anchor>
    <Abstract>Time is default copyable at compile time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>afda3677cbd901a1560c2d6b619844920</Anchor>
    <Abstract>Time is default movable at compile time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>abffb30ad4f5b9ddb07be0327478a8d9f</Anchor>
    <Abstract>Returns the Hour of this time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>acd3ac721a15294a0c4e1bd3c2bab9c62</Anchor>
    <Abstract>Returns the minute of the hour of this time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>ad2d2e52d2ba18a6e0439108c90b08028</Anchor>
    <Abstract>Returns the second of the minute of this time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a0e914dbcdcd05cddf6348e8cdacca14e</Anchor>
    <Abstract>Returns true if this time is between midnight and noon.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFuture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a7710949ed6e9fc153cd3e7df3ffec1e4</Anchor>
    <Abstract>Returns true if this time is after the current time (agnostic of the date).</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInPast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a4e4a52282bc91f2c45637b082957de7d</Anchor>
    <Abstract>Returns true if this time is before the current time (agnostic of the date).</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOnTheHour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>ad12ea62471e83c8c0860b1c7b6a38db5</Anchor>
    <Abstract>Returns true if this time is exactly on the hour.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a49e0594e0ef5c5514ade6a8b6f1dba45</Anchor>
    <Abstract>Returns true if this time is between noon and midnight.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a196faadd25926ce74bcb075b95832e8f</Anchor>
    <Abstract>Time is default copyable at compile time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>acb8ab4b7b8ec76e99bc269a1a46b2c56</Anchor>
    <Abstract>Time is default movable at compile time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>afa50477cff2333586b06bfc363fe09e6</Anchor>
    <Abstract>Returns this Time represented as a string.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a676a7dd43d802e288a3c4b0662e61fe1</Anchor>
    <Abstract>Creates a Time object representing midnight on the hour.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>af1f6e61a5103dcef819b04143f48a788</Anchor>
    <Abstract>Creates a Time object.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a0ffd931346c3f78fb4440661c03ffdc5</Anchor>
    <Abstract>Creates a Time object.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a52c39e86a000e882b4717365ee45a01d</Anchor>
    <Abstract>Creates a Time object from the given std::tm object.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>afd0c25b73fbcc8deac2b110262f9d34a</Anchor>
    <Abstract>Creates a Time object from the given std::time_t object.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a840d7d6bec176c8bd9b366e7f4e08cb2</Anchor>
    <Abstract>Creates a Time object from a std::chrono::time_point of any Clock type.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>abea7725d43013f2f0724e049b540f7db</Anchor>
    <Abstract>Returns a Time object representing the time this code was compiled.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Time</Scope>
    </TokenIdentifier>
    <Path>d4/d96/classlimes_1_1time_1_1_time.html</Path>
    <Anchor>a61f060e760a19d8b19196c28ed59d38e</Anchor>
    <Abstract>Returns a Time object representing the current time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::time::Weekday</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Abstract>This class represents a day of the week in the Gregorian calendar.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OtherWeekdayType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a4fb988d3be2b401f13119b783b8b7f1d</Anchor>
    <Abstract>Convenience typdef for the other template specialization of Weekday.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>aa7bfa6f3f7a94028d0389c67935f7c1a</Anchor>
    <Abstract>Weekday is default copyable at compile time.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>ada6943e795706bac4a656f8bcd6dd3e3</Anchor>
    <Abstract>Weekday is default movable at compile time.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>daysSinceStartOfWeek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a04de63841d4ab96a59edc9c7965832ba</Anchor>
    <Abstract>Returns the number of days since the first day of the week that this Weekday represents.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a3c1fb8ff7a04451dd28314ace600ed00</Anchor>
    <Abstract>Returns a string containing the name of this weekday.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWeekdayName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>ac287f1d756b90bbed33716fd2a3bb216</Anchor>
    <Abstract>Returns the name of the day this object represents.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWeekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>acb47b54271d5e4667de2455498079eaa</Anchor>
    <Abstract>Returns true if this Weekday is not Saturday or Sunday.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWeekend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a71d59e6a58d8f8163825fa4e734384aa</Anchor>
    <Abstract>Returns true if this Weekday represents Saturday or Sunday.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a0b49e6e9d403d79a99acb6f5bc08f424</Anchor>
    <Abstract>Weekday is default copyable at compile time.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a1f907091d42cd3a0691c3ec284e734c8</Anchor>
    <Abstract>Weekday is default movable at compile time.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toOtherWeekdayType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>aca8e5490c7d063ed4c27dc813389ea62</Anchor>
    <Abstract>Converts this Weekday into a Weekday object of the opposite type.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a6f1792782c0f788441fb3679809ede13</Anchor>
    <Abstract>Creates a Weekday object representing the first day of the week (Sunday or Monday,...</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a0e4386e66c4ef5ad29a0ccf704453769</Anchor>
    <Abstract>Creates a Weekday object representing the day that is the specified number of days after the first da...</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>ac1a0ae44c262ba2218c8a1264c3bf6d1</Anchor>
    <Abstract>Creates a Weekday object representing a specific date.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a2812ecf59d2704db252fffd8d2b54d23</Anchor>
    <Abstract>Creates a Weekday object representing a specific date.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a59fb1ea0cde33b5ed820e2b42aca61c4</Anchor>
    <Abstract>Creates a Weekday object representing the day with the given name.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a3b3012c949ba78a51bce525ed85e8ff8</Anchor>
    <Abstract>Creates a Weekday object from the given std::tm object.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a4c617d4bf67f4a529dcbb7fcde4a0208</Anchor>
    <Abstract>Creates a Weekday object from the given std::time_t object.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a9d5069f38f308395f8bdf37657f7699c</Anchor>
    <Abstract>Creates a Weekday object from another Weekday object with the opposite StartWeekOnSunday value.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationWeekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>a293cc3f958d49535c9bc1c1adc82a3d4</Anchor>
    <Abstract>Returns a Weekday object representing the day this code was compiled.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>af37b91b5211d543f0e73d1227ccc2ac6</Anchor>
    <Abstract>Returns a Weekday object representing the current day of the week.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startsWeekOnSunday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classlimes_1_1time_1_1_weekday.html</Path>
    <Anchor>acfae1872b9d7077417f19a7a5d2241ce</Anchor>
    <Abstract>Returns true if this template specialization is starting the week on Sunday.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::time::Year</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Abstract>This class represents a calendar year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a47ff2c59a183415329f617b3c6c89273</Anchor>
    <Abstract>Year is default copyable at compile time.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a8d6dd218254898d5f0daf8c760039062</Anchor>
    <Abstract>Year is default movable at compile time.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumDays</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a48808aaa42271b873c7958a325b97c9d</Anchor>
    <Abstract>Returns the number of days in this year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumWeeks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a58f7f85b9b41f133320a9206f4e0e0ec</Anchor>
    <Abstract>Returns the number of ISO weeks in this year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getYear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a64ca01f9dd3499876afca786b966823b</Anchor>
    <Abstract>Returns the number of this year as an integer.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a610a068874fe87b5fb88314e1b110a87</Anchor>
    <Abstract>Returns true if this year is before the year 0.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFuture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>ac909d218fdf084a9aac0d10b3ef399a9</Anchor>
    <Abstract>Returns true if this year is greater than the current year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInPast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a981e42235f2ef6d68cda77976a917a48</Anchor>
    <Abstract>Returns true if this year is less than the current year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLeap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a7218e2a5aa263e84c402cafc3eb706ae</Anchor>
    <Abstract>Returns true if this year is a leap year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator int</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>aa5555f7b45f7ec1f85914f6ee929624d</Anchor>
    <Abstract>Returns the number of this year as an integer.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a4a9a4f3a079c1bf926c3a040d8220e0f</Anchor>
    <Abstract>Year is default copyable at compile time.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>af4cac730601afc76a781433633b9ab29</Anchor>
    <Abstract>Assigns this year object to a new year number.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>ad897fb467c19144879ad6fea932acf32</Anchor>
    <Abstract>Year is default movable at compile time.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a5cf9bf9d4aba4b15d1b826a5c2fbbb55</Anchor>
    <Abstract>Creates a Year object representing the year 0.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a9fbec7ce665b230f2dcccf9113305d4c</Anchor>
    <Abstract>Creates a Year object representing the given year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a5e9fe401cc89cb75917123bffceb8172</Anchor>
    <Abstract>Creates a Year object from the given std::tm object.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>a2e33e31f84dd7778292d95b414ca1370</Anchor>
    <Abstract>Creates a Year object from the given std::time_t object.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationYear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>aca79546988e317c6e76216cc5be8ec4d</Anchor>
    <Abstract>Returns a Year object representing the year this code was compiled.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>limes::time::Year</Scope>
    </TokenIdentifier>
    <Path>de/d08/classlimes_1_1time_1_1_year.html</Path>
    <Anchor>abf451886903d784e1d37c59dbf6cac2e</Anchor>
    <Abstract>Returns a Year object representing the current year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::typelist</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::typelist</Scope>
    </TokenIdentifier>
    <Path>df/d66/namespacelimes_1_1typelist.html</Path>
    <Abstract>This namespace contains implementation details for the TypeList class.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_null_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::typelist</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gae9cec719238137143e509b59edace27b</Anchor>
    <Abstract>Returns true if T is a NullType .</Abstract>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d4/dea/namespacelimes_1_1vecops.html</Path>
    <Abstract>This namespace contains vector operations functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga9049800737a310e19ffb9b5bf1cafce1</Anchor>
    <Abstract>Simultaneously computes the sin and cosine of every value in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaef2ce37a512c1f570dfa7aea7c9e6c14</Anchor>
    <Abstract>@concept Scalar Any scalar type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga5b711a2ab615fd16769f73e49e07488a</Anchor>
    <Abstract>@concept Integral Any integral type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaa2c8ff649809e33cdfc1255636f2f51e</Anchor>
    <Abstract>Fills the vector with the specified value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga9cc2c9b4c12bd3574570e8dc7ff35da3</Anchor>
    <Abstract>Fills the vector with zeroes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gade886b73a7b5b6d7b7629916960dba27</Anchor>
    <Abstract>Copies from one vector to another.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gae85ce01a5c9fd8d495c763c7f9c977f3</Anchor>
    <Abstract>Swaps the elements of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::FFT</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Abstract>A class that performs an FFT.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Anchor>a9c4cd7b492552eac94a27ef51dc01b4d</Anchor>
    <Abstract>Creates an FFT engine with a specified FFT size.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Anchor>ae5e155dfcf1fe50e302da12205a80f02</Anchor>
    <Abstract>Returns the FFT size of this engine.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Anchor>a2488774c8043ec13c95cdc1e9df712a2</Anchor>
    <Abstract>Performs a forward FFT, outputting cartesian data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Anchor>a963a29cbebacc9793ef2670728f8e679</Anchor>
    <Abstract>Performs a forward FFT, outputting interleaved cartesian data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Anchor>a75c93865ad2535a7d11e3cbd2d0e2c5f</Anchor>
    <Abstract>Performs a forward FFT, outputting polar data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardMagnitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Anchor>aef8b66259dc9251671798713391740f6</Anchor>
    <Abstract>Performs a forward FFT, outputting polar magnitudes.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Anchor>a39bfa9d26d2785fd15adb134488a8483</Anchor>
    <Abstract>Performs an inverse FFT.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Anchor>a6116294ee0b2756fb091bf5ceb8e722d</Anchor>
    <Abstract>Performs an inverse FFT, operating on interleaved input data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inversePolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Anchor>af0b393941ce867c8f2f1c2b05d87f36f</Anchor>
    <Abstract>Performs an inverse FFT, operating on polar input data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseCepstral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>limes::vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dd/d37/classlimes_1_1vecops_1_1_f_f_t.html</Path>
    <Anchor>a86aef233f521ba6a8f5a5ff03494c441</Anchor>
    <Abstract>Performs an inverse FFT, outputting cepstral data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::ScopedFlushToZero</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::vecops::ScopedFlushToZero</Scope>
    </TokenIdentifier>
    <Path>db/d9e/classlimes_1_1vecops_1_1_scoped_flush_to_zero.html</Path>
    <Abstract>An RAII class that enables flush to zero mode when it is constructed, and resets the flush to zero st...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::ScopedNoDenormals</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>limes::vecops::ScopedNoDenormals</Scope>
    </TokenIdentifier>
    <Path>d9/d23/classlimes_1_1vecops_1_1_scoped_no_denormals.html</Path>
    <Abstract>An RAII class that disables denormalized numbers when it is constructed, and resets the denormalized ...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::detail</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::detail</Scope>
    </TokenIdentifier>
    <Path>d1/d27/namespacelimes_1_1vecops_1_1detail.html</Path>
    <Abstract>This namespace contains implementation details for the vecops functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::exp</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d0/d40/namespacelimes_1_1vecops_1_1exp.html</Path>
    <Abstract>This namespace contains exponential functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::fb</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/d17/namespacelimes_1_1vecops_1_1fb.html</Path>
    <Abstract>This namespace contains raw C++ implementations of all the vecops functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::fb::detail</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::fb::detail</Scope>
    </TokenIdentifier>
    <Path>d8/db0/namespacelimes_1_1vecops_1_1fb_1_1detail.html</Path>
    <Abstract>This namespace contains implementation details for the vecops implementations in raw C++.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::fb::window</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d3/da2/namespacelimes_1_1vecops_1_1fb_1_1window.html</Path>
    <Abstract>This namespace contains the implementations of the windowing functions in raw C++.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::fb::window::detail</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>db/d64/namespacelimes_1_1vecops_1_1fb_1_1window_1_1detail.html</Path>
    <Abstract>This namespace contains implementation details for windowing functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::fft</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::fft</Scope>
    </TokenIdentifier>
    <Path>d4/d95/namespacelimes_1_1vecops_1_1fft.html</Path>
    <Abstract>This namespace contains Fourier transform utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::fftw</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>d8/d36/namespacelimes_1_1vecops_1_1fftw.html</Path>
    <Abstract>This namespace contains functions for controlling FFTW wisdom.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::log</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::log</Scope>
    </TokenIdentifier>
    <Path>db/de8/namespacelimes_1_1vecops_1_1log.html</Path>
    <Abstract>This namespace contains logarithmic functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::pommier</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>db/df7/namespacelimes_1_1vecops_1_1pommier.html</Path>
    <Abstract>This namespace contains the Pommier SIMD extension function wrappers, which call the NEON or SSE impl...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes::vecops::window</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>dc/dbd/namespacelimes_1_1vecops_1_1window.html</Path>
    <Abstract>This namespace contains windowing functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga6a128c92c17b5eeded996d16c69dff61</Anchor>
    <Abstract>Generates a window function of the desired type , writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga5c6e376478e32b4670c094f6da111d2d</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>limes::vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>gadd908a9750954d0716c185c4a1c80331</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector, writing the output sample...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pommier</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Abstract>This namespace contains the implementations of the Pommier SIMD extension functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; limes::files::DynamicLibrary &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Abstract>A specialization of std::hash for dynamic libraries.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Anchor>ab83cc3ec626e7d43cd622b1449329bfe</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Anchor>a649464b4a14323ab5700a44fd6565535</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Anchor>a24ee59073ecaa22d8cb6398b4fbce699</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Anchor>a391d9493c83e9e14935282b43fed91fa</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; limes::files::File &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Abstract>A specialization of std::hash for File objects.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Anchor>af0f66b68b780c04500c79d5de997d923</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Anchor>aa28c5a2d4425463056ea5fda3b83d34e</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Anchor>acd9ed7bd24470be91396a4454d66ca52</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Anchor>a82d9998e8c695020a705d315818b1af1</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; limes::files::FilesystemEntry &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Abstract>A specialization of std::hash for filesystem entries.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Anchor>aed2db2a5e962089b9308c7e2a76cb030</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Anchor>a6702339ad8824a5ec8f7190e3c29373b</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Anchor>a10933b5ad11d0a82359e02347a7667a4</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Anchor>abdb54948cf957f34ed075678ec69e084</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; limes::memory::RawData &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Abstract>A specialization of std::hash for RawData objects.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Anchor>abcc6d5dc8e41047b1853877034aeb94c</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Anchor>a9e95f802bdf78844c87b8c7350e84c68</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Anchor>af21f5735d3aebdff6c5191eb1db3a3c9</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Anchor>a8d2f6c741567de57add1a1359e0aec99</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; limes::misc::Version &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Abstract>A specialization of std::hash for Version objects.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Anchor>ab2038bcda14c12b41fbf2bd0d08609b6</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Anchor>a39d44b8423a21c06af973ca348850c45</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Anchor>a96695b62a3790946390bb8da533f95b0</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Anchor>ad27625758751511cf7921e8c272ff022</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
</Tokens>
