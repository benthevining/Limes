---
name: Run build

# yamllint disable rule:line-length

on:
    workflow_call:
        inputs:
            c_compiler:
                required: false
                type: string
                default: ''
            cxx_compiler:
                required: false
                type: string
                default: ''
            cmake_generator:
                required: false
                type: string
                default: 'Ninja Multi-Config'
            os:
                required: true
                type: string
            cmake_preset:
                required: false
                type: string
                default: 'default'
            build_preset:
                required: false
                type: string
                default: 'default'
            id_key:
                required: true
                type: string

defaults:
    run:
        shell: bash

jobs:

    run_build:

        name: ${{ inputs.id_key }} build
        runs-on: ${{ inputs.os }}
        timeout-minutes: 120

        steps:

            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  submodules: recursive
                  fetch-depth: 1

            - name: Set up cache
              uses: actions/cache@v3
              with:
                  path: Cache
                  key: ${{ inputs.id_key }}.${{ runner.os }}.${{ hashFiles('**/') }}
                  restore-keys: ${{ inputs.id_key }}.${{ runner.os }}.

            - name: Install Protobuf
              uses: arduino/setup-protoc@v1

            - name: Install dependencies
              run: python3 -m pip install -r requirements.txt

            - name: Cache protobuf library
              id: cache_protobuf
              uses: actions/cache@v3
              with:
                path: protobuf
                key: ${{ inputs.id_key }}.${{ runner.os }}.protobuf

            - name: Build protobuf library
              if: steps.cache_protobuf.outputs.cache-hit != 'true'
              run: |
                git clone https://github.com/protocolbuffers/protobuf.git
                cd protobuf
                git submodule update --init --recursive
                ./autogen.sh
                ./autogen.sh  # run autogen twice, due to a bug in the script
                ./configure
                make
                make check

            - name: Install protobuf library
              run: |
                cd protobuf
                sudo make install
                sudo ldconfig

            - name: Run CMake
              if: ${{ inputs.c_compiler != '' && inputs.cxx_compiler != '' }}
              run: |
                  CC=${{ inputs.c_compiler }} CXX=${{ inputs.cxx_compiler }} cmake --preset ${{ inputs.cmake_preset }} -G '${{ inputs.cmake_generator }}' -D CMAKE_C_COMPILER=${{ inputs.c_compiler }} -D CMAKE_CXX_COMPILER=${{ inputs.cxx_compiler }}

            - name: Run CMake
              if: ${{ inputs.c_compiler == '' || inputs.cxx_compiler == '' }}
              run: cmake --preset ${{ inputs.cmake_preset }} -G '${{ inputs.cmake_generator }}'

            - name: Run debug build
              run: cmake --build --preset ${{ inputs.build_preset }} --config Debug

            - name: Run release build
              run: cmake --build --preset ${{ inputs.build_preset }} --config Release

            - name: Install debug
              run: cmake --install Builds --config Debug --prefix '${{ github.workspace }}/deploy/debug'

            - name: Install release
              run: cmake --install Builds --config Release --prefix '${{ github.workspace }}/deploy/release'

            - name: Upload debug artefacts
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ inputs.id_key }}.debug
                  path: '${{ github.workspace }}/deploy/debug'
                  if-no-files-found: error

            - name: Upload release artefacts
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ inputs.id_key }}.release
                  path: '${{ github.workspace }}/deploy/release'
                  if-no-files-found: error
