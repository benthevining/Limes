<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>call_both</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a6c6814ab08f80fede21d3bdddd2ce6e8</Anchor>
    <Abstract>Calls a function with corresponding pairs of elements from two containers.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>de/d29/group__alg.html</Path>
    <Anchor>ga9280a6b61ef312c80d85e6e0b91e8a00</Anchor>
    <Abstract>@concept Container This concept requires that a type has begin() and end() functions that return iter...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>ad811e97da051a2a578697084d10f0681</Anchor>
    <Abstract>Returns true if the container contains the specified value.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a2d73d5e0ebb7ce07de5de55cbe8fb94d</Anchor>
    <Abstract>Returns true if the specified predicate is met by at least one object in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a65c3a333b7540ccefdbbd29adedf12f2</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a8b5e74fd10c9d3e41c0dd79d0a1b7711</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or_default</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a787a5069c66574efe3747a4c74046325</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFromTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a757811af9ff407f689d49264b212c877</Anchor>
    <Abstract>The same as transform() , except the output container is default constructed before being populated.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElementType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a7dccb7818bdc5ba28aaff325dd4e715c</Anchor>
    <Abstract>Handy typedef for deducing the type of the objects in a Container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enumerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a977caee9e6a4f374dbbb4589c8cfc39e</Anchor>
    <Abstract>This function allows structured bindings of iterators, similar to Python&apos;s enumerate() method.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a8578202135800da03ad18668933fcb7a</Anchor>
    <Abstract>Fills the container with the specified value.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>aef6e921fb66d033398c60d9aa387026a</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a3f0432bba758bc38ef2b2051c656a544</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IteratorType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>ab08589f26a257d13ba1e706690752d0c</Anchor>
    <Abstract>Typedef for the type returned by calling begin() or end() on a Container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a3955575ad4fce0e172c08bc3ee849d3b</Anchor>
    <Abstract>Returns the maximum value in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>aaadb9d743ac062dccd1fa8db03f8b6e0</Anchor>
    <Abstract>Returns the maximum value in the container and its index in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>adffc06b89dc20f499a540036f6c59141</Anchor>
    <Abstract>Returns the minimum value in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>aace5a83c7d44d74ccd79d5ed5a015ac6</Anchor>
    <Abstract>Returns the minimum value in the container and its index in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a347b3ccd19983a354d0992a4359c01c2</Anchor>
    <Abstract>Counts the number of objects in the container that meet the specified predicate.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>aab87399b7732eecfc20de2f1c3b6feb7</Anchor>
    <Abstract>Reverses the objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shuffle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a50b7caffcb11cf23485bc228bfa27e4e</Anchor>
    <Abstract>Randomizes the order of the elements in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>aea20a3c576495f7b76380ed04a28b098</Anchor>
    <Abstract>Counts the number of objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a5926fcc8887c86f6bdb0c4671c915333</Anchor>
    <Abstract>Sorts the objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a83890f0559cb4afdbd69151ddb5851fc</Anchor>
    <Abstract>Sorts the container using a custom comparator.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>ad17e51dc6ca77a27c4359ce50edfb330</Anchor>
    <Abstract>Populates output by calling func with each element of input in sequence.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga898974242418e2b20981a737c5e82410</Anchor>
    <Abstract>Allocates the desired number of objects with the desired alignment.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga5a001535fbebdaa7499f0d95e2a5cec7</Anchor>
    <Abstract>Deallocates a pointer that was previously allocated with allocate_aligned() .</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Oscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::osc</Scope>
    </TokenIdentifier>
    <Path>d8/d1b/namespacedsp_1_1osc.html</Path>
    <Anchor>ad8383dc63bae31f5edc1554ef2a26908</Anchor>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TODO_BEFORE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaba800051fa8705e8ec3606d38586f719</Anchor>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_day</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaf8b5d86f6591fa7fe1eca0eda805ed7f</Anchor>
    <Abstract>Returns the day of the month on which this code was compiled, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaefbe78efb40677cccb64b22dd6a7f80f</Anchor>
    <Abstract>Returns the hour of compilation, as an integer, in 24-hour time.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_minute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga091625fe6e395acd0fee1486fd9c1263</Anchor>
    <Abstract>Returns the minute of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga2c9831993f5c1697fa57277ea71e601c</Anchor>
    <Abstract>Returns the month of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_second</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gafa1aefe1ad592cec39fa26b653415017</Anchor>
    <Abstract>Returns the second of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gac7081843bdb34b01a752270b940c1d7f</Anchor>
    <Abstract>Returns the year of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gac7081843bdb34b01a752270b940c1d7f</Anchor>
    <Abstract>Returns the year of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga2c9831993f5c1697fa57277ea71e601c</Anchor>
    <Abstract>Returns the month of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_day</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaf8b5d86f6591fa7fe1eca0eda805ed7f</Anchor>
    <Abstract>Returns the day of the month on which this code was compiled, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaefbe78efb40677cccb64b22dd6a7f80f</Anchor>
    <Abstract>Returns the hour of compilation, as an integer, in 24-hour time.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_minute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga091625fe6e395acd0fee1486fd9c1263</Anchor>
    <Abstract>Returns the minute of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_second</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gafa1aefe1ad592cec39fa26b653415017</Anchor>
    <Abstract>Returns the second of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a0596e0ff48ecb615b3baf469e953c2fb</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ae633d08d56b7f37014a8429fd951d6cb</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a06ca06f131cf8d7d022a70c631436d78</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a23bdffac119b6f557253ff55ee31ba0d</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256_F1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a32b19ed72a3d908b303ae734d2f694d3</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256_F2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ad0e56812713a653e8e48f705ab8a83ce</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256_F3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a9de1cd09733b73bf2fe95dc1de491bb0</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256_F4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a6be4f1e7e3d1b09029e2813627a4c0d7</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512_F1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ac3a19d933af69aca69536b939395d0bf</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512_F2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ac45cfec8e6bc211cb89bb65746b176fd</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512_F3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a9e3d4844584dc05c8ed549342d5fe4a6</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512_F4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ad5fa20a6ba712f8a8fe15abb3a2d5c4b</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unpack32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>aec89267b2687a40779c65bfc0805c984</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unpack64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a94e1e34836c9520e1042c8839cbd3086</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256_k</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a3d7cecc329ad4328154b5341f2824ae9</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512_k</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ac393c58bc5fe80f301064c8fdc409aac</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_FORCE_INLINE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga16865b999504e0621f83caecfec93bcc</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NEVER_INLINE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga7bb6ffa325bf2b2ba5d63d565a98aaff</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_PACK</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga4afff37dbba8d8055ea44c9631a50140</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_PURE_FUNCTION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gabed8f597c61ed37a221c9ae8dccf9e22</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_RESTRICT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga31004f8beb1bebe164df6461882dbe88</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_COMPILER_MESSAGE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga5577fed1a9e9f17571205093a090b490</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_COMPILER_WARNING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga2db625c65f80ef77802a5f764aebff50</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DISABLE_ALL_COMPILER_WARNINGS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac9aaa41f09c0bdac5928138eeb9adb24</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_REENABLE_ALL_COMPILER_WARNINGS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gad2a89476f519fd1fb29df89e88cb6a93</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllCountries</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga262099b4b3f19c978f7b41e80a6e6b80</Anchor>
    <Abstract>Returns a vector of all known Country objects.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>gaab2be6b035e835729dd69bf96b645ce6</Anchor>
    <Abstract>Returns the Country object representing the given ISO country code.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga6d6478b3f2a31fa30dd3a97860411b95</Anchor>
    <Abstract>Returns the Country object representing the country with the given name.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>breakInDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gab171a8c95463292b15f080e4af21986d</Anchor>
    <Abstract>Attempts to break into the debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunningUnderDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga3d513b70fcf4f0d72481f244cea4f31a</Anchor>
    <Abstract>Returns true if the calling process is running under a debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExecutablePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga60f08b0e2e66b004beac62e8edb85765</Anchor>
    <Abstract>Returns the path of the current executable, as a string.</Abstract>
    <DeclaredIn>exec_location.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModulePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gaff709ef716d9a2d98819bd95a56b6ade</Anchor>
    <Abstract>Returns the path of the current module, as a string.</Abstract>
    <DeclaredIn>exec_location.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBlackmanSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga69fbe5e47a5fe48ef69348f3e254e30e</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHammSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga0cdf0423f096eb62dedfb262fc261ed6</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHanningSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga753a3c1ed50535df993aa994a3aa983f</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>magphase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::detail</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaea1c6b1db57e3b52fa898c094c459b52</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ncos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga8ab157fe4613e75312485819c047ab56</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga6a9e1da0d8c77f44cb0cb53b01fed2ae</Anchor>
    <Abstract>Simultaneously computes the sin and cosine of every value in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga70b8f5e93e6b1eb79293b92de389c937</Anchor>
    <Abstract>Fills the vector with zeroes.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga1f81216b2b4764456c3153e839add0e9</Anchor>
    <Abstract>Copies from one vector to another.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga177ea20de535bfda12beca6b44b48fe1</Anchor>
    <Abstract>Fills the vector with the specified value.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaa206203c13d3601762cb667758b3fafc</Anchor>
    <Abstract>Swaps the elements of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>gabf5bc3245e278b1fdb5f34e0f8f3d7ff</Anchor>
    <Abstract>Replaces each value in the vector with its reciprocal.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>gaf76afdef7ef541840f56156737ccfb2e</Anchor>
    <Abstract>Writes the reciprocal of each value in the input vector to an output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gab426aa23beb06f892e1fed4bac71f935</Anchor>
    <Abstract>Adds a constant to every element of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gaf6b0f305d3d109d77b58d0d94ef12d0f</Anchor>
    <Abstract>Element-wise addition of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gac3372bc013c5c835c9807223f962146a</Anchor>
    <Abstract>Element-wise addition of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga10a9cceea88bd06667f1392079c75a41</Anchor>
    <Abstract>Adds a constant to every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga73174bdcee6e1e16a4e5ade63086114e</Anchor>
    <Abstract>Subtracts a constant from every element of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gaaa07e98dc218a994654b16f2bbbb87cc</Anchor>
    <Abstract>Element-wise subtraction of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga8b9aa8478ac6c2039dec4313cda7bada</Anchor>
    <Abstract>Element-wise subtraction of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga615a4ea492b1dd785bfd81e3be6ee25c</Anchor>
    <Abstract>Subtracts a constant from every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gaef0e37304279bd19832ee5ef4c94ecef</Anchor>
    <Abstract>Subtracts every element of a vector from a constant.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga366d18089d0a020acfd0da7ce3ee70d9</Anchor>
    <Abstract>Subtracts every element of a vector from a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gaa93346daef9468088b0f5ed76c726041</Anchor>
    <Abstract>Computes the dot product of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga002f3972dd3bc6fca3b4402b7e2291c8</Anchor>
    <Abstract>Multiplies every element of a vector by a constant.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gafd7095e06dfa938934bd87df2405acea</Anchor>
    <Abstract>Element-wise multiplication of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga84a322147913b917944563f9d88b609a</Anchor>
    <Abstract>Element-wise multiplication of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga5c08e3a71baa8f8ffe42e65cbe3854b4</Anchor>
    <Abstract>Multiplies every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga1b89baa753deab36f0ea8d9a6521279e</Anchor>
    <Abstract>Divides every element of a vector by a constant.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gadd29ffc235dab62c3978d12a79763cc0</Anchor>
    <Abstract>Element-wise division of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga06d6bb9ab0a8150273e5a22a89715878</Anchor>
    <Abstract>Element-wise division of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gacc2e3af27bf26d290570ec315d401707</Anchor>
    <Abstract>Divides every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gaf530330ec64ec1ee5b761a8427a31de4</Anchor>
    <Abstract>Divides a constant by every element of a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gac7101807d4c267d15a49ad1dc110a3f7</Anchor>
    <Abstract>Divides a constant by every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaefd29a6cbea9c17c8f140fcafc0d3ffb</Anchor>
    <Abstract>Replaces every element in the vector with its cube root.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gafdb9426b4c6d801bc893da4587f0b319</Anchor>
    <Abstract>Writes the cube root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga0ed7046b8993dd9e35d179e756862e3e</Anchor>
    <Abstract>Replaces every element in the vector with its inverse square root.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga06733755d44e3b54f4e352075b2d8e99</Anchor>
    <Abstract>Writes the inverse square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quake3_fast_inv_sqrt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaac42db7f643b436bcf40b47f87121d0f</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gab7b9bd774cf7bc7d5412a6fb7b48f00d</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gae87a63f829aff9b9b0660ddfd49a4468</Anchor>
    <Abstract>Squares every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga3f2bd758e0c77f043052585117d8e998</Anchor>
    <Abstract>Replaces every element in the vector with its square root.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga4d4e9bad9d6819dc75cdd452d3c557ee</Anchor>
    <Abstract>Writes the square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga1440c6e68d1108a65cc505365dc102ec</Anchor>
    <Abstract>Deinterleaves single channel data into multiple output vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gab47d10f92ce1c4d7fed2c8c2f1100c5f</Anchor>
    <Abstract>Interleaves multichannel data into a single output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga4d7b31bfdfb1f0562a4c225b4dc2473d</Anchor>
    <Abstract>Reverses a vector in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga967f13e210604f26b9f3f82f30c2bcea</Anchor>
    <Abstract>Writes a reversed version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga85e960f77f2038580b86978e22efc22f</Anchor>
    <Abstract>Sorts a vector in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gaba1ec523bad1976e75425116acce0b41</Anchor>
    <Abstract>Writes a sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga1fe779f7a9d73092476b44a898458b3e</Anchor>
    <Abstract>Sorts a vector in reverse order in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gafaebbdff7339850f3c21f3d2c5d2c402</Anchor>
    <Abstract>Writes a reverse sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaf26fedfd395fde4f4660ec71f8de4e4b</Anchor>
    <Abstract>Replaces each element of the vector with its absolute value.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>absAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1788065bd49a8332e4e7cddbe43efb71</Anchor>
    <Abstract>Writes the absolute value of each element of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaef1b9622a91bdfd9ad732a5cf3ccd09e</Anchor>
    <Abstract>Clips every element of a vector in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga725830394b5fdae7c9b2619fb5f6f831</Anchor>
    <Abstract>Writes a clipped version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga908e2b3c6bed10cd0f9ae3d3258aaaf7</Anchor>
    <Abstract>Returns the maximum element in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga6fd4f9074beb93e3ba5f43ec0e53daa9</Anchor>
    <Abstract>Finds the maximum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga8b0fa2e7182e68b32c6c52fb1ffa2e0a</Anchor>
    <Abstract>Returns the maximum absolute value in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga45a110950118106c6cfa463072381189</Anchor>
    <Abstract>Finds the maximum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaa2e5f6b6ba0dae131ca0ed331bea8cf5</Anchor>
    <Abstract>Returns the mean of the values in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga692bf45b3f655d802d4a818a85354b16</Anchor>
    <Abstract>Returns the minimum element in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaac443a21e11c258bd0c2117ef3bb4517</Anchor>
    <Abstract>Finds the minimum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gab15272637001f2fd69c290ea0e181410</Anchor>
    <Abstract>Returns the minimum absolute value in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1cb87029f51eecbaf1c6354925fd9510</Anchor>
    <Abstract>Finds the minimum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaae354cae92344334ea196b5c806922a0</Anchor>
    <Abstract>Finds both the minimum and maximum values in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga16ff452b40eaa3cbc8bbe56471436232</Anchor>
    <Abstract>Finds the minimum and maximum values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga6036620d9aa18f2ebea69745089693cb</Anchor>
    <Abstract>Finds both the minimum and maximum absolute values in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga0c47411309e066a30abc8277160093ad</Anchor>
    <Abstract>Flips the sign of every element of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negateAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga43493cc760edb7487ef47c3c4ba71e66</Anchor>
    <Abstract>Writes the negation of every element of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>standard_deviation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gab47c2a87d76a88141c9da54e14e7b23f</Anchor>
    <Abstract>Returns the standard deviation of the values in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gadde26b71ce44942c5659dc53a34a32eb</Anchor>
    <Abstract>Returns the sum of all the values in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga63246e8ab611e62651c00307dcc5a435</Anchor>
    <Abstract>Replaces every value in the vector with its arcsine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga367ddd2723585eb00cd9dc02e2e89bf8</Anchor>
    <Abstract>Writes the arcsine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gaa4b6dd046241ae61010b3ded17f60017</Anchor>
    <Abstract>Replaces every value in the vector with its sine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga756f4bbaf104041299cd2714ebaf1a65</Anchor>
    <Abstract>Writes the sine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gaaef9270f867375067c4cdeeae99fa3cf</Anchor>
    <Abstract>Replaces every value in the vector with its arccosine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga4351991f6ae7c84bf7036eee67d8e78d</Anchor>
    <Abstract>Writes the arccosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gae3d397db9d7193b02da3166874d241bb</Anchor>
    <Abstract>Replaces every value in the vector with its cosine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga6446bb417be8a7d5121295cba269a2c1</Anchor>
    <Abstract>Writes the cosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga443d7d20aaae45760eef12f357aa62e5</Anchor>
    <Abstract>Replaces every value in the vector with its arctangent.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga96fc600afccb309f7399c0395f2ede97</Anchor>
    <Abstract>Writes the arctangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gac1d5049feb37c40da1813f0d71a20d53</Anchor>
    <Abstract>Replaces every value in the vector with its tangent.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga8d634b42674022a5aa28598ff8a9a9ae</Anchor>
    <Abstract>Writes the tangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga5272dee95882c956bcd68812f6783fe1</Anchor>
    <Abstract>Replaces each value in the vector with its base 10 logarithm.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga16ce0b291bb95f92a3e0bd451c919f06</Anchor>
    <Abstract>Writes the base 10 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga710ea2bcb865c54064abc78ef99162a5</Anchor>
    <Abstract>Replaces each value in the vector with its base 2 logarithm.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gaa4ea17fab0d4db24b250d6075f9bed56</Anchor>
    <Abstract>Writes the base 2 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gaa2e88e7d43811820fd28fa1f176f2b89</Anchor>
    <Abstract>Replaces each value in the vector with its natural logarithm.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>natAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gaf3d360a09b7480480488228bbe59bfe0</Anchor>
    <Abstract>Writes the natural logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga9b1fbf06980673d8d242e81ca3b35b9a</Anchor>
    <Abstract>Replaces each value in the vector with eˆvalue .</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga5b90c458ee0a58487d8802a0ea0792da</Anchor>
    <Abstract>For each value in the input vector, writes eˆvalue to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga01aeb14b9e5f4d4bb52ae21ecf4606a4</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>powAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga2852abe9d8baaa4d4217528d0b4615e2</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector,...</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gacf25d9521d2087928a3e964ca8cf4fd0</Anchor>
    <Abstract>Replaces each value in the vector with 2ˆvalue .</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twoAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga9a3a2aaaa9cbe2ce6a8e5a52e7b076b4</Anchor>
    <Abstract>For each value in the input vector, writes 2ˆvalue to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga4f6911014c23456f0a258411e794ca46</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRampAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga93a2671df52ebd0c4929b0423bf1969f</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countZeroCrossings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga12198e7a19451411e17cfb4b5c018d54</Anchor>
    <Abstract>Counts the number of zero crossings present in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga40d2819958ed451f2e05653ba3fb1a83</Anchor>
    <Abstract>Generates a ramp of samples, starting from startValue and incrementing by a consistent value until en...</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga47d23d1b1332c20df9d953b4f7bea66d</Anchor>
    <Abstract>Mixes together multiple channels of audio into one output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gabb6052fd16f6a2cd510915f6f6b84c24</Anchor>
    <Abstract>Calculates the RMS value of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga7ec3faaef22f955d5510758d6a411e21</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackmanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga5f75c64d4ba19bad84aa75a4387f7f96</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga91812daaf7644a343b31a8dd578519dd</Anchor>
    <Abstract>Generates a Blackman window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gab16d13175c3454d0230e5367edcdd985</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHammAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga0e8a2bc8f94e35682725b5ee0464b8fe</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector, writing the output samples to another v...</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gaa7fe4a5869b6f4a0d8a07a58056e4ca4</Anchor>
    <Abstract>Generates a Hamm (Hamming) window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga44e4bd2d9551f8f165689a0d201856dc</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanningAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga5145d014c50cb9137965a4e1001675af</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga475f60cb9dcd055eff11500f02848591</Anchor>
    <Abstract>Generates a Hanning window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianInterleavedToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga7e38a2dc4a126c23a36f79549c3d99bd</Anchor>
    <Abstract>Converts interleaved cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gaf94d3877ee90355657c2b046c350f8a0</Anchor>
    <Abstract>Converts cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gaccce573738b864eb3fe84e9f2cd21c05</Anchor>
    <Abstract>Converts cartesian data to polar data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catesianInterleavedToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga5dc05936ca54471be64902374c27cf26</Anchor>
    <Abstract>Converts interleaved cartesian data to polar data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gad18df8e02418d073f94d1e2aed8204c1</Anchor>
    <Abstract>Converts polar data to cartesian data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga92fdd723f07976adab8b474ded89c183</Anchor>
    <Abstract>Converts polar data to interleaved cartesian data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga177ea20de535bfda12beca6b44b48fe1</Anchor>
    <Abstract>Fills the vector with the specified value.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga70b8f5e93e6b1eb79293b92de389c937</Anchor>
    <Abstract>Fills the vector with zeroes.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga1f81216b2b4764456c3153e839add0e9</Anchor>
    <Abstract>Copies from one vector to another.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaa206203c13d3601762cb667758b3fafc</Anchor>
    <Abstract>Swaps the elements of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>gabf5bc3245e278b1fdb5f34e0f8f3d7ff</Anchor>
    <Abstract>Replaces each value in the vector with its reciprocal.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>gaf76afdef7ef541840f56156737ccfb2e</Anchor>
    <Abstract>Writes the reciprocal of each value in the input vector to an output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gab426aa23beb06f892e1fed4bac71f935</Anchor>
    <Abstract>Adds a constant to every element of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gaf6b0f305d3d109d77b58d0d94ef12d0f</Anchor>
    <Abstract>Element-wise addition of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga10a9cceea88bd06667f1392079c75a41</Anchor>
    <Abstract>Adds a constant to every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gac3372bc013c5c835c9807223f962146a</Anchor>
    <Abstract>Element-wise addition of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga73174bdcee6e1e16a4e5ade63086114e</Anchor>
    <Abstract>Subtracts a constant from every element of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gaaa07e98dc218a994654b16f2bbbb87cc</Anchor>
    <Abstract>Element-wise subtraction of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga615a4ea492b1dd785bfd81e3be6ee25c</Anchor>
    <Abstract>Subtracts a constant from every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga8b9aa8478ac6c2039dec4313cda7bada</Anchor>
    <Abstract>Element-wise subtraction of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gaef0e37304279bd19832ee5ef4c94ecef</Anchor>
    <Abstract>Subtracts every element of a vector from a constant.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga366d18089d0a020acfd0da7ce3ee70d9</Anchor>
    <Abstract>Subtracts every element of a vector from a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga002f3972dd3bc6fca3b4402b7e2291c8</Anchor>
    <Abstract>Multiplies every element of a vector by a constant.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gafd7095e06dfa938934bd87df2405acea</Anchor>
    <Abstract>Element-wise multiplication of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga5c08e3a71baa8f8ffe42e65cbe3854b4</Anchor>
    <Abstract>Multiplies every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga84a322147913b917944563f9d88b609a</Anchor>
    <Abstract>Element-wise multiplication of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gaa93346daef9468088b0f5ed76c726041</Anchor>
    <Abstract>Computes the dot product of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga1b89baa753deab36f0ea8d9a6521279e</Anchor>
    <Abstract>Divides every element of a vector by a constant.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gadd29ffc235dab62c3978d12a79763cc0</Anchor>
    <Abstract>Element-wise division of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gacc2e3af27bf26d290570ec315d401707</Anchor>
    <Abstract>Divides every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga06d6bb9ab0a8150273e5a22a89715878</Anchor>
    <Abstract>Element-wise division of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gaf530330ec64ec1ee5b761a8427a31de4</Anchor>
    <Abstract>Divides a constant by every element of a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gac7101807d4c267d15a49ad1dc110a3f7</Anchor>
    <Abstract>Divides a constant by every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gab7b9bd774cf7bc7d5412a6fb7b48f00d</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gae87a63f829aff9b9b0660ddfd49a4468</Anchor>
    <Abstract>Squares every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga3f2bd758e0c77f043052585117d8e998</Anchor>
    <Abstract>Replaces every element in the vector with its square root.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga4d4e9bad9d6819dc75cdd452d3c557ee</Anchor>
    <Abstract>Writes the square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quake3_fast_inv_sqrt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaac42db7f643b436bcf40b47f87121d0f</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga0ed7046b8993dd9e35d179e756862e3e</Anchor>
    <Abstract>Replaces every element in the vector with its inverse square root.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga06733755d44e3b54f4e352075b2d8e99</Anchor>
    <Abstract>Writes the inverse square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaefd29a6cbea9c17c8f140fcafc0d3ffb</Anchor>
    <Abstract>Replaces every element in the vector with its cube root.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gafdb9426b4c6d801bc893da4587f0b319</Anchor>
    <Abstract>Writes the cube root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga4d7b31bfdfb1f0562a4c225b4dc2473d</Anchor>
    <Abstract>Reverses a vector in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga967f13e210604f26b9f3f82f30c2bcea</Anchor>
    <Abstract>Writes a reversed version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga85e960f77f2038580b86978e22efc22f</Anchor>
    <Abstract>Sorts a vector in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gaba1ec523bad1976e75425116acce0b41</Anchor>
    <Abstract>Writes a sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga1fe779f7a9d73092476b44a898458b3e</Anchor>
    <Abstract>Sorts a vector in reverse order in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gafaebbdff7339850f3c21f3d2c5d2c402</Anchor>
    <Abstract>Writes a reverse sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gab47d10f92ce1c4d7fed2c8c2f1100c5f</Anchor>
    <Abstract>Interleaves multichannel data into a single output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga1440c6e68d1108a65cc505365dc102ec</Anchor>
    <Abstract>Deinterleaves single channel data into multiple output vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaf26fedfd395fde4f4660ec71f8de4e4b</Anchor>
    <Abstract>Replaces each element of the vector with its absolute value.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>absAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1788065bd49a8332e4e7cddbe43efb71</Anchor>
    <Abstract>Writes the absolute value of each element of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga0c47411309e066a30abc8277160093ad</Anchor>
    <Abstract>Flips the sign of every element of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negateAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga43493cc760edb7487ef47c3c4ba71e66</Anchor>
    <Abstract>Writes the negation of every element of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaef1b9622a91bdfd9ad732a5cf3ccd09e</Anchor>
    <Abstract>Clips every element of a vector in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga725830394b5fdae7c9b2619fb5f6f831</Anchor>
    <Abstract>Writes a clipped version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga908e2b3c6bed10cd0f9ae3d3258aaaf7</Anchor>
    <Abstract>Returns the maximum element in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga6fd4f9074beb93e3ba5f43ec0e53daa9</Anchor>
    <Abstract>Finds the maximum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga8b0fa2e7182e68b32c6c52fb1ffa2e0a</Anchor>
    <Abstract>Returns the maximum absolute value in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga45a110950118106c6cfa463072381189</Anchor>
    <Abstract>Finds the maximum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga692bf45b3f655d802d4a818a85354b16</Anchor>
    <Abstract>Returns the minimum element in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaac443a21e11c258bd0c2117ef3bb4517</Anchor>
    <Abstract>Finds the minimum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gab15272637001f2fd69c290ea0e181410</Anchor>
    <Abstract>Returns the minimum absolute value in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1cb87029f51eecbaf1c6354925fd9510</Anchor>
    <Abstract>Finds the minimum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaae354cae92344334ea196b5c806922a0</Anchor>
    <Abstract>Finds both the minimum and maximum values in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga16ff452b40eaa3cbc8bbe56471436232</Anchor>
    <Abstract>Finds the minimum and maximum values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga6036620d9aa18f2ebea69745089693cb</Anchor>
    <Abstract>Finds both the minimum and maximum absolute values in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gadde26b71ce44942c5659dc53a34a32eb</Anchor>
    <Abstract>Returns the sum of all the values in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaa2e5f6b6ba0dae131ca0ed331bea8cf5</Anchor>
    <Abstract>Returns the mean of the values in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>standard_deviation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gab47c2a87d76a88141c9da54e14e7b23f</Anchor>
    <Abstract>Returns the standard deviation of the values in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gaa4b6dd046241ae61010b3ded17f60017</Anchor>
    <Abstract>Replaces every value in the vector with its sine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga756f4bbaf104041299cd2714ebaf1a65</Anchor>
    <Abstract>Writes the sine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga63246e8ab611e62651c00307dcc5a435</Anchor>
    <Abstract>Replaces every value in the vector with its arcsine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga367ddd2723585eb00cd9dc02e2e89bf8</Anchor>
    <Abstract>Writes the arcsine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gae3d397db9d7193b02da3166874d241bb</Anchor>
    <Abstract>Replaces every value in the vector with its cosine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga6446bb417be8a7d5121295cba269a2c1</Anchor>
    <Abstract>Writes the cosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gaaef9270f867375067c4cdeeae99fa3cf</Anchor>
    <Abstract>Replaces every value in the vector with its arccosine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga4351991f6ae7c84bf7036eee67d8e78d</Anchor>
    <Abstract>Writes the arccosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gac1d5049feb37c40da1813f0d71a20d53</Anchor>
    <Abstract>Replaces every value in the vector with its tangent.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga8d634b42674022a5aa28598ff8a9a9ae</Anchor>
    <Abstract>Writes the tangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga443d7d20aaae45760eef12f357aa62e5</Anchor>
    <Abstract>Replaces every value in the vector with its arctangent.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga96fc600afccb309f7399c0395f2ede97</Anchor>
    <Abstract>Writes the arctangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga47d23d1b1332c20df9d953b4f7bea66d</Anchor>
    <Abstract>Mixes together multiple channels of audio into one output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gabb6052fd16f6a2cd510915f6f6b84c24</Anchor>
    <Abstract>Calculates the RMS value of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countZeroCrossings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga12198e7a19451411e17cfb4b5c018d54</Anchor>
    <Abstract>Counts the number of zero crossings present in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga40d2819958ed451f2e05653ba3fb1a83</Anchor>
    <Abstract>Generates a ramp of samples, starting from startValue and incrementing by a consistent value until en...</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga4f6911014c23456f0a258411e794ca46</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRampAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga93a2671df52ebd0c4929b0423bf1969f</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gad18df8e02418d073f94d1e2aed8204c1</Anchor>
    <Abstract>Converts polar data to cartesian data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga92fdd723f07976adab8b474ded89c183</Anchor>
    <Abstract>Converts polar data to interleaved cartesian data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gaccce573738b864eb3fe84e9f2cd21c05</Anchor>
    <Abstract>Converts cartesian data to polar data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catesianInterleavedToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga5dc05936ca54471be64902374c27cf26</Anchor>
    <Abstract>Converts interleaved cartesian data to polar data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gaf94d3877ee90355657c2b046c350f8a0</Anchor>
    <Abstract>Converts cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianInterleavedToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga7e38a2dc4a126c23a36f79549c3d99bd</Anchor>
    <Abstract>Converts interleaved cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga9b1fbf06980673d8d242e81ca3b35b9a</Anchor>
    <Abstract>Replaces each value in the vector with eˆvalue .</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga5b90c458ee0a58487d8802a0ea0792da</Anchor>
    <Abstract>For each value in the input vector, writes eˆvalue to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gacf25d9521d2087928a3e964ca8cf4fd0</Anchor>
    <Abstract>Replaces each value in the vector with 2ˆvalue .</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twoAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga9a3a2aaaa9cbe2ce6a8e5a52e7b076b4</Anchor>
    <Abstract>For each value in the input vector, writes 2ˆvalue to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga01aeb14b9e5f4d4bb52ae21ecf4606a4</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>powAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga2852abe9d8baaa4d4217528d0b4615e2</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector,...</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gaa2e88e7d43811820fd28fa1f176f2b89</Anchor>
    <Abstract>Replaces each value in the vector with its natural logarithm.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>natAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gaf3d360a09b7480480488228bbe59bfe0</Anchor>
    <Abstract>Writes the natural logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga710ea2bcb865c54064abc78ef99162a5</Anchor>
    <Abstract>Replaces each value in the vector with its base 2 logarithm.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gaa4ea17fab0d4db24b250d6075f9bed56</Anchor>
    <Abstract>Writes the base 2 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga5272dee95882c956bcd68812f6783fe1</Anchor>
    <Abstract>Replaces each value in the vector with its base 10 logarithm.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga16ce0b291bb95f92a3e0bd451c919f06</Anchor>
    <Abstract>Writes the base 10 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga91812daaf7644a343b31a8dd578519dd</Anchor>
    <Abstract>Generates a Blackman window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga7ec3faaef22f955d5510758d6a411e21</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackmanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga5f75c64d4ba19bad84aa75a4387f7f96</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gaa7fe4a5869b6f4a0d8a07a58056e4ca4</Anchor>
    <Abstract>Generates a Hamm (Hamming) window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gab16d13175c3454d0230e5367edcdd985</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHammAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga0e8a2bc8f94e35682725b5ee0464b8fe</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector, writing the output samples to another v...</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga475f60cb9dcd055eff11500f02848591</Anchor>
    <Abstract>Generates a Hanning window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga44e4bd2d9551f8f165689a0d201856dc</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanningAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga5145d014c50cb9137965a4e1001675af</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shiftAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Anchor>a5263c6baf08903625d2f2c56bc51e65d</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_DOUBLE_ONLY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/d24/fftw__fft_8h.html</Path>
    <Anchor>a09e13e7bc904f98333229f65792654dc</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_HEADER_NAME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gaf0f842cd586876ba9d1b4872b1bb4f08</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_SINGLE_ONLY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/d24/fftw__fft_8h.html</Path>
    <Anchor>afc2bf4398dc8eb9ce229e5548eb4d17a</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fftw_load_wisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Anchor>aa8d7bbbfd0cffda120478042af244802</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fftw_save_wisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Anchor>ae8b59f246bec13e6e4afd82fb117b5d2</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d6/d04/namespacefiles.html</Path>
    <Anchor>a794b8ca19b6b9e9045a70663a9c3416c</Anchor>
    <Abstract>Convenience typedef for filesystem paths.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga734e223214335b499b76e734d6c3771f</Anchor>
    <Abstract>This typedef evaluates to the result type returned by calling the given function with the given argum...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>call_once</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga721d87621ab2fa2ff1ab032652d0b035</Anchor>
    <Abstract>Calls the function object exactly once throughout the entire life of the program.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consteval_invoke</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>gaca5e418d69ffceeb71b3ba29e6539e3c</Anchor>
    <Abstract>Forces a given function to be executed at compile time.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>curry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga0c20c15a7d3553a54d6fc156280e9705</Anchor>
    <Abstract>Breaks down a function that takes multiple arguments into a series of functions that each take one ar...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>try_call</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga2c54695eb338963524e6830107685528</Anchor>
    <Abstract>Executes a potentially-throwing function within a try-catch block, and returns false if an exception ...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga3dbd7fc208fe38c48614027d7480df86</Anchor>
    <Abstract>@concept Function This concept simply requires that an object is invocable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHasherForType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga93880e4516879865db6f778fbe52858e</Anchor>
    <Abstract>Creates an appropriate Hasher for the given Type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga77f8b860e06068de15d1b5884ffffe7e</Anchor>
    <Abstract>Calculates a hash value for the input data using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf2f7e434e212f85cd74b50d6a2aa5b03</Anchor>
    <Abstract>Calculates a hash value for the input string using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignore_unused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc</Scope>
    </TokenIdentifier>
    <Path>d1/ded/group__misc.html</Path>
    <Anchor>ga4048d6d752c40052344526e820f1d8fc</Anchor>
    <Abstract>A utility function to silence unused variable warnings.</Abstract>
    <DeclaredIn>IgnoreUnused.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga50eed5c23df17b2d8a0278bf5510c874</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga19945e87ea06553681a3dee33bbdb848</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>d1/db2/namespacejson.html</Path>
    <Anchor>a69fe2c5b4fa24c7d464058ff94e772b5</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllKnownLanguages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gae47ba49b20a945e9d925d71610c1183e</Anchor>
    <Abstract>Returns all known Language objects in Limes&apos;s internal database.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gace306aa0dfcae7ac36db5bd2047e664a</Anchor>
    <Abstract>Returns the Language object representing the language with the given name.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguageForCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gae2a4889b42da4f8cc121814805e3b775</Anchor>
    <Abstract>Returns the Language object representing the given ISO language code.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguagesForCountry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga5a9ca617c05af633b214fe6043698e6e</Anchor>
    <Abstract>Returns a vector of Language objects representing languages that may be spoken in the given country.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_ASSERT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga06a4bfb323e9f05d2e51a72b21f40e0a</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_ASSERT_FALSE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d5/dbb/limes__assert_8h.html</Path>
    <Anchor>a25f3c9bb0036097a480811b544f1eb34</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_UNREACHABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gad16dd0041c15feb8b68d38dc707f9595</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fire_assertion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga94d2d989fc36228179fb43e01ba142e3</Anchor>
    <Abstract>This function is called by LIMES_ASSERT if its condition fails.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fire_assertion_internal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga85a5c42b940ee58eb06e74dfc2501edb</Anchor>
    <Abstract>The actual implementation of the assertion function.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga64329f2d07616067699dcccc702a4184</Anchor>
    <Abstract>Returns the path to the current assertion log file, if any.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga2c49f64f578f6c0589dab44d41af3e2f</Anchor>
    <Abstract>Sets a filepath to be used to log assertion failures for the current process.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_FFTW</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga25d4ef2f45323ffac2004347580d93a3</Anchor>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga17cea7c21dc36ac136f4d29740f44915</Anchor>
    <Abstract>Returns a string literal with the name of the FFT implementation being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga238d72437257830eeafcd7b56e527711</Anchor>
    <Abstract>Returns true if the fallback FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFFTW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gabc139fd4c1c00c51c71537b1e58ca558</Anchor>
    <Abstract>Returns true if the FFTW FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga17c517cc47213674d63e231f21ea4e84</Anchor>
    <Abstract>Returns true if the Intel IPP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga048a1b789b50c9a8e50c59295b20fcbb</Anchor>
    <Abstract>Returns true if the Apple vDSP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gab90597bb127479bf13f5bef248f45364</Anchor>
    <Abstract>Enables or disables loading and saving of FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga6d9d6e8f66a7bdc8f78dc15dd589001a</Anchor>
    <Abstract>Returns the directory being used to save and load FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga37c9ecf1af20cdb4a4136daf487222ad</Anchor>
    <Abstract>Returns true if loading and saving of FFTW wisdom files is enabled.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga19ed4b21c8b71c04ea11c3c1e352d3f9</Anchor>
    <Abstract>Sets the directory that FFTW wisdom files will be read from and saved to.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFFTW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gabc139fd4c1c00c51c71537b1e58ca558</Anchor>
    <Abstract>Returns true if the FFTW FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga048a1b789b50c9a8e50c59295b20fcbb</Anchor>
    <Abstract>Returns true if the Apple vDSP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga17c517cc47213674d63e231f21ea4e84</Anchor>
    <Abstract>Returns true if the Intel IPP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga238d72437257830eeafcd7b56e527711</Anchor>
    <Abstract>Returns true if the fallback FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga17cea7c21dc36ac136f4d29740f44915</Anchor>
    <Abstract>Returns a string literal with the name of the FFT implementation being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga19ed4b21c8b71c04ea11c3c1e352d3f9</Anchor>
    <Abstract>Sets the directory that FFTW wisdom files will be read from and saved to.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga6d9d6e8f66a7bdc8f78dc15dd589001a</Anchor>
    <Abstract>Returns the directory being used to save and load FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gab90597bb127479bf13f5bef248f45364</Anchor>
    <Abstract>Enables or disables loading and saving of FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga37c9ecf1af20cdb4a4136daf487222ad</Anchor>
    <Abstract>Returns true if loading and saving of FFTW wisdom files is enabled.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_BEGIN_NAMESPACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>da/d07/group__limes__core.html</Path>
    <Anchor>ga41a58aa43a02cea437cc98ee291c3a2c</Anchor>
    <DeclaredIn>limes_namespace.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_END_NAMESPACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>da/d07/group__limes__core.html</Path>
    <Anchor>ga7ea42681efe61fc798589260810ad784</Anchor>
    <DeclaredIn>limes_namespace.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_IPP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaaf4e6c2cb5282672fc67747a8e1f550f</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_MIPP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga70b144652ef1412e204a8d4e9c66fef8</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_POMMIER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gacc1d8c1c278a0ac62eef8c5595503a5a</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_VDSP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga5798e2e410bb607a38b777b0f8e7fafa</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Anchor>ac33399716ba28116787d59c93c756862</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Anchor>af89836f48aa4300741fe2893b4db3348</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga4b00213256c36d9c42e8f60090d05841</Anchor>
    <Abstract>Simultaneously computes the sin and cosine of every value in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>ga5645cd63680c6e5a6974ce985d78627b</Anchor>
    <Abstract>Replaces each value in the vector with its reciprocal.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>ga6389e1ce8e42772417714ab657ff4aa8</Anchor>
    <Abstract>Writes the reciprocal of each value in the input vector to an output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga236730b5b58cb80db4109405a1b5ef58</Anchor>
    <Abstract>Adds a constant to every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gabc7a4ff08b667467085425638bea75eb</Anchor>
    <Abstract>Element-wise addition of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga54fc8ebf2e9c289ec63f815dbac07d9d</Anchor>
    <Abstract>Element-wise addition of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga6d34827af7d41998b391a3e67fca4d46</Anchor>
    <Abstract>Adds a constant to every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga2f2262dccf987936d63477419b88efe9</Anchor>
    <Abstract>Subtracts a constant from every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga4955c40ee5fd873f489f044fafbc0d5d</Anchor>
    <Abstract>Element-wise subtraction of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga0f82bd4b82485db5d242914683bb61ac</Anchor>
    <Abstract>Element-wise subtraction of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga3700ecee30f29699a83a7581bdb52e3c</Anchor>
    <Abstract>Subtracts a constant from every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gaaf58a77448f3fa791c004a782aa9dd81</Anchor>
    <Abstract>Subtracts every element of a vector from a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga3ae931b13b98e3c09f7f64a9e7ec5a2c</Anchor>
    <Abstract>Subtracts every element of a vector from a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga3651c6c09d21235cd012207b70a893b3</Anchor>
    <Abstract>Computes the dot product of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gaef9fe10c7d98a138c6fec14096b87c4f</Anchor>
    <Abstract>Multiplies every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga3226554923c75524fa63d02845783141</Anchor>
    <Abstract>Element-wise multiplication of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga21f9f718a1b835dfe1d645f4f9d9323f</Anchor>
    <Abstract>Element-wise multiplication of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gaec8c443b22bdbe7c3db3a160fd54a48e</Anchor>
    <Abstract>Multiplies every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga1dc6405e4146d70bdd34824a574f06e9</Anchor>
    <Abstract>Divides every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gaa4a5318c71f53c1f44c4a822d6d01db4</Anchor>
    <Abstract>Element-wise division of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga34933df0e4c2708e2aae5d840abb03d2</Anchor>
    <Abstract>Element-wise division of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga8eee2736dd660d8eaf2b7aa7fa84a72a</Anchor>
    <Abstract>Divides every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gafe3e8c0a349ad7f4c1e4ffb8de86d9f7</Anchor>
    <Abstract>Divides a constant by every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga893772bd0b2ab1dd92aceddf06bb7c32</Anchor>
    <Abstract>Divides a constant by every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga923e6bc39aa8d95a8544f499fc5aca0d</Anchor>
    <Abstract>Replaces every element in the vector with its cube root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga8567e5469e2530bb15c29b5a7127a1b4</Anchor>
    <Abstract>Writes the cube root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga80888e96e6a1d2a8effbd788cf866da4</Anchor>
    <Abstract>Replaces every element in the vector with its inverse square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga55b527f9ebf789195e30604180b5dc35</Anchor>
    <Abstract>Writes the inverse square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga8c23ba931fcc4b1939a6adf8e064f806</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga84321b15daa61e99bff9c90e04f538be</Anchor>
    <Abstract>Squares every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga32029e6c6600295088165a4cf80fa46e</Anchor>
    <Abstract>Replaces every element in the vector with its square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gade8e878085d8840a3b47540f8c46b89f</Anchor>
    <Abstract>Writes the square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gae5d0820b0e96989fcce9f3f26f38e1fe</Anchor>
    <Abstract>Deinterleaves single channel data into multiple output vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga4deb61bd8fcff15bb624875cc38a483f</Anchor>
    <Abstract>Interleaves multichannel data into a single output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga02463907aabd8eb452744552531f90e4</Anchor>
    <Abstract>Reverses a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gaaacab2960517de86aa4c72bf1aad59e3</Anchor>
    <Abstract>Writes a reversed version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga6ee272a6f2943645a2f6131dce8a78da</Anchor>
    <Abstract>Sorts a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga91b84655fb58e962fc92f44ce7d1089e</Anchor>
    <Abstract>Writes a sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gad020ceb892c3eace839d6eabfab76608</Anchor>
    <Abstract>Sorts a vector in reverse order in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gad3b2ca0b23cca75bec385fd95b6bcff4</Anchor>
    <Abstract>Writes a reverse sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga74bfc4caf2e8167ca6960fe9acf2c214</Anchor>
    <Abstract>Replaces each element of the vector with its absolute value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>absAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga857ac5f8f89b743a2687cd965dbcc98a</Anchor>
    <Abstract>Writes the absolute value of each element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gafdc25a5841b9817c11e352b76a7a1605</Anchor>
    <Abstract>Clips every element of a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1700a43b802f3ad832622ca8a1c9727f</Anchor>
    <Abstract>Writes a clipped version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gab5139f2858fb69eb2ac615991ac5584e</Anchor>
    <Abstract>Returns the mean of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gac77b0debd98c1a5818ab4e64d8a7d55f</Anchor>
    <Abstract>Flips the sign of every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negateAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga0d03f252a7f4e2f74134cb6bbd6fa756</Anchor>
    <Abstract>Writes the negation of every element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>standard_deviation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga327cf469950778c5293615e37eb0f447</Anchor>
    <Abstract>Returns the standard deviation of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga75cf069da9162bb3e3e019d7325c4286</Anchor>
    <Abstract>Returns the sum of all the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga2b9ca98d48877ea7a09777202711fd14</Anchor>
    <Abstract>Returns the maximum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gab7fbdda1d58f33cb333944be0ea90872</Anchor>
    <Abstract>Finds the maximum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga255d7088efb599876e02b7b8abd2a996</Anchor>
    <Abstract>Returns the maximum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga8fa776a377b6164dae4889cc89253bbd</Anchor>
    <Abstract>Finds the maximum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gac850b880c9ee8106321198dda9dfc89d</Anchor>
    <Abstract>Returns the minimum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga887ed86c17a7996c351461192bd819aa</Anchor>
    <Abstract>Finds the minimum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga80feb4cd44aa34ee6ddab2ad51ae7250</Anchor>
    <Abstract>Returns the minimum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf8a064acc4a5f97b2e98110cc2ceaae2</Anchor>
    <Abstract>Finds the minimum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga5c8cb588f17f928a0979c3aed56c5993</Anchor>
    <Abstract>Finds both the minimum and maximum values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga3a2a10d9d0997de372a32ef19e01d68e</Anchor>
    <Abstract>Finds the minimum and maximum values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga7d1b7e77fcb133947b6bb048405904e1</Anchor>
    <Abstract>Finds both the minimum and maximum absolute values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga4ab5258f412dc03cade0fb58c510a972</Anchor>
    <Abstract>Finds the minimum and maximum absolute values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga1131ff9a6c22f93bf86efe856979eb8d</Anchor>
    <Abstract>Returns the difference between the maximum and minimum values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rangeAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga74bdbe1d40199c226e1fec132b2e5ec3</Anchor>
    <Abstract>Returns the difference between the maximum and minimum absolute values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gae3c58be834153eb8865b31b6d44ec9a0</Anchor>
    <Abstract>Replaces every value in the vector with its arcsine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gae15618bd5f7738685e4232280264ff94</Anchor>
    <Abstract>Writes the arcsine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga14efdf3f20df88f266d3c644ba451be0</Anchor>
    <Abstract>Replaces every value in the vector with its sine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga70d8db9e6144847e686dab7bc45517c0</Anchor>
    <Abstract>Writes the sine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga9075633c6116bb64ea13895eb3a5dada</Anchor>
    <Abstract>Replaces every value in the vector with its arccosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga5013ba0e6556346fe3409f3dc1ad4cf1</Anchor>
    <Abstract>Writes the arccosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gae8ffec8c97c1fb02bf8400c27beb3e1e</Anchor>
    <Abstract>Replaces every value in the vector with its cosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gaab8687cc72b8083a69703af6ce586386</Anchor>
    <Abstract>Writes the cosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga0c6c293d12a4ab925bfc4812313bdb00</Anchor>
    <Abstract>Replaces every value in the vector with its arctangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga96acee7d2976603c30fc1affc172f29d</Anchor>
    <Abstract>Writes the arctangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga5be8d79ab028b1b93e42667eacee85ef</Anchor>
    <Abstract>Replaces every value in the vector with its tangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gaae5ec9c1a5aa45ed11a530c7034de016</Anchor>
    <Abstract>Writes the tangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga2ec23b2ac119c8637b1bdea7906b4c06</Anchor>
    <Abstract>Replaces each value in the vector with its base 10 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga1742602a49565129cc871a58ed86fd8b</Anchor>
    <Abstract>Writes the base 10 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gab6713ddbc205d392b2498c45561ac427</Anchor>
    <Abstract>Replaces each value in the vector with its base 2 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga7c645b417a64572eedc43015f5b34a05</Anchor>
    <Abstract>Writes the base 2 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga10f75ff8b8959e2ee01945d9bdbab7a5</Anchor>
    <Abstract>Replaces each value in the vector with its natural logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>natAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga2263e2ba5217fe9539dbcc7fc0dd9f0f</Anchor>
    <Abstract>Writes the natural logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gaf26d13f5f8fa617ebd9d6569fc335aa5</Anchor>
    <Abstract>Replaces each value in the vector with eˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga0249d187cff7cd560bcc64fe8b660337</Anchor>
    <Abstract>For each value in the input vector, writes eˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gab0f9de6f680283ad1ec759c1faa728a3</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>powAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga1138b889dc48e861460a4330d9799222</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector,...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga5b878247f5007057e31d4b2401bb1ead</Anchor>
    <Abstract>Replaces each value in the vector with 2ˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twoAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga0e85455bb8d4385be6476ecc678fb6f0</Anchor>
    <Abstract>For each value in the input vector, writes 2ˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga6614fdbae28c320a0f6c6729fb6332d8</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRampAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaa101b872770f68520fdc51028fc86a76</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countZeroCrossings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaf5fd7213b9a5bd6d68653b41a0132aaf</Anchor>
    <Abstract>Counts the number of zero crossings present in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaa5fd110a645569562ed1b0ff9571d204</Anchor>
    <Abstract>Generates a ramp of samples, starting from startValue and incrementing by a consistent value until en...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga3cb05a7bfe9541e878923d7fd1e158a9</Anchor>
    <Abstract>Mixes together multiple channels of audio into one output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga8d27dd47c9fcd0cc4fd9cda84b9552b3</Anchor>
    <Abstract>Calculates the RMS value of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gaba364c54789e790fee311a41081fff54</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackmanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gab21f461fc0412d40d173d00727e355cc</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga3e484b57ffdf300079b6039e85de7898</Anchor>
    <Abstract>Generates a Blackman window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga98a439d54ea7e42ceaba0e0ef8f05c6d</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHammAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga77f84cbc8e7e2ab59c09b4a7b1599bec</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector, writing the output samples to another v...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gab41b83147aa9748b2b60ce1eb4244a9d</Anchor>
    <Abstract>Generates a Hamm (Hamming) window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga58332762474a285514e30b255be86835</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanningAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>gad7afbe4383d3a434289bdd6d4694abc7</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga1f3dd9621252650e890a6f846ee6e3ce</Anchor>
    <Abstract>Generates a Hanning window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianInterleavedToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga4b5b41c7ed4681603518d8f98c110f97</Anchor>
    <Abstract>Converts interleaved cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga0df7ec7c7ff3358aec1da9fcaf901876</Anchor>
    <Abstract>Converts cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga2e1838d991aea7a17f8c155e8c217daf</Anchor>
    <Abstract>Converts cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catesianInterleavedToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gae72dc85cafe4ad69f63801cc1197c07c</Anchor>
    <Abstract>Converts interleaved cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gab445f6a6f4a335e67425a0f7a56ee4c2</Anchor>
    <Abstract>Converts polar data to cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga6893000b39e9cd5f68df3b50782b782c</Anchor>
    <Abstract>Converts polar data to interleaved cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areDenormalsDisabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>gaf1b063aaec395fbadd3e3a24bdbd7d3e</Anchor>
    <Abstract>Returns true if denormalized numbers are currently enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableDenormalisedNumberSupport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>ga095c013f3d5f68405a075e4c0bcdec66</Anchor>
    <Abstract>Controls whether denormalized numbers are enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlushToZeroMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga455df89d2cef625f239ebd5507fea3d2</Anchor>
    <Abstract>Controls whether flush to zero mode is enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlushToZeroEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga8c5fce68c3759e785f4778df27012b24</Anchor>
    <Abstract>Returns true if flush to zero mode is enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga1a21f574f3d9ec4bcff2d04b4491e364</Anchor>
    <Abstract>Returns a string literal with the name of the implementation being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga467465de51d6f11e720ef4fd5e1bef4b</Anchor>
    <Abstract>Returns true if the fallback implementation is being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga6536142f4ae3b7eb733d5446657c7304</Anchor>
    <Abstract>Returns true if the implementation being used is Intel IPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingMIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gac49ec9d0f787d23c27bc51ec2cbd5bdf</Anchor>
    <Abstract>Returns true if the implementation being used is MIPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingPommierExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga6e828d61bfb16fafbdaf77a03870e93d</Anchor>
    <Abstract>Returns true if the Pommier SIMD extension functions are being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gaf183d34eeacbd6b3475b5e5a00a547ea</Anchor>
    <Abstract>Returns true if the implementation being used is Apple vDSP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>ga5645cd63680c6e5a6974ce985d78627b</Anchor>
    <Abstract>Replaces each value in the vector with its reciprocal.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>ga6389e1ce8e42772417714ab657ff4aa8</Anchor>
    <Abstract>Writes the reciprocal of each value in the input vector to an output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga236730b5b58cb80db4109405a1b5ef58</Anchor>
    <Abstract>Adds a constant to every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gabc7a4ff08b667467085425638bea75eb</Anchor>
    <Abstract>Element-wise addition of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga6d34827af7d41998b391a3e67fca4d46</Anchor>
    <Abstract>Adds a constant to every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga54fc8ebf2e9c289ec63f815dbac07d9d</Anchor>
    <Abstract>Element-wise addition of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga2f2262dccf987936d63477419b88efe9</Anchor>
    <Abstract>Subtracts a constant from every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga4955c40ee5fd873f489f044fafbc0d5d</Anchor>
    <Abstract>Element-wise subtraction of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga3700ecee30f29699a83a7581bdb52e3c</Anchor>
    <Abstract>Subtracts a constant from every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga0f82bd4b82485db5d242914683bb61ac</Anchor>
    <Abstract>Element-wise subtraction of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gaaf58a77448f3fa791c004a782aa9dd81</Anchor>
    <Abstract>Subtracts every element of a vector from a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga3ae931b13b98e3c09f7f64a9e7ec5a2c</Anchor>
    <Abstract>Subtracts every element of a vector from a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gaef9fe10c7d98a138c6fec14096b87c4f</Anchor>
    <Abstract>Multiplies every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga3226554923c75524fa63d02845783141</Anchor>
    <Abstract>Element-wise multiplication of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gaec8c443b22bdbe7c3db3a160fd54a48e</Anchor>
    <Abstract>Multiplies every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga21f9f718a1b835dfe1d645f4f9d9323f</Anchor>
    <Abstract>Element-wise multiplication of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga3651c6c09d21235cd012207b70a893b3</Anchor>
    <Abstract>Computes the dot product of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga1dc6405e4146d70bdd34824a574f06e9</Anchor>
    <Abstract>Divides every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gaa4a5318c71f53c1f44c4a822d6d01db4</Anchor>
    <Abstract>Element-wise division of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga8eee2736dd660d8eaf2b7aa7fa84a72a</Anchor>
    <Abstract>Divides every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga34933df0e4c2708e2aae5d840abb03d2</Anchor>
    <Abstract>Element-wise division of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gafe3e8c0a349ad7f4c1e4ffb8de86d9f7</Anchor>
    <Abstract>Divides a constant by every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga893772bd0b2ab1dd92aceddf06bb7c32</Anchor>
    <Abstract>Divides a constant by every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga8c23ba931fcc4b1939a6adf8e064f806</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga84321b15daa61e99bff9c90e04f538be</Anchor>
    <Abstract>Squares every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga32029e6c6600295088165a4cf80fa46e</Anchor>
    <Abstract>Replaces every element in the vector with its square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gade8e878085d8840a3b47540f8c46b89f</Anchor>
    <Abstract>Writes the square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga80888e96e6a1d2a8effbd788cf866da4</Anchor>
    <Abstract>Replaces every element in the vector with its inverse square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga55b527f9ebf789195e30604180b5dc35</Anchor>
    <Abstract>Writes the inverse square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga923e6bc39aa8d95a8544f499fc5aca0d</Anchor>
    <Abstract>Replaces every element in the vector with its cube root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga8567e5469e2530bb15c29b5a7127a1b4</Anchor>
    <Abstract>Writes the cube root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga02463907aabd8eb452744552531f90e4</Anchor>
    <Abstract>Reverses a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gaaacab2960517de86aa4c72bf1aad59e3</Anchor>
    <Abstract>Writes a reversed version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga6ee272a6f2943645a2f6131dce8a78da</Anchor>
    <Abstract>Sorts a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga91b84655fb58e962fc92f44ce7d1089e</Anchor>
    <Abstract>Writes a sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gad020ceb892c3eace839d6eabfab76608</Anchor>
    <Abstract>Sorts a vector in reverse order in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gad3b2ca0b23cca75bec385fd95b6bcff4</Anchor>
    <Abstract>Writes a reverse sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga4deb61bd8fcff15bb624875cc38a483f</Anchor>
    <Abstract>Interleaves multichannel data into a single output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gae5d0820b0e96989fcce9f3f26f38e1fe</Anchor>
    <Abstract>Deinterleaves single channel data into multiple output vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga74bfc4caf2e8167ca6960fe9acf2c214</Anchor>
    <Abstract>Replaces each element of the vector with its absolute value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>absAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga857ac5f8f89b743a2687cd965dbcc98a</Anchor>
    <Abstract>Writes the absolute value of each element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gac77b0debd98c1a5818ab4e64d8a7d55f</Anchor>
    <Abstract>Flips the sign of every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negateAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga0d03f252a7f4e2f74134cb6bbd6fa756</Anchor>
    <Abstract>Writes the negation of every element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gafdc25a5841b9817c11e352b76a7a1605</Anchor>
    <Abstract>Clips every element of a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1700a43b802f3ad832622ca8a1c9727f</Anchor>
    <Abstract>Writes a clipped version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga75cf069da9162bb3e3e019d7325c4286</Anchor>
    <Abstract>Returns the sum of all the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gab5139f2858fb69eb2ac615991ac5584e</Anchor>
    <Abstract>Returns the mean of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>standard_deviation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga327cf469950778c5293615e37eb0f447</Anchor>
    <Abstract>Returns the standard deviation of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga2b9ca98d48877ea7a09777202711fd14</Anchor>
    <Abstract>Returns the maximum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gab7fbdda1d58f33cb333944be0ea90872</Anchor>
    <Abstract>Finds the maximum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga255d7088efb599876e02b7b8abd2a996</Anchor>
    <Abstract>Returns the maximum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga8fa776a377b6164dae4889cc89253bbd</Anchor>
    <Abstract>Finds the maximum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gac850b880c9ee8106321198dda9dfc89d</Anchor>
    <Abstract>Returns the minimum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga887ed86c17a7996c351461192bd819aa</Anchor>
    <Abstract>Finds the minimum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga80feb4cd44aa34ee6ddab2ad51ae7250</Anchor>
    <Abstract>Returns the minimum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf8a064acc4a5f97b2e98110cc2ceaae2</Anchor>
    <Abstract>Finds the minimum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga5c8cb588f17f928a0979c3aed56c5993</Anchor>
    <Abstract>Finds both the minimum and maximum values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga3a2a10d9d0997de372a32ef19e01d68e</Anchor>
    <Abstract>Finds the minimum and maximum values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga7d1b7e77fcb133947b6bb048405904e1</Anchor>
    <Abstract>Finds both the minimum and maximum absolute values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga4ab5258f412dc03cade0fb58c510a972</Anchor>
    <Abstract>Finds the minimum and maximum absolute values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga1131ff9a6c22f93bf86efe856979eb8d</Anchor>
    <Abstract>Returns the difference between the maximum and minimum values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rangeAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga74bdbe1d40199c226e1fec132b2e5ec3</Anchor>
    <Abstract>Returns the difference between the maximum and minimum absolute values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga14efdf3f20df88f266d3c644ba451be0</Anchor>
    <Abstract>Replaces every value in the vector with its sine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga70d8db9e6144847e686dab7bc45517c0</Anchor>
    <Abstract>Writes the sine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gae3c58be834153eb8865b31b6d44ec9a0</Anchor>
    <Abstract>Replaces every value in the vector with its arcsine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gae15618bd5f7738685e4232280264ff94</Anchor>
    <Abstract>Writes the arcsine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gae8ffec8c97c1fb02bf8400c27beb3e1e</Anchor>
    <Abstract>Replaces every value in the vector with its cosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gaab8687cc72b8083a69703af6ce586386</Anchor>
    <Abstract>Writes the cosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga9075633c6116bb64ea13895eb3a5dada</Anchor>
    <Abstract>Replaces every value in the vector with its arccosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga5013ba0e6556346fe3409f3dc1ad4cf1</Anchor>
    <Abstract>Writes the arccosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga5be8d79ab028b1b93e42667eacee85ef</Anchor>
    <Abstract>Replaces every value in the vector with its tangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gaae5ec9c1a5aa45ed11a530c7034de016</Anchor>
    <Abstract>Writes the tangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga0c6c293d12a4ab925bfc4812313bdb00</Anchor>
    <Abstract>Replaces every value in the vector with its arctangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga96acee7d2976603c30fc1affc172f29d</Anchor>
    <Abstract>Writes the arctangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga3cb05a7bfe9541e878923d7fd1e158a9</Anchor>
    <Abstract>Mixes together multiple channels of audio into one output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga8d27dd47c9fcd0cc4fd9cda84b9552b3</Anchor>
    <Abstract>Calculates the RMS value of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countZeroCrossings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaf5fd7213b9a5bd6d68653b41a0132aaf</Anchor>
    <Abstract>Counts the number of zero crossings present in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaa5fd110a645569562ed1b0ff9571d204</Anchor>
    <Abstract>Generates a ramp of samples, starting from startValue and incrementing by a consistent value until en...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga6614fdbae28c320a0f6c6729fb6332d8</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRampAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaa101b872770f68520fdc51028fc86a76</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gab445f6a6f4a335e67425a0f7a56ee4c2</Anchor>
    <Abstract>Converts polar data to cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga6893000b39e9cd5f68df3b50782b782c</Anchor>
    <Abstract>Converts polar data to interleaved cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga2e1838d991aea7a17f8c155e8c217daf</Anchor>
    <Abstract>Converts cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catesianInterleavedToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gae72dc85cafe4ad69f63801cc1197c07c</Anchor>
    <Abstract>Converts interleaved cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga0df7ec7c7ff3358aec1da9fcaf901876</Anchor>
    <Abstract>Converts cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianInterleavedToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga4b5b41c7ed4681603518d8f98c110f97</Anchor>
    <Abstract>Converts interleaved cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableDenormalisedNumberSupport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>ga095c013f3d5f68405a075e4c0bcdec66</Anchor>
    <Abstract>Controls whether denormalized numbers are enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areDenormalsDisabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>gaf1b063aaec395fbadd3e3a24bdbd7d3e</Anchor>
    <Abstract>Returns true if denormalized numbers are currently enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlushToZeroMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga455df89d2cef625f239ebd5507fea3d2</Anchor>
    <Abstract>Controls whether flush to zero mode is enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlushToZeroEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga8c5fce68c3759e785f4778df27012b24</Anchor>
    <Abstract>Returns true if flush to zero mode is enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gaf183d34eeacbd6b3475b5e5a00a547ea</Anchor>
    <Abstract>Returns true if the implementation being used is Apple vDSP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga6536142f4ae3b7eb733d5446657c7304</Anchor>
    <Abstract>Returns true if the implementation being used is Intel IPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingMIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gac49ec9d0f787d23c27bc51ec2cbd5bdf</Anchor>
    <Abstract>Returns true if the implementation being used is MIPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga467465de51d6f11e720ef4fd5e1bef4b</Anchor>
    <Abstract>Returns true if the fallback implementation is being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga1a21f574f3d9ec4bcff2d04b4491e364</Anchor>
    <Abstract>Returns a string literal with the name of the implementation being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingPommierExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga6e828d61bfb16fafbdaf77a03870e93d</Anchor>
    <Abstract>Returns true if the Pommier SIMD extension functions are being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gaf26d13f5f8fa617ebd9d6569fc335aa5</Anchor>
    <Abstract>Replaces each value in the vector with eˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga0249d187cff7cd560bcc64fe8b660337</Anchor>
    <Abstract>For each value in the input vector, writes eˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga5b878247f5007057e31d4b2401bb1ead</Anchor>
    <Abstract>Replaces each value in the vector with 2ˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twoAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga0e85455bb8d4385be6476ecc678fb6f0</Anchor>
    <Abstract>For each value in the input vector, writes 2ˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gab0f9de6f680283ad1ec759c1faa728a3</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>powAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga1138b889dc48e861460a4330d9799222</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector,...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga10f75ff8b8959e2ee01945d9bdbab7a5</Anchor>
    <Abstract>Replaces each value in the vector with its natural logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>natAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga2263e2ba5217fe9539dbcc7fc0dd9f0f</Anchor>
    <Abstract>Writes the natural logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gab6713ddbc205d392b2498c45561ac427</Anchor>
    <Abstract>Replaces each value in the vector with its base 2 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga7c645b417a64572eedc43015f5b34a05</Anchor>
    <Abstract>Writes the base 2 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga2ec23b2ac119c8637b1bdea7906b4c06</Anchor>
    <Abstract>Replaces each value in the vector with its base 10 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga1742602a49565129cc871a58ed86fd8b</Anchor>
    <Abstract>Writes the base 10 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga3e484b57ffdf300079b6039e85de7898</Anchor>
    <Abstract>Generates a Blackman window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gaba364c54789e790fee311a41081fff54</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackmanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gab21f461fc0412d40d173d00727e355cc</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gab41b83147aa9748b2b60ce1eb4244a9d</Anchor>
    <Abstract>Generates a Hamm (Hamming) window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga98a439d54ea7e42ceaba0e0ef8f05c6d</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHammAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga77f84cbc8e7e2ab59c09b4a7b1599bec</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector, writing the output samples to another v...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga1f3dd9621252650e890a6f846ee6e3ce</Anchor>
    <Abstract>Generates a Hanning window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga58332762474a285514e30b255be86835</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanningAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>gad7afbe4383d3a434289bdd6d4694abc7</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga930277c1a7baf15cad3cea81282f76b5</Anchor>
    <Abstract>Fills the vector with zeroes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga40ad5c8779f7e96372e87c5fa7889775</Anchor>
    <Abstract>Copies from one vector to another.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga5e307f914b980a4e372a91bb46d366ab</Anchor>
    <Abstract>Fills the vector with the specified value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga501c0a016f50af88ace6897813709129</Anchor>
    <Abstract>@concept Integral Any integral type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gada8cae1f0fbf8db713e5e5b89dba8ee8</Anchor>
    <Abstract>@concept Scalar Any scalar type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga058e37a32a17e5b0f4fd908d8aec7438</Anchor>
    <Abstract>Swaps the elements of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga3d3edac6f20b9509c8bed6fd6187e0e3</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>gac33355d3cea76811891aaea5c449fc48</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector, writing the output sample...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga64805b423eab6c813c81db7fbcc3fb39</Anchor>
    <Abstract>Generates a window function of the desired type , writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blackman_alpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::constants</Scope>
    </TokenIdentifier>
    <Path>d8/d0f/namespacemath_1_1constants.html</Path>
    <Anchor>ab9ce49145794b197c4107d35284a6e0e</Anchor>
    <Abstract>The alpha value used for computing default Blackman filters.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>half_pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::constants</Scope>
    </TokenIdentifier>
    <Path>d8/d0f/namespacemath_1_1constants.html</Path>
    <Anchor>a235933b0adc79428388d6f18d94193d3</Anchor>
    <Abstract>One-half pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::constants</Scope>
    </TokenIdentifier>
    <Path>d8/d0f/namespacemath_1_1constants.html</Path>
    <Anchor>afc3cb116f5aa8a90b9c93d112b372f1e</Anchor>
    <Abstract>Pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two_pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::constants</Scope>
    </TokenIdentifier>
    <Path>d8/d0f/namespacemath_1_1constants.html</Path>
    <Anchor>a6db585a73b2811284a16382a6cfb4952</Anchor>
    <Abstract>Two pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6d262e04bc6f3646fdefa9bdb887f977</Anchor>
    <Abstract>A constexpr-enabled absolute value function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6d262e04bc6f3646fdefa9bdb887f977</Anchor>
    <Abstract>A constexpr-enabled absolute value function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factorial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8f543e20a836b53e34ff51af3c435650</Anchor>
    <Abstract>Computes the factorial of the number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factorial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8f543e20a836b53e34ff51af3c435650</Anchor>
    <Abstract>Computes the factorial of the number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqFromPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6bb0f47d78ad031a40afbf364083bb43</Anchor>
    <Abstract>Returns the frequency in Hz with a given period in samples at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqFromPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6bb0f47d78ad031a40afbf364083bb43</Anchor>
    <Abstract>Returns the frequency in Hz with a given period in samples at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqToMidi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaba5c165d2cb7683000726630f32ff02c</Anchor>
    <Abstract>Converts a frequency in Hz to a MIDI note.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqToMidi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaba5c165d2cb7683000726630f32ff02c</Anchor>
    <Abstract>Converts a frequency in Hz to a MIDI note.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga04e106b35afcdef6a145a5db35d91efa</Anchor>
    <Abstract>@concept Integral An integral type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDivisibleBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga9e117ca50dccbf636d7a04e110a08df8</Anchor>
    <Abstract>Returns true if the number is divisible by the divisor with no remainder.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDivisibleBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga9e117ca50dccbf636d7a04e110a08df8</Anchor>
    <Abstract>Returns true if the number is divisible by the divisor with no remainder.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPowerOf2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga2c6a4276c506b35b346e1bf5dbc04e15</Anchor>
    <Abstract>Returns true if val is 2^something.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPowerOf2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga2c6a4276c506b35b346e1bf5dbc04e15</Anchor>
    <Abstract>Returns true if val is 2^something.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaa7aecc12e23fb531f845fdf32f2588cf</Anchor>
    <Abstract>Returns true if the number is a prime number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaa7aecc12e23fb531f845fdf32f2588cf</Anchor>
    <Abstract>Returns true if the number is a prime number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga54cdbdfc2b2002ed1b794a8e2e416e35</Anchor>
    <Abstract>A constexpr-enabled clipping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga54cdbdfc2b2002ed1b794a8e2e416e35</Anchor>
    <Abstract>A constexpr-enabled clipping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gad0e5a71d2f701efa07a804945876b122</Anchor>
    <Abstract>A constexpr-enabled mapping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gad0e5a71d2f701efa07a804945876b122</Anchor>
    <Abstract>A constexpr-enabled mapping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>middleOfThree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga09f140aa9f0323bb7cbb299cfd4be28f</Anchor>
    <Abstract>Returns the median of three values.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>middleOfThree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga09f140aa9f0323bb7cbb299cfd4be28f</Anchor>
    <Abstract>Returns the median of three values.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midiToFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga1d25879e95bcdc91434efb4fe91bda13</Anchor>
    <Abstract>Converts a MIDI note to a frequency in Hz.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midiToFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga1d25879e95bcdc91434efb4fe91bda13</Anchor>
    <Abstract>Converts a MIDI note to a frequency in Hz.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>msToSamps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga95da7fc1fb96ae78716e0faf3b1dc0a0</Anchor>
    <Abstract>Converts a number of milliseconds to the closest integer number of samples at the specified samplerat...</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>msToSamps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga95da7fc1fb96ae78716e0faf3b1dc0a0</Anchor>
    <Abstract>Converts a number of milliseconds to the closest integer number of samples at the specified samplerat...</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga0c049988ace901cbcc231b71ade26e9e</Anchor>
    <Abstract>A constexpr-enabled negation function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga0c049988ace901cbcc231b71ade26e9e</Anchor>
    <Abstract>A constexpr-enabled negation function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberIsEven</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga548a17542294fda4e35f822965eef21d</Anchor>
    <Abstract>Returns true if the number is evenly divisible by 2.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberIsEven</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga548a17542294fda4e35f822965eef21d</Anchor>
    <Abstract>Returns true if the number is evenly divisible by 2.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>periodInSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga1a6dc5f37f6bc00737b62629958fd0ab</Anchor>
    <Abstract>Returns the period in samples of a frequency at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>periodInSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga1a6dc5f37f6bc00737b62629958fd0ab</Anchor>
    <Abstract>Returns the period in samples of a frequency at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>power</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga4c562496dcd927fa763bbed87f0dbac1</Anchor>
    <Abstract>A constexpr-enabled power function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>power</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga4c562496dcd927fa763bbed87f0dbac1</Anchor>
    <Abstract>A constexpr-enabled power function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>round</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gacb9b0f8450f502b2c771ca5e5a7da212</Anchor>
    <Abstract>A constexpr-enabled rounding function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>round</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gacb9b0f8450f502b2c771ca5e5a7da212</Anchor>
    <Abstract>A constexpr-enabled rounding function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampsToMs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga03e0609c4a16e5500a587ca9bafe7f87</Anchor>
    <Abstract>Converts a number of samples to milliseconds at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampsToMs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga03e0609c4a16e5500a587ca9bafe7f87</Anchor>
    <Abstract>Converts a number of samples to milliseconds at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga85112aca5e58028e5a710f98adde3f40</Anchor>
    <Abstract>@concept Scalar A scalar type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga4598ffcc4268a107b17fccc0d7ca0ec1</Anchor>
    <Abstract>Calculates an MD5 hash for the given data.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf105596223e1d9106a443b06d88fe0a5</Anchor>
    <Abstract>Calculates an MD5 hash for the given string.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Anchor>ac5870c91fc3ffdf022b7714afb4e4d63</Anchor>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gae475ee52bf8520cc51cf51b561b5de77</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga240a833f0d12f505e8151aa992c585a1</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseRootTwo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d41/namespacedsp.html</Path>
    <Anchor>a242ea887a4703b35824902729922c98b</Anchor>
    <DeclaredIn>limes_audio/util/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d41/namespacedsp.html</Path>
    <Anchor>aba42c13b1022431b2261219fe38c2ced</Anchor>
    <DeclaredIn>limes_audio/util/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dirSeparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gabea6c2fda82a1141b4fc7417dee87f14</Anchor>
    <Abstract>Returns the platform&apos;s preferred separator: \ on Windows, and / everywhere else.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filesystemIsCaseSensitive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga417867e598a5bccc6135cfe5e202356c</Anchor>
    <Abstract>Returns true if the current platform&apos;s filesystem is case-sensitive.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAvailableSpaceOnFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga4471cdb2bad95eac219a7de790f6fa33</Anchor>
    <Abstract>Returns the available space on the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSizeOfFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga281600c22db06a3e4f5b80f777f09448</Anchor>
    <Abstract>Returns the total size of the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATHseparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga6eb23d9f3a90944a56cae056d5f7f71b</Anchor>
    <Abstract>Returns the platform&apos;s separator char for the PATH environment variable: ; on Windows,...</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAvailableSpaceOnFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga4471cdb2bad95eac219a7de790f6fa33</Anchor>
    <Abstract>Returns the available space on the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSizeOfFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga281600c22db06a3e4f5b80f777f09448</Anchor>
    <Abstract>Returns the total size of the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dirSeparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gabea6c2fda82a1141b4fc7417dee87f14</Anchor>
    <Abstract>Returns the platform&apos;s preferred separator: \ on Windows, and / everywhere else.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATHseparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga6eb23d9f3a90944a56cae056d5f7f71b</Anchor>
    <Abstract>Returns the platform&apos;s separator char for the PATH environment variable: ; on Windows,...</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filesystemIsCaseSensitive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga417867e598a5bccc6135cfe5e202356c</Anchor>
    <Abstract>Returns true if the current platform&apos;s filesystem is case-sensitive.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>v4sf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>af4c9241aa2bcf285c894c58b26dde657</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>v4si</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a7929bd98d4b4a6252dd3a315fb9f2261</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>v4su</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>acb6d2cbc874da232bcc4028f436ac2fe</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a7111e52cd95baaa0b4ea1fc8778ef279</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exp_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a2a08007af13e7ac302c6d1d873e84320</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>log_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>ac6f37f6557759031e393285acecc9a66</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sin_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a437458949f05f83f70c795536f079027</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sincos_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a66ab536242d413ada93611c0129fb2dd</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>phasor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::detail</Scope>
    </TokenIdentifier>
    <Path>de/d6c/namespacevecops_1_1detail.html</Path>
    <Anchor>a5e5232ab593c761ae4a2303733e5e8cb</Anchor>
    <DeclaredIn>phasor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFlatsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga4467500c108afad942d618190665c4c3</Anchor>
    <Abstract>Returns an array of pitch class objects representing each flat in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharpsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gac7f752b25b12b2bed6e646272fd73f37</Anchor>
    <Abstract>Returns an array of PitchClass objects representing each sharp in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lowestNoteOfMidiOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gaa75a87e33982f923a3b683fdd6cfcee1</Anchor>
    <Abstract>Returns the lowest note of a given MIDI octave number (that octave&apos;s C key).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>octaveNumberOfMidiNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga7df13e0376b2c52f138dc4b30e4ce96a</Anchor>
    <Abstract>Returns the octave number of a given MIDI pitch.</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>semitonesInOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga60d2e8ced34b19c13665a49cd035eddc</Anchor>
    <Abstract>Integer constant representing the number of semitones in an octave (12).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>ae61e694ce3290aeb67e28d32740f6b64</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>afa06e11e1e03755f9f3623e0165b95a6</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>a2bdb4c20e43b6d0af5a92ff6f89f6905</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>aa98146b7302ae2ee7a8ba21c516f92e5</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga6a9e1da0d8c77f44cb0cb53b01fed2ae</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>a5cc822ef058fdc86c87fd2952a189f50</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>a3301d84627658f262038405e25d6bd40</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_BLOCK_WITH_FORCED_SEMICOLON</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac332d8954bf4665bd2c9b7788d1c81f4</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONCATENATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gabae9d06ec283c5bb111b3a0f8d1784ca</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONCATENATE_HELPER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gab2c86fde217c5394892482fdfd5abd05</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga397de153f0d2c4a307fa9e150a396a32</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d3/d53/preprocessor_8h.html</Path>
    <Anchor>acb481fd22dbb3eae9b409dfbb29fd494</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga5bf553d96012e220f7715df0a90066da</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa204cf467eb45621b139f7fbf6b0f503</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_HAS_ATTRIBUTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac33f41199d77eecdd9be85687d4184c8</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_HAS_INCLUDE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa78f05f215babe3642360840ad6d79b7</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_MAKE_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga654264c78a601e3b9f229f10ad807442</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_MAKE_STRING_HELPER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gadfce4c523a8a63eb2d6c1cc44297a1ce</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa19294b73467ee63a3601fe2ff636b8c</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga3c9f53b7d1a99a02600fdbe81a772f82</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignable_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>ga11d8ecdc58cebed16d6de2498688dd33</Anchor>
    <Abstract>A type tag representing an assignment operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constructible_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>ga52f5c8aaa88f7098451611bce93db9fc</Anchor>
    <Abstract>A type tag representing a type construction operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>gaa35d7d21058ce5a6a5f3d4c1332cacb8</Anchor>
    <Abstract>A type tag representing a copy operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>move_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>ga117a1fe1d8cdfdecb9f1c9c18bd5b354</Anchor>
    <Abstract>A type tag representing a move operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>gaa35d7d21058ce5a6a5f3d4c1332cacb8</Anchor>
    <Abstract>A type tag representing a copy operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>move_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>ga117a1fe1d8cdfdecb9f1c9c18bd5b354</Anchor>
    <Abstract>A type tag representing a move operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constructible_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>ga52f5c8aaa88f7098451611bce93db9fc</Anchor>
    <Abstract>A type tag representing a type construction operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignable_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>ga11d8ecdc58cebed16d6de2498688dd33</Anchor>
    <Abstract>A type tag representing an assignment operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_realtime_copy_safe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Anchor>aeb10caeeea2e556947271f79cec45918</Anchor>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe copy constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_realtime_move_safe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Anchor>adc41f441b0140baa937620d5910c241f</Anchor>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe move constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeCopySafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Anchor>ade3995431ab6016d4053cffddd0d2c65</Anchor>
    <Abstract>@concept RealtimeCopySafe This concept requires that a type is realtime-safe copy constructable and c...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeMoveSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Anchor>af598c41f0e03238805ceccf7da53aee4</Anchor>
    <Abstract>This concept requires that a type is realtime-safe move constructable and move assignable.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Anchor>adb15c7e72fd6eee6d9cbbadf02048743</Anchor>
    <Abstract>This concept requires that a type is realtime-safe copy constructable, copy assignable,...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Anchor>a0fe0e90915fab76ee5dcec18711ceb22</Anchor>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Anchor>aecfd625bb829beed62531a5ee2437253</Anchor>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaec09524a0a9cc79b26e87a240facbbcb</Anchor>
    <Abstract>Calculates a SHA1 hash for the given data.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafb781672efaf0f254df585afccf25cdd</Anchor>
    <Abstract>Calculates a SHA1 hash for the given string.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf310bd761cb2ea60eed063dc94a6cb3a</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaeec722719abbee6f990150f730ef1040</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gacd24c7afd31ac2e87dcd259e82a0ea89</Anchor>
    <Abstract>Calculates a SHA256 hash for the given data.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga92457f7ebfc4fae0430d496b9f251caf</Anchor>
    <Abstract>Calculates a SHA256 hash for the given string.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga8372b451a4621a1c99c2c0113512e2c2</Anchor>
    <Abstract>Calculates a SHA384 hash for the given data.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafadeb5a87633e046e82bee60fe2ed296</Anchor>
    <Abstract>Calculates a SHA384 hash for the given string.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gab0212a06ee094fda760117932208ae08</Anchor>
    <Abstract>Calculates a SHA512 hash for the given data.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga3f9a0a53e41ac8e17fa40128bd8864a0</Anchor>
    <Abstract>Calculates a SHA512 hash for the given string.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::geometry</Scope>
    </TokenIdentifier>
    <Path>d9/d9a/namespacemath_1_1geometry.html</Path>
    <Anchor>a317e9900bc8f2c083ad6d6c8fafc5df8</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::geometry</Scope>
    </TokenIdentifier>
    <Path>d9/d9a/namespacemath_1_1geometry.html</Path>
    <Anchor>a2396d30ac8dc8dc734b4aa53fb53c6e5</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALIGN16_BEG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d1/dda/sse__mathfun_8h.html</Path>
    <Anchor>a62005079e778a9c6df9d13d750230df9</Anchor>
    <DeclaredIn>sse_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALIGN16_END</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d1/dda/sse__mathfun_8h.html</Path>
    <Anchor>afca1718cc8c37930bf399e47539094bd</Anchor>
    <DeclaredIn>sse_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>v2si</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>af3b06fdb15d0a1c9d04c64ec66bd4b11</Anchor>
    <DeclaredIn>sse_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a7111e52cd95baaa0b4ea1fc8778ef279</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exp_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a2a08007af13e7ac302c6d1d873e84320</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>log_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>ac6f37f6557759031e393285acecc9a66</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sin_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a437458949f05f83f70c795536f079027</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sincos_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a66ab536242d413ada93611c0129fb2dd</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Anchor>ad584035846c172918892caa9250985a2</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Anchor>a8e55766b0cfedf720d471ab0f659bb13</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStaticObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga6379140bdddcd776d5f4ab92eb64e1bc</Anchor>
    <Abstract>This function retrieves a static object of a specified type.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_static</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>gaf83c9457a4906ef4e3d67963fb18418b</Anchor>
    <Abstract>This function forces some data to be evaluated at compile time.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropFirstChars</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a91ded74a12444e6e18c9b0720251fa61</Anchor>
    <Abstract>Removes a specified number of characters from the beginning of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropLastChars</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a8158cf75c9842b20d6b8727c4184663e</Anchor>
    <Abstract>Removes a specified number of characters from the end of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromFirstOccurrenceOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a978efbcde4c3c58ace812c788841ddf6</Anchor>
    <Abstract>Returns a copy of the passed string, beginning at the first occurrence of stringToFind .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLimesASCII</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a5c4847f86fcb8d4796c802653764509f</Anchor>
    <Abstract>Returns the Limes library ASCII logo as a string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNewline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>adca9725130e0ee777d8c0b82962b221d</Anchor>
    <Abstract>Returns the platform&apos;s preferred newline separator: \r\n on Windows, \n everywhere else.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>join</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a3d0abc87d5388e777a455d0bd7eaeb80</Anchor>
    <Abstract>Joins the input strings into one string, placing delimiter between each input string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinWithNewlines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>ace077e9ab71ba1ae1d291050ec98268a</Anchor>
    <Abstract>Joins the strings together, using the platform&apos;s preferred newline character as the token delimiter.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinWithWhitespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a944b447caa14ef2daa41c856a8b7caa5</Anchor>
    <Abstract>Joins the strings together, using a space character as the token delimiter.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a06f15b073d051461804970c0570b83e4</Anchor>
    <Abstract>Returns the length of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printLimesASCII</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>af6bd4c9f670460dac73a6e8fd017fb0f</Anchor>
    <Abstract>Prints the Limes library ASCII logo to std::cout.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quoted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a97d1b1e05002b566f1e7149385b40262</Anchor>
    <Abstract>Adds &quot; characters to the beginning and end of the string, if they aren&apos;t already there.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>split</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a502c1c0d50a8b5fd842edfce3308be33</Anchor>
    <Abstract>Takes an input string and splits it into a series of smaller strings.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitAtNewlines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a18a3031f1edaf1917cb8c694ad55537c</Anchor>
    <Abstract>Splits the input string into lines.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitAtWhitespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>aef16f0d3bd8e33e85680969dc50e22ed</Anchor>
    <Abstract>Splits the input string using whitespace characters as the delimiter, not including the whitespace in...</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toLower</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a7b43a1bc909986f23418a796a0d7c345</Anchor>
    <Abstract>Returns a copy of the string, with all its characters converted to lower case.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toUpper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>ac81b66aca13491f69a0c0a4014244887</Anchor>
    <Abstract>Returns a copy of the string, with all its characters converted to upper case.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a1670eabe3d3dbe930eeab693ad5a61ba</Anchor>
    <Abstract>Removes any whitespace characters from the beginning and end of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unquoted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a6af9fb7a1cc053fed006ca09dff9f8d9</Anchor>
    <Abstract>Removes &quot; characters from the beginning and end of the string, if they were there.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upToFirstOccurrenceOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>aa0e28328b54ff88954f6b25e8e77d382</Anchor>
    <Abstract>Returns a copy of the passed string, ending at the first occurrence of stringToFind .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gae10f4755523ad3a3d40c303df5209746</Anchor>
    <Abstract>Returns true if the two strings contain exactly the same characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gadf0591a4823b8797fdcaeab2f1fc33d8</Anchor>
    <Abstract>Returns true if the two strings are the same, regardless of the case of their characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gac664d2d7911285656b6088d0caa46571</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gabee9ff5a9ca4278f4ca7bbfce0829b6d</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gabee9ff5a9ca4278f4ca7bbfce0829b6d</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gae10f4755523ad3a3d40c303df5209746</Anchor>
    <Abstract>Returns true if the two strings contain exactly the same characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gadf0591a4823b8797fdcaeab2f1fc33d8</Anchor>
    <Abstract>Returns true if the two strings are the same, regardless of the case of their characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gac664d2d7911285656b6088d0caa46571</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>new_line</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>aebbfe58099474e9a4fb0f90f78ad2dff</Anchor>
    <Abstract>A static variable that can be referenced for convenience, instead of needing to call getNewline() .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callAndBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>ga251c922a2477a65a5ded648c4ce53e6f</Anchor>
    <Abstract>Calls a function on a background thread, blocks until the function finishes executing,...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callInBackground</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>ga94a8bdf0e635ade7c85f672ee7423c1a</Anchor>
    <Abstract>Launches a function on a background thread and returns immediately.</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumThreads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>gad36ea8a69391a84e28749452d0528c07</Anchor>
    <Abstract>Tries to detect the number of concurrent threads supported by the current hardware and implementation...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Point</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>ade0327197a2b5a9a6cec5bf4a64426bc</Anchor>
    <Abstract>Convenience typedef for a time point.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>a0e90e4ba487985ed0263ee88f594bd8d</Anchor>
    <Abstract>Convenience typedef for the system clock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertClockTimePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>a5afe949cfbd908ea08a81491b5f88997</Anchor>
    <Abstract>Converts a time point on one clock to a time point on another clock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>a7859c167538c8ab37cc0736214b0c660</Anchor>
    <Abstract>Converts a std::time_t object to a time point on the given Clock type.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>aabe108664765a936b376d4d324f68f5e</Anchor>
    <Abstract>Converts a std::tm object to a time point on the given Clock type.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toSystemTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>a6bca95a102f58cf7c9fd1b393c368c79</Anchor>
    <Abstract>Converts a time point on any Clock type to a time point on the SystemClock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>ac979c7ad7b70f0f4a29229d891fc466a</Anchor>
    <Abstract>Converts a time point on any Clock type to a std::tm object.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>a4b0bf40dc380c9a5f65d90e15a8471cf</Anchor>
    <Abstract>@concept Clock The same as std::is_clock_v, only implemented here because the standard library concep...</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gae9137d0122fa88934aef2a4634925854</Anchor>
    <Abstract>A utility typedef for an empty TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_type_list_from_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga115a8d3a6dd7fd06dfb451e18dc7a82c</Anchor>
    <Abstract>Creates a typelist from the template arguments of a template type.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_typelist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gab6aec098859f26d48fdae64b7721ef3d</Anchor>
    <Abstract>True if the specified type is a specialization of TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_type_list_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d8/db6/namespacemeta.html</Path>
    <Anchor>a2ea10f17ade21c08af8c3cadc0dcac9b</Anchor>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga1970162982459d4ff86837ef09bf2c3a</Anchor>
    <Abstract>@concept type_list</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_from_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a3057d87f2af05b7be9837a274bd6143d</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a3e3690b617525f94f0dc0f60ef1d664f</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIfAbsent_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>adfb3e14124bdf47f747f776dd04f8a37</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>aac035a339a1dc7061c6d9fc466a28ddd</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>common_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ae153376f3b013aa49521f6ba7f3f5b5d</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_first_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a63a4448ac0ecb85b13cf04e39d3f7d88</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_last_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ac3f307a6566248037e12ed3f791d3c59</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>aa160203bcf1a3723d15a6da6d945fe96</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_at_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a201bf723f4b50b7568cf11eedd0da2c7</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>not_in_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>af5ccc3dd87e82647b88028d44d0371f7</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a217abe0bd33ddaffdd251c94c480b915</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_at_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a9ee0f2d6f565cc3b17fda3c8c2a6575a</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_duplicates_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a97ec2f9326d31756d059529ce3c2c31e</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if_not_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a8fdc46f17a2b0a4c938d2eb02d88fc81</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a63d3451c4670f41205d777107cd1a864</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_null_types_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a4cdef6ab418bd7972b6c01146894fc1b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a6eaa8a9b28e9788cc5468611461017f2</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace_at_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a94bd21a4358d822199aeb5547236fff1</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a79872e66a5120c6598b2580c2b3e9d1e</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>afad5c039d525d26ef1cd52fa9bd5718b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SizeConstant</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a497001114206df535fa717ca7cc8f55c</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_at_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ae47d638837f0a66f71a12e3d5c599d1f</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>aff4a9912702617e3d8472023c6f5298f</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a0671c219e500d1241baebb5862f4cb3b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a3c2d6aedb9899e5582b8cc429c05b88b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIfAbsent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a46df99eea489b4916b43f6a451fc1700</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>are_same_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a52470c14cec4309b4d9bd622d5d31336</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>common_with</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>afc3c2b6ff403f65f06bd45da1f737071</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_duplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a31f892dfd6c05b822c92902680f0d72c</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_duplicates_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a83e4ea9747553b878eabd093d2576589</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>aac4adf0724e816aa91cd4672a3c01397</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a94f83d653fdbfa8e2399e2f8b9d91def</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a99b7520dc5370f7ea4bfab7e37d94050</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a47946d4ad7f3822ea85a8b119d06022b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if_not_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a184a1e76bf6b2f42a908780fc3a579c4</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a9a01e7736cd8b63e7ea6fdea42e35667</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a93810c3e164eb5635dac0478aad72bd3</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>af0361816ccc45567fb665bd4ec5ecced</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>afe883be906e0d8fae84e5c8545428f07</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ac0d5d67704d5ae1b86f03eb4c0b566df</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a4a144100ba281020aa8049e9df98e3e6</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalid_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>af4b5ac8a2ff0c19b06b0f6a7176912d6</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ab8700ce8a7fb7d1363e38deb97f4405c</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_null_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gafd018480f3762b41345e04b87f360f57</Anchor>
    <Abstract>Returns true if T is a NullType .</Abstract>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>not_in</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ae228a280dc62f1becda725d2ce77710a</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>af5bb5766219457d195d8a84cebcfa953</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a48591930388cb1116b98f4d444a7e306</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_duplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ac097c461ac96b7d6e20ee11799535c5f</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ab7b0497d5573846cb9d5109b20dbfe2b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if_not</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a516e49676025f1987dbe8f1dde97cbaa</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>adb588e4338d17e720aea492d4aa68dc8</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a35e00df5d9ca812a2ad6409e14b69711</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>adccff6a219135425c9ddcd40cd76ae9f</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>same_ignoring_order_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a3d2abcd629ccb8b019e22712fae28cc0</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a10cd7f4b3899c32f53798c2c25f9585d</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ae3e3bb0906a4cb3c32c4c9cb55f240a9</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a355ed2d2a493252587bcaf8bbe920836</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga68eeb3d3bbba66a9432a45a4c775ec9f</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gaf540d4bebc4621fa4b3e745a3dae3408</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object, ending with &quot; pointer&quot;.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertible_to</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gacdb251fa2e47ba059a07793809acbf65</Anchor>
    <Abstract>@concept convertible_to Exactly the same as std::convertible_to , only implemented here because some ...</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>covariant_subtype_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga746c09a5c6a4d20a262aed7f24f36848</Anchor>
    <Abstract>@concept covariant_subtype_of</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inherits_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga292aa323959c2cf1c81898824456f744</Anchor>
    <Abstract>@concept inherits_from</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_covariant_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga9c5bc8d9c87b7b65334e9ed46658df8e</Anchor>
    <Abstract>Evaluates to true if Base and Derived are covariant types; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_none_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga5d8f3624182e0de82ffcee87c74998f8</Anchor>
    <Abstract>Evaluates to true if Test is not in the list of Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_one_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga6ce960f50290d7a51e8bdc59d2ced2a3</Anchor>
    <Abstract>Evaluates to true if Test is the same as any of the types in Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_specialization_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga15b26b106b48cfa969cf4e5d413c99cf</Anchor>
    <Abstract>Evaluates to true if the given type is a specialization of the given template class; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>same_as</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga0d12e4fdee21a131b2561b8c61fd572a</Anchor>
    <Abstract>@concept same_as</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specializes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga1cef158dc43897c440f6dd045fdaef77</Anchor>
    <Abstract>@concept specializes</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertible_to</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gacdb251fa2e47ba059a07793809acbf65</Anchor>
    <Abstract>@concept convertible_to Exactly the same as std::convertible_to , only implemented here because some ...</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>same_as</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga0d12e4fdee21a131b2561b8c61fd572a</Anchor>
    <Abstract>@concept same_as</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inherits_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga292aa323959c2cf1c81898824456f744</Anchor>
    <Abstract>@concept inherits_from</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_specialization_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga15b26b106b48cfa969cf4e5d413c99cf</Anchor>
    <Abstract>Evaluates to true if the given type is a specialization of the given template class; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specializes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga1cef158dc43897c440f6dd045fdaef77</Anchor>
    <Abstract>@concept specializes</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_covariant_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga9c5bc8d9c87b7b65334e9ed46658df8e</Anchor>
    <Abstract>Evaluates to true if Base and Derived are covariant types; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>covariant_subtype_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga746c09a5c6a4d20a262aed7f24f36848</Anchor>
    <Abstract>@concept covariant_subtype_of</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_one_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga6ce960f50290d7a51e8bdc59d2ced2a3</Anchor>
    <Abstract>Evaluates to true if Test is the same as any of the types in Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_none_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga5d8f3624182e0de82ffcee87c74998f8</Anchor>
    <Abstract>Evaluates to true if Test is not in the list of Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PoolVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds</Scope>
    </TokenIdentifier>
    <Path>d3/d4e/namespaceds.html</Path>
    <Anchor>a3142f6ef83d2aad2bdb2d96d49bf6afd</Anchor>
    <DeclaredIn>vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds</Scope>
    </TokenIdentifier>
    <Path>d3/d4e/namespaceds.html</Path>
    <Anchor>a0a3bd5fbadad4a81c5f13d07b98aadcd</Anchor>
    <DeclaredIn>vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds</Scope>
    </TokenIdentifier>
    <Path>d3/d4e/namespaceds.html</Path>
    <Anchor>a8460838eef5bd70737ec1aadb28b4b8d</Anchor>
    <DeclaredIn>vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds</Scope>
    </TokenIdentifier>
    <Path>d3/d4e/namespaceds.html</Path>
    <Anchor>a813f9ca146f6e29fde2f5d40bf2bb870</Anchor>
    <DeclaredIn>vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_libs_limes_audio_README</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>dd/de3/md_libs_limes_audio__r_e_a_d_m_e.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_libs_limes_core_README</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>db/d97/md_libs_limes_core__r_e_a_d_m_e.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_libs_limes_data_structures_README</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>d1/db4/md_libs_limes_data_structures__r_e_a_d_m_e.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_libs_limes_locale_README</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>d6/d07/md_libs_limes_locale__r_e_a_d_m_e.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_libs_limes_midi_README</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>d8/da8/md_libs_limes_midi__r_e_a_d_m_e.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_libs_limes_music_README</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>dd/d73/md_libs_limes_music__r_e_a_d_m_e.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_libs_limes_vecops_README</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>d0/dfb/md_libs_limes_vecops__r_e_a_d_m_e.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>d4/df6/test.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d1/dbd/group__limes.html</Path>
    <Abstract>The Limes library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lemons_psola</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d6/d74/group__lemons__psola.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lemons_psola_analysis</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>df/d40/group__lemons__psola__analysis.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>files</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Abstract>Utilities for working with the filesystem.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExecutablePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga60f08b0e2e66b004beac62e8edb85765</Anchor>
    <Abstract>Returns the path of the current executable, as a string.</Abstract>
    <DeclaredIn>exec_location.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModulePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gaff709ef716d9a2d98819bd95a56b6ade</Anchor>
    <Abstract>Returns the path of the current module, as a string.</Abstract>
    <DeclaredIn>exec_location.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAvailableSpaceOnFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga4471cdb2bad95eac219a7de790f6fa33</Anchor>
    <Abstract>Returns the available space on the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSizeOfFilesystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga281600c22db06a3e4f5b80f777f09448</Anchor>
    <Abstract>Returns the total size of the filesystem, in bytes.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dirSeparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gabea6c2fda82a1141b4fc7417dee87f14</Anchor>
    <Abstract>Returns the platform&apos;s preferred separator: \ on Windows, and / everywhere else.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATHseparator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga6eb23d9f3a90944a56cae056d5f7f71b</Anchor>
    <Abstract>Returns the platform&apos;s separator char for the PATH environment variable: ; on Windows,...</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filesystemIsCaseSensitive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga417867e598a5bccc6135cfe5e202356c</Anchor>
    <Abstract>Returns true if the current platform&apos;s filesystem is case-sensitive.</Abstract>
    <DeclaredIn>limes_core/files/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashes</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Abstract>Cryptographic hash functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga4598ffcc4268a107b17fccc0d7ca0ec1</Anchor>
    <Abstract>Calculates an MD5 hash for the given data.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf105596223e1d9106a443b06d88fe0a5</Anchor>
    <Abstract>Calculates an MD5 hash for the given string.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaec09524a0a9cc79b26e87a240facbbcb</Anchor>
    <Abstract>Calculates a SHA1 hash for the given data.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafb781672efaf0f254df585afccf25cdd</Anchor>
    <Abstract>Calculates a SHA1 hash for the given string.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf310bd761cb2ea60eed063dc94a6cb3a</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaeec722719abbee6f990150f730ef1040</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gacd24c7afd31ac2e87dcd259e82a0ea89</Anchor>
    <Abstract>Calculates a SHA256 hash for the given data.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga92457f7ebfc4fae0430d496b9f251caf</Anchor>
    <Abstract>Calculates a SHA256 hash for the given string.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga8372b451a4621a1c99c2c0113512e2c2</Anchor>
    <Abstract>Calculates a SHA384 hash for the given data.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafadeb5a87633e046e82bee60fe2ed296</Anchor>
    <Abstract>Calculates a SHA384 hash for the given string.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gab0212a06ee094fda760117932208ae08</Anchor>
    <Abstract>Calculates a SHA512 hash for the given data.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga3f9a0a53e41ac8e17fa40128bd8864a0</Anchor>
    <Abstract>Calculates a SHA512 hash for the given string.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHasherForType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga93880e4516879865db6f778fbe52858e</Anchor>
    <Abstract>Creates an appropriate Hasher for the given Type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga77f8b860e06068de15d1b5884ffffe7e</Anchor>
    <Abstract>Calculates a hash value for the input data using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf2f7e434e212f85cd74b50d6a2aa5b03</Anchor>
    <Abstract>Calculates a hash value for the input string using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ggadd3ce0ac3d3c8404d1b002ab4e064db9a1bc29b36f623ba82aaf6724fd3b16718</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ggadd3ce0ac3d3c8404d1b002ab4e064db9a74a89174426b40307102e165374ab8ab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ggadd3ce0ac3d3c8404d1b002ab4e064db9a492d7a5fe8a3d874ff236ec4a4b52c63</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ggadd3ce0ac3d3c8404d1b002ab4e064db9ad8d8a6d2e9e1fb99302b479a8fe540d4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ggadd3ce0ac3d3c8404d1b002ab4e064db9a23b1f23465cc48415b07c3da88c88103</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ggadd3ce0ac3d3c8404d1b002ab4e064db9a79521051c5c4526354393a974d561458</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_core</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>da/d07/group__limes__core.html</Path>
    <Abstract>The Limes core library of utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_BEGIN_NAMESPACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>da/d07/group__limes__core.html</Path>
    <Anchor>ga41a58aa43a02cea437cc98ee291c3a2c</Anchor>
    <DeclaredIn>limes_namespace.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_END_NAMESPACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>da/d07/group__limes__core.html</Path>
    <Anchor>ga7ea42681efe61fc798589260810ad784</Anchor>
    <DeclaredIn>limes_namespace.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>geometry</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/dba/group__geometry.html</Path>
    <Abstract>Classes representing geometric shapes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoDgeometry</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d7/dcd/group___two_dgeometry.html</Path>
    <Abstract>Two-dimensional geometric shapes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreeDgeometry</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/d2a/group___three_dgeometry.html</Path>
    <Abstract>Three-dimensional geometric shapes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>core_math</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Abstract>Math utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga85112aca5e58028e5a710f98adde3f40</Anchor>
    <Abstract>@concept Scalar A scalar type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga04e106b35afcdef6a145a5db35d91efa</Anchor>
    <Abstract>@concept Integral An integral type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6d262e04bc6f3646fdefa9bdb887f977</Anchor>
    <Abstract>A constexpr-enabled absolute value function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga0c049988ace901cbcc231b71ade26e9e</Anchor>
    <Abstract>A constexpr-enabled negation function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>round</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gacb9b0f8450f502b2c771ca5e5a7da212</Anchor>
    <Abstract>A constexpr-enabled rounding function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga54cdbdfc2b2002ed1b794a8e2e416e35</Anchor>
    <Abstract>A constexpr-enabled clipping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>power</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga4c562496dcd927fa763bbed87f0dbac1</Anchor>
    <Abstract>A constexpr-enabled power function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gad0e5a71d2f701efa07a804945876b122</Anchor>
    <Abstract>A constexpr-enabled mapping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPowerOf2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga2c6a4276c506b35b346e1bf5dbc04e15</Anchor>
    <Abstract>Returns true if val is 2^something.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDivisibleBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga9e117ca50dccbf636d7a04e110a08df8</Anchor>
    <Abstract>Returns true if the number is divisible by the divisor with no remainder.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberIsEven</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga548a17542294fda4e35f822965eef21d</Anchor>
    <Abstract>Returns true if the number is evenly divisible by 2.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaa7aecc12e23fb531f845fdf32f2588cf</Anchor>
    <Abstract>Returns true if the number is a prime number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factorial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8f543e20a836b53e34ff51af3c435650</Anchor>
    <Abstract>Computes the factorial of the number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>middleOfThree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga09f140aa9f0323bb7cbb299cfd4be28f</Anchor>
    <Abstract>Returns the median of three values.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>periodInSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga1a6dc5f37f6bc00737b62629958fd0ab</Anchor>
    <Abstract>Returns the period in samples of a frequency at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqFromPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6bb0f47d78ad031a40afbf364083bb43</Anchor>
    <Abstract>Returns the frequency in Hz with a given period in samples at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampsToMs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga03e0609c4a16e5500a587ca9bafe7f87</Anchor>
    <Abstract>Converts a number of samples to milliseconds at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>msToSamps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga95da7fc1fb96ae78716e0faf3b1dc0a0</Anchor>
    <Abstract>Converts a number of milliseconds to the closest integer number of samples at the specified samplerat...</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midiToFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga1d25879e95bcdc91434efb4fe91bda13</Anchor>
    <Abstract>Converts a MIDI note to a frequency in Hz.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqToMidi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaba5c165d2cb7683000726630f32ff02c</Anchor>
    <Abstract>Converts a frequency in Hz to a MIDI note.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Abstract>Utilities for memory management.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga898974242418e2b20981a737c5e82410</Anchor>
    <Abstract>Allocates the desired number of objects with the desired alignment.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga5a001535fbebdaa7499f0d95e2a5cec7</Anchor>
    <Abstract>Deallocates a pointer that was previously allocated with allocate_aligned() .</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStaticObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga6379140bdddcd776d5f4ab92eb64e1bc</Anchor>
    <Abstract>This function retrieves a static object of a specified type.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_static</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>gaf83c9457a4906ef4e3d67963fb18418b</Anchor>
    <Abstract>This function forces some data to be evaluated at compile time.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Abstract>Utilities for metaprogramming.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gae9137d0122fa88934aef2a4634925854</Anchor>
    <Abstract>A utility typedef for an empty TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_type_list_from_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga115a8d3a6dd7fd06dfb451e18dc7a82c</Anchor>
    <Abstract>Creates a typelist from the template arguments of a template type.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga68eeb3d3bbba66a9432a45a4c775ec9f</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gaf540d4bebc4621fa4b3e745a3dae3408</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object, ending with &quot; pointer&quot;.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_null_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gafd018480f3762b41345e04b87f360f57</Anchor>
    <Abstract>Returns true if T is a NullType .</Abstract>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_typelist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gab6aec098859f26d48fdae64b7721ef3d</Anchor>
    <Abstract>True if the specified type is a specialization of TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga1970162982459d4ff86837ef09bf2c3a</Anchor>
    <Abstract>@concept type_list</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertible_to</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gacdb251fa2e47ba059a07793809acbf65</Anchor>
    <Abstract>@concept convertible_to Exactly the same as std::convertible_to , only implemented here because some ...</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>same_as</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga0d12e4fdee21a131b2561b8c61fd572a</Anchor>
    <Abstract>@concept same_as</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inherits_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga292aa323959c2cf1c81898824456f744</Anchor>
    <Abstract>@concept inherits_from</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_specialization_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga15b26b106b48cfa969cf4e5d413c99cf</Anchor>
    <Abstract>Evaluates to true if the given type is a specialization of the given template class; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specializes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga1cef158dc43897c440f6dd045fdaef77</Anchor>
    <Abstract>@concept specializes</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_covariant_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga9c5bc8d9c87b7b65334e9ed46658df8e</Anchor>
    <Abstract>Evaluates to true if Base and Derived are covariant types; false otherwise.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>covariant_subtype_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga746c09a5c6a4d20a262aed7f24f36848</Anchor>
    <Abstract>@concept covariant_subtype_of</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_one_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga6ce960f50290d7a51e8bdc59d2ced2a3</Anchor>
    <Abstract>Evaluates to true if Test is the same as any of the types in Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_none_of_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga5d8f3624182e0de82ffcee87c74998f8</Anchor>
    <Abstract>Evaluates to true if Test is not in the list of Types .</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alg</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>de/d29/group__alg.html</Path>
    <Abstract>Algorithms for manipulating generic container types.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>de/d29/group__alg.html</Path>
    <Anchor>ga9280a6b61ef312c80d85e6e0b91e8a00</Anchor>
    <Abstract>@concept Container This concept requires that a type has begin() and end() functions that return iter...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>func</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Abstract>Utilities for working with higher-level functions and functions as objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga734e223214335b499b76e734d6c3771f</Anchor>
    <Abstract>This typedef evaluates to the result type returned by calling the given function with the given argum...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>call_once</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga721d87621ab2fa2ff1ab032652d0b035</Anchor>
    <Abstract>Calls the function object exactly once throughout the entire life of the program.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consteval_invoke</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>gaca5e418d69ffceeb71b3ba29e6539e3c</Anchor>
    <Abstract>Forces a given function to be executed at compile time.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>curry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga0c20c15a7d3553a54d6fc156280e9705</Anchor>
    <Abstract>Breaks down a function that takes multiple arguments into a series of functions that each take one ar...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>try_call</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga2c54695eb338963524e6830107685528</Anchor>
    <Abstract>Executes a potentially-throwing function within a try-catch block, and returns false if an exception ...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga3dbd7fc208fe38c48614027d7480df86</Anchor>
    <Abstract>@concept Function This concept simply requires that an object is invocable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>misc</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d1/ded/group__misc.html</Path>
    <Abstract>Miscellaneous things.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignore_unused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc</Scope>
    </TokenIdentifier>
    <Path>d1/ded/group__misc.html</Path>
    <Anchor>ga4048d6d752c40052344526e820f1d8fc</Anchor>
    <Abstract>A utility function to silence unused variable warnings.</Abstract>
    <DeclaredIn>IgnoreUnused.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>system</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Abstract>Utilities that may be OS- or compiler-specific.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_ASSERT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga06a4bfb323e9f05d2e51a72b21f40e0a</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_BLOCK_WITH_FORCED_SEMICOLON</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac332d8954bf4665bd2c9b7788d1c81f4</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_COMPILER_MESSAGE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga5577fed1a9e9f17571205093a090b490</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_COMPILER_WARNING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga2db625c65f80ef77802a5f764aebff50</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONCATENATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gabae9d06ec283c5bb111b3a0f8d1784ca</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONCATENATE_HELPER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gab2c86fde217c5394892482fdfd5abd05</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga397de153f0d2c4a307fa9e150a396a32</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga5bf553d96012e220f7715df0a90066da</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa204cf467eb45621b139f7fbf6b0f503</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DISABLE_ALL_COMPILER_WARNINGS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac9aaa41f09c0bdac5928138eeb9adb24</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_FORCE_INLINE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga16865b999504e0621f83caecfec93bcc</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_HAS_ATTRIBUTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gac33f41199d77eecdd9be85687d4184c8</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_HAS_INCLUDE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa78f05f215babe3642360840ad6d79b7</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_MAKE_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga654264c78a601e3b9f229f10ad807442</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_MAKE_STRING_HELPER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gadfce4c523a8a63eb2d6c1cc44297a1ce</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NEVER_INLINE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga7bb6ffa325bf2b2ba5d63d565a98aaff</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gaa19294b73467ee63a3601fe2ff636b8c</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga3c9f53b7d1a99a02600fdbe81a772f82</Anchor>
    <DeclaredIn>preprocessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_PACK</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga4afff37dbba8d8055ea44c9631a50140</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_PURE_FUNCTION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gabed8f597c61ed37a221c9ae8dccf9e22</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_REENABLE_ALL_COMPILER_WARNINGS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gad2a89476f519fd1fb29df89e88cb6a93</Anchor>
    <DeclaredIn>compiler_warnings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_RESTRICT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga31004f8beb1bebe164df6461882dbe88</Anchor>
    <DeclaredIn>compiler_defs.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_UNREACHABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gad16dd0041c15feb8b68d38dc707f9595</Anchor>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>breakInDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gab171a8c95463292b15f080e4af21986d</Anchor>
    <Abstract>Attempts to break into the debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fire_assertion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga94d2d989fc36228179fb43e01ba142e3</Anchor>
    <Abstract>This function is called by LIMES_ASSERT if its condition fails.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fire_assertion_internal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga85a5c42b940ee58eb06e74dfc2501edb</Anchor>
    <Abstract>The actual implementation of the assertion function.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga64329f2d07616067699dcccc702a4184</Anchor>
    <Abstract>Returns the path to the current assertion log file, if any.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunningUnderDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga3d513b70fcf4f0d72481f244cea4f31a</Anchor>
    <Abstract>Returns true if the calling process is running under a debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga2c49f64f578f6c0589dab44d41af3e2f</Anchor>
    <Abstract>Sets a filepath to be used to log assertion failures for the current process.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>text</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Abstract>Utilities for working with text and strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gabee9ff5a9ca4278f4ca7bbfce0829b6d</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gae10f4755523ad3a3d40c303df5209746</Anchor>
    <Abstract>Returns true if the two strings contain exactly the same characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gadf0591a4823b8797fdcaeab2f1fc33d8</Anchor>
    <Abstract>Returns true if the two strings are the same, regardless of the case of their characters.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areSameIgnoringCase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>d4/d61/group__text.html</Path>
    <Anchor>gac664d2d7911285656b6088d0caa46571</Anchor>
    <Abstract>Returns true if the passed string is \n or \r\n .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rt_safety</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Abstract>Metaprogramming utilities for detecting the realtime safety of certain operations on certain types.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>gaa35d7d21058ce5a6a5f3d4c1332cacb8</Anchor>
    <Abstract>A type tag representing a copy operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>move_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>ga117a1fe1d8cdfdecb9f1c9c18bd5b354</Anchor>
    <Abstract>A type tag representing a move operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constructible_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>ga52f5c8aaa88f7098451611bce93db9fc</Anchor>
    <Abstract>A type tag representing a type construction operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignable_tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>dd/d3e/group__rt__safety.html</Path>
    <Anchor>ga11d8ecdc58cebed16d6de2498688dd33</Anchor>
    <Abstract>A type tag representing an assignment operation.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Abstract>Threading utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callAndBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>ga251c922a2477a65a5ded648c4ce53e6f</Anchor>
    <Abstract>Calls a function on a background thread, blocks until the function finishes executing,...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callInBackground</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>ga94a8bdf0e635ade7c85f672ee7423c1a</Anchor>
    <Abstract>Launches a function on a background thread and returns immediately.</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumThreads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>gad36ea8a69391a84e28749452d0528c07</Anchor>
    <Abstract>Tries to detect the number of concurrent threads supported by the current hardware and implementation...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Abstract>Utilities for working with time measurements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TODO_BEFORE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaba800051fa8705e8ec3606d38586f719</Anchor>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gac7081843bdb34b01a752270b940c1d7f</Anchor>
    <Abstract>Returns the year of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga2c9831993f5c1697fa57277ea71e601c</Anchor>
    <Abstract>Returns the month of compilation, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_day</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaf8b5d86f6591fa7fe1eca0eda805ed7f</Anchor>
    <Abstract>Returns the day of the month on which this code was compiled, as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gaefbe78efb40677cccb64b22dd6a7f80f</Anchor>
    <Abstract>Returns the hour of compilation, as an integer, in 24-hour time.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_minute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>ga091625fe6e395acd0fee1486fd9c1263</Anchor>
    <Abstract>Returns the minute of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build_second</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d9/d7d/group__time.html</Path>
    <Anchor>gafa1aefe1ad592cec39fa26b653415017</Anchor>
    <Abstract>Returns the second of compilation as an integer.</Abstract>
    <DeclaredIn>build_date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loc_country</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Abstract>Utilities for working with different countries.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllCountries</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga262099b4b3f19c978f7b41e80a6e6b80</Anchor>
    <Abstract>Returns a vector of all known Country objects.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>gaab2be6b035e835729dd69bf96b645ce6</Anchor>
    <Abstract>Returns the Country object representing the given ISO country code.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga6d6478b3f2a31fa30dd3a97860411b95</Anchor>
    <Abstract>Returns the Country object representing the country with the given name.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loc_lang</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Abstract>Utilities for working with spoken human languages.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllKnownLanguages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gae47ba49b20a945e9d925d71610c1183e</Anchor>
    <Abstract>Returns all known Language objects in Limes&apos;s internal database.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gace306aa0dfcae7ac36db5bd2047e664a</Anchor>
    <Abstract>Returns the Language object representing the language with the given name.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguageForCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gae2a4889b42da4f8cc121814805e3b775</Anchor>
    <Abstract>Returns the Language object representing the given ISO language code.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguagesForCountry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga5a9ca617c05af633b214fe6043698e6e</Anchor>
    <Abstract>Returns a vector of Language objects representing languages that may be spoken in the given country.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_locale</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dd/d74/group__limes__locale.html</Path>
    <Abstract>The Limes library of localization utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_midi</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d1/d3f/group__limes__midi.html</Path>
    <Abstract>The Limes library of MIDI utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music_intervals</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Abstract>Utilities for working with musical pitch intervals.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga50eed5c23df17b2d8a0278bf5510c874</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gae475ee52bf8520cc51cf51b561b5de77</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga19945e87ea06553681a3dee33bbdb848</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga240a833f0d12f505e8151aa992c585a1</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music_harmony</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Abstract>Utilities for working with pitch and harmony related music theory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>semitonesInOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga60d2e8ced34b19c13665a49cd035eddc</Anchor>
    <Abstract>Integer constant representing the number of semitones in an octave (12).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>octaveNumberOfMidiNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga7df13e0376b2c52f138dc4b30e4ce96a</Anchor>
    <Abstract>Returns the octave number of a given MIDI pitch.</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lowestNoteOfMidiOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gaa75a87e33982f923a3b683fdd6cfcee1</Anchor>
    <Abstract>Returns the lowest note of a given MIDI octave number (that octave&apos;s C key).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharpsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gac7f752b25b12b2bed6e646272fd73f37</Anchor>
    <Abstract>Returns an array of PitchClass objects representing each sharp in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFlatsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga4467500c108afad942d618190665c4c3</Anchor>
    <Abstract>Returns an array of pitch class objects representing each flat in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music_scales</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dc/dab/group__music__scales.html</Path>
    <Abstract>Utilities for working with musical scales.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_music</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d6/dfd/group__limes__music.html</Path>
    <Abstract>The Limes library of music theory utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music_rhythm</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/d76/group__music__rhythm.html</Path>
    <Abstract>Utilities for working with rhythm and musical durations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fft</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Abstract>Fourier transform utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_HEADER_NAME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gaf0f842cd586876ba9d1b4872b1bb4f08</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_FFTW</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga25d4ef2f45323ffac2004347580d93a3</Anchor>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFFTW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gabc139fd4c1c00c51c71537b1e58ca558</Anchor>
    <Abstract>Returns true if the FFTW FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga048a1b789b50c9a8e50c59295b20fcbb</Anchor>
    <Abstract>Returns true if the Apple vDSP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga17c517cc47213674d63e231f21ea4e84</Anchor>
    <Abstract>Returns true if the Intel IPP FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga238d72437257830eeafcd7b56e527711</Anchor>
    <Abstract>Returns true if the fallback FFT implementation is being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga17cea7c21dc36ac136f4d29740f44915</Anchor>
    <Abstract>Returns a string literal with the name of the FFT implementation being used.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga19ed4b21c8b71c04ea11c3c1e352d3f9</Anchor>
    <Abstract>Sets the directory that FFTW wisdom files will be read from and saved to.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWisdomFileDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga6d9d6e8f66a7bdc8f78dc15dd589001a</Anchor>
    <Abstract>Returns the directory being used to save and load FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>gab90597bb127479bf13f5bef248f45364</Anchor>
    <Abstract>Enables or disables loading and saving of FFTW wisdom files.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingWisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>dc/db6/group__fft.html</Path>
    <Anchor>ga37c9ecf1af20cdb4a4136daf487222ad</Anchor>
    <Abstract>Returns true if loading and saving of FFTW wisdom files is enabled.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_pommier</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d5/d50/group__vec__pommier.html</Path>
    <Abstract>Pommier SIMD extension functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limes_vecops</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Abstract>The Limes vector operations library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_IPP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaaf4e6c2cb5282672fc67747a8e1f550f</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_MIPP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga70b144652ef1412e204a8d4e9c66fef8</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_POMMIER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gacc1d8c1c278a0ac62eef8c5595503a5a</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_VECOPS_USE_VDSP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga5798e2e410bb607a38b777b0f8e7fafa</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>magphase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::detail</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaea1c6b1db57e3b52fa898c094c459b52</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga177ea20de535bfda12beca6b44b48fe1</Anchor>
    <Abstract>Fills the vector with the specified value.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga70b8f5e93e6b1eb79293b92de389c937</Anchor>
    <Abstract>Fills the vector with zeroes.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga1f81216b2b4764456c3153e839add0e9</Anchor>
    <Abstract>Copies from one vector to another.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaa206203c13d3601762cb667758b3fafc</Anchor>
    <Abstract>Swaps the elements of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gada8cae1f0fbf8db713e5e5b89dba8ee8</Anchor>
    <Abstract>@concept Scalar Any scalar type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga501c0a016f50af88ace6897813709129</Anchor>
    <Abstract>@concept Integral Any integral type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga5e307f914b980a4e372a91bb46d366ab</Anchor>
    <Abstract>Fills the vector with the specified value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga930277c1a7baf15cad3cea81282f76b5</Anchor>
    <Abstract>Fills the vector with zeroes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga40ad5c8779f7e96372e87c5fa7889775</Anchor>
    <Abstract>Copies from one vector to another.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga058e37a32a17e5b0f4fd908d8aec7438</Anchor>
    <Abstract>Swaps the elements of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_arithmetic</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Abstract>Basic arithmetic operations on vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>gabf5bc3245e278b1fdb5f34e0f8f3d7ff</Anchor>
    <Abstract>Replaces each value in the vector with its reciprocal.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>gaf76afdef7ef541840f56156737ccfb2e</Anchor>
    <Abstract>Writes the reciprocal of each value in the input vector to an output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>ga5645cd63680c6e5a6974ce985d78627b</Anchor>
    <Abstract>Replaces each value in the vector with its reciprocal.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/dce/group__vec__arithmetic.html</Path>
    <Anchor>ga6389e1ce8e42772417714ab657ff4aa8</Anchor>
    <Abstract>Writes the reciprocal of each value in the input vector to an output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_addition</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Abstract>Vector addition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gab426aa23beb06f892e1fed4bac71f935</Anchor>
    <Abstract>Adds a constant to every element of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gaf6b0f305d3d109d77b58d0d94ef12d0f</Anchor>
    <Abstract>Element-wise addition of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga10a9cceea88bd06667f1392079c75a41</Anchor>
    <Abstract>Adds a constant to every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gac3372bc013c5c835c9807223f962146a</Anchor>
    <Abstract>Element-wise addition of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga236730b5b58cb80db4109405a1b5ef58</Anchor>
    <Abstract>Adds a constant to every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>gabc7a4ff08b667467085425638bea75eb</Anchor>
    <Abstract>Element-wise addition of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga6d34827af7d41998b391a3e67fca4d46</Anchor>
    <Abstract>Adds a constant to every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d8/da6/group__vec__addition.html</Path>
    <Anchor>ga54fc8ebf2e9c289ec63f815dbac07d9d</Anchor>
    <Abstract>Element-wise addition of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_subtraction</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Abstract>Vector subtraction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga73174bdcee6e1e16a4e5ade63086114e</Anchor>
    <Abstract>Subtracts a constant from every element of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gaaa07e98dc218a994654b16f2bbbb87cc</Anchor>
    <Abstract>Element-wise subtraction of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga615a4ea492b1dd785bfd81e3be6ee25c</Anchor>
    <Abstract>Subtracts a constant from every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga8b9aa8478ac6c2039dec4313cda7bada</Anchor>
    <Abstract>Element-wise subtraction of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gaef0e37304279bd19832ee5ef4c94ecef</Anchor>
    <Abstract>Subtracts every element of a vector from a constant.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga366d18089d0a020acfd0da7ce3ee70d9</Anchor>
    <Abstract>Subtracts every element of a vector from a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga2f2262dccf987936d63477419b88efe9</Anchor>
    <Abstract>Subtracts a constant from every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga4955c40ee5fd873f489f044fafbc0d5d</Anchor>
    <Abstract>Element-wise subtraction of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga3700ecee30f29699a83a7581bdb52e3c</Anchor>
    <Abstract>Subtracts a constant from every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga0f82bd4b82485db5d242914683bb61ac</Anchor>
    <Abstract>Element-wise subtraction of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>gaaf58a77448f3fa791c004a782aa9dd81</Anchor>
    <Abstract>Subtracts every element of a vector from a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d1b/group__vec__subtraction.html</Path>
    <Anchor>ga3ae931b13b98e3c09f7f64a9e7ec5a2c</Anchor>
    <Abstract>Subtracts every element of a vector from a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_multiplication</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Abstract>Vector multiplication.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga002f3972dd3bc6fca3b4402b7e2291c8</Anchor>
    <Abstract>Multiplies every element of a vector by a constant.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gafd7095e06dfa938934bd87df2405acea</Anchor>
    <Abstract>Element-wise multiplication of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga5c08e3a71baa8f8ffe42e65cbe3854b4</Anchor>
    <Abstract>Multiplies every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga84a322147913b917944563f9d88b609a</Anchor>
    <Abstract>Element-wise multiplication of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gaa93346daef9468088b0f5ed76c726041</Anchor>
    <Abstract>Computes the dot product of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gaef9fe10c7d98a138c6fec14096b87c4f</Anchor>
    <Abstract>Multiplies every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga3226554923c75524fa63d02845783141</Anchor>
    <Abstract>Element-wise multiplication of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>gaec8c443b22bdbe7c3db3a160fd54a48e</Anchor>
    <Abstract>Multiplies every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga21f9f718a1b835dfe1d645f4f9d9323f</Anchor>
    <Abstract>Element-wise multiplication of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d5e/group__vec__multiplication.html</Path>
    <Anchor>ga3651c6c09d21235cd012207b70a893b3</Anchor>
    <Abstract>Computes the dot product of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_division</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Abstract>Vector division.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga1b89baa753deab36f0ea8d9a6521279e</Anchor>
    <Abstract>Divides every element of a vector by a constant.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gadd29ffc235dab62c3978d12a79763cc0</Anchor>
    <Abstract>Element-wise division of two vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gacc2e3af27bf26d290570ec315d401707</Anchor>
    <Abstract>Divides every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga06d6bb9ab0a8150273e5a22a89715878</Anchor>
    <Abstract>Element-wise division of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gaf530330ec64ec1ee5b761a8427a31de4</Anchor>
    <Abstract>Divides a constant by every element of a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gac7101807d4c267d15a49ad1dc110a3f7</Anchor>
    <Abstract>Divides a constant by every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga1dc6405e4146d70bdd34824a574f06e9</Anchor>
    <Abstract>Divides every element of a vector by a constant.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gaa4a5318c71f53c1f44c4a822d6d01db4</Anchor>
    <Abstract>Element-wise division of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga8eee2736dd660d8eaf2b7aa7fa84a72a</Anchor>
    <Abstract>Divides every element of a vector by a constant, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga34933df0e4c2708e2aae5d840abb03d2</Anchor>
    <Abstract>Element-wise division of two vectors, writing the output to a third vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>gafe3e8c0a349ad7f4c1e4ffb8de86d9f7</Anchor>
    <Abstract>Divides a constant by every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideInvAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dc8/group__vec__division.html</Path>
    <Anchor>ga893772bd0b2ab1dd92aceddf06bb7c32</Anchor>
    <Abstract>Divides a constant by every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_squaring</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Abstract>Squaring and square root functions on vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gab7b9bd774cf7bc7d5412a6fb7b48f00d</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gae87a63f829aff9b9b0660ddfd49a4468</Anchor>
    <Abstract>Squares every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga3f2bd758e0c77f043052585117d8e998</Anchor>
    <Abstract>Replaces every element in the vector with its square root.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga4d4e9bad9d6819dc75cdd452d3c557ee</Anchor>
    <Abstract>Writes the square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quake3_fast_inv_sqrt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaac42db7f643b436bcf40b47f87121d0f</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga0ed7046b8993dd9e35d179e756862e3e</Anchor>
    <Abstract>Replaces every element in the vector with its inverse square root.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga06733755d44e3b54f4e352075b2d8e99</Anchor>
    <Abstract>Writes the inverse square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gaefd29a6cbea9c17c8f140fcafc0d3ffb</Anchor>
    <Abstract>Replaces every element in the vector with its cube root.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gafdb9426b4c6d801bc893da4587f0b319</Anchor>
    <Abstract>Writes the cube root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga8c23ba931fcc4b1939a6adf8e064f806</Anchor>
    <Abstract>Squares every element of a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga84321b15daa61e99bff9c90e04f538be</Anchor>
    <Abstract>Squares every element of a vector, writing the output to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga32029e6c6600295088165a4cf80fa46e</Anchor>
    <Abstract>Replaces every element in the vector with its square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>squareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>gade8e878085d8840a3b47540f8c46b89f</Anchor>
    <Abstract>Writes the square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga80888e96e6a1d2a8effbd788cf866da4</Anchor>
    <Abstract>Replaces every element in the vector with its inverse square root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invSquareRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga55b527f9ebf789195e30604180b5dc35</Anchor>
    <Abstract>Writes the inverse square root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga923e6bc39aa8d95a8544f499fc5aca0d</Anchor>
    <Abstract>Replaces every element in the vector with its cube root.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cubeRootAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d2/d25/group__vec__squaring.html</Path>
    <Anchor>ga8567e5469e2530bb15c29b5a7127a1b4</Anchor>
    <Abstract>Writes the cube root of every element in the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_sorting</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Abstract>Sorting and ordering functions on vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga4d7b31bfdfb1f0562a4c225b4dc2473d</Anchor>
    <Abstract>Reverses a vector in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga967f13e210604f26b9f3f82f30c2bcea</Anchor>
    <Abstract>Writes a reversed version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga85e960f77f2038580b86978e22efc22f</Anchor>
    <Abstract>Sorts a vector in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gaba1ec523bad1976e75425116acce0b41</Anchor>
    <Abstract>Writes a sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga1fe779f7a9d73092476b44a898458b3e</Anchor>
    <Abstract>Sorts a vector in reverse order in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gafaebbdff7339850f3c21f3d2c5d2c402</Anchor>
    <Abstract>Writes a reverse sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gab47d10f92ce1c4d7fed2c8c2f1100c5f</Anchor>
    <Abstract>Interleaves multichannel data into a single output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga1440c6e68d1108a65cc505365dc102ec</Anchor>
    <Abstract>Deinterleaves single channel data into multiple output vectors.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga02463907aabd8eb452744552531f90e4</Anchor>
    <Abstract>Reverses a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gaaacab2960517de86aa4c72bf1aad59e3</Anchor>
    <Abstract>Writes a reversed version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga6ee272a6f2943645a2f6131dce8a78da</Anchor>
    <Abstract>Sorts a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga91b84655fb58e962fc92f44ce7d1089e</Anchor>
    <Abstract>Writes a sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gad020ceb892c3eace839d6eabfab76608</Anchor>
    <Abstract>Sorts a vector in reverse order in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sortReverseAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gad3b2ca0b23cca75bec385fd95b6bcff4</Anchor>
    <Abstract>Writes a reverse sorted version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>ga4deb61bd8fcff15bb624875cc38a483f</Anchor>
    <Abstract>Interleaves multichannel data into a single output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d58/group__vec__sorting.html</Path>
    <Anchor>gae5d0820b0e96989fcce9f3f26f38e1fe</Anchor>
    <Abstract>Deinterleaves single channel data into multiple output vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_stats</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Abstract>Statistical functions on vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaf26fedfd395fde4f4660ec71f8de4e4b</Anchor>
    <Abstract>Replaces each element of the vector with its absolute value.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>absAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1788065bd49a8332e4e7cddbe43efb71</Anchor>
    <Abstract>Writes the absolute value of each element of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga0c47411309e066a30abc8277160093ad</Anchor>
    <Abstract>Flips the sign of every element of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negateAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga43493cc760edb7487ef47c3c4ba71e66</Anchor>
    <Abstract>Writes the negation of every element of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaef1b9622a91bdfd9ad732a5cf3ccd09e</Anchor>
    <Abstract>Clips every element of a vector in-place.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga725830394b5fdae7c9b2619fb5f6f831</Anchor>
    <Abstract>Writes a clipped version of the original vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga908e2b3c6bed10cd0f9ae3d3258aaaf7</Anchor>
    <Abstract>Returns the maximum element in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga6fd4f9074beb93e3ba5f43ec0e53daa9</Anchor>
    <Abstract>Finds the maximum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga8b0fa2e7182e68b32c6c52fb1ffa2e0a</Anchor>
    <Abstract>Returns the maximum absolute value in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga45a110950118106c6cfa463072381189</Anchor>
    <Abstract>Finds the maximum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga692bf45b3f655d802d4a818a85354b16</Anchor>
    <Abstract>Returns the minimum element in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaac443a21e11c258bd0c2117ef3bb4517</Anchor>
    <Abstract>Finds the minimum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gab15272637001f2fd69c290ea0e181410</Anchor>
    <Abstract>Returns the minimum absolute value in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1cb87029f51eecbaf1c6354925fd9510</Anchor>
    <Abstract>Finds the minimum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaae354cae92344334ea196b5c806922a0</Anchor>
    <Abstract>Finds both the minimum and maximum values in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga16ff452b40eaa3cbc8bbe56471436232</Anchor>
    <Abstract>Finds the minimum and maximum values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga6036620d9aa18f2ebea69745089693cb</Anchor>
    <Abstract>Finds both the minimum and maximum absolute values in a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gadde26b71ce44942c5659dc53a34a32eb</Anchor>
    <Abstract>Returns the sum of all the values in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gaa2e5f6b6ba0dae131ca0ed331bea8cf5</Anchor>
    <Abstract>Returns the mean of the values in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>standard_deviation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gab47c2a87d76a88141c9da54e14e7b23f</Anchor>
    <Abstract>Returns the standard deviation of the values in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga74bfc4caf2e8167ca6960fe9acf2c214</Anchor>
    <Abstract>Replaces each element of the vector with its absolute value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>absAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga857ac5f8f89b743a2687cd965dbcc98a</Anchor>
    <Abstract>Writes the absolute value of each element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gac77b0debd98c1a5818ab4e64d8a7d55f</Anchor>
    <Abstract>Flips the sign of every element of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negateAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga0d03f252a7f4e2f74134cb6bbd6fa756</Anchor>
    <Abstract>Writes the negation of every element of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gafdc25a5841b9817c11e352b76a7a1605</Anchor>
    <Abstract>Clips every element of a vector in-place.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga1700a43b802f3ad832622ca8a1c9727f</Anchor>
    <Abstract>Writes a clipped version of the original vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga75cf069da9162bb3e3e019d7325c4286</Anchor>
    <Abstract>Returns the sum of all the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>gab5139f2858fb69eb2ac615991ac5584e</Anchor>
    <Abstract>Returns the mean of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>standard_deviation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d70/group__vec__stats.html</Path>
    <Anchor>ga327cf469950778c5293615e37eb0f447</Anchor>
    <Abstract>Returns the standard deviation of the values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_extrema</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Abstract>Extrema calculation functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga2b9ca98d48877ea7a09777202711fd14</Anchor>
    <Abstract>Returns the maximum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gab7fbdda1d58f33cb333944be0ea90872</Anchor>
    <Abstract>Finds the maximum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga255d7088efb599876e02b7b8abd2a996</Anchor>
    <Abstract>Returns the maximum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga8fa776a377b6164dae4889cc89253bbd</Anchor>
    <Abstract>Finds the maximum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gac850b880c9ee8106321198dda9dfc89d</Anchor>
    <Abstract>Returns the minimum element in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga887ed86c17a7996c351461192bd819aa</Anchor>
    <Abstract>Finds the minimum element in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga80feb4cd44aa34ee6ddab2ad51ae7250</Anchor>
    <Abstract>Returns the minimum absolute value in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>gaf8a064acc4a5f97b2e98110cc2ceaae2</Anchor>
    <Abstract>Finds the minimum absolute value in a vector and its index in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga5c8cb588f17f928a0979c3aed56c5993</Anchor>
    <Abstract>Finds both the minimum and maximum values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga3a2a10d9d0997de372a32ef19e01d68e</Anchor>
    <Abstract>Finds the minimum and maximum values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga7d1b7e77fcb133947b6bb048405904e1</Anchor>
    <Abstract>Finds both the minimum and maximum absolute values in a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minMaxAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga4ab5258f412dc03cade0fb58c510a972</Anchor>
    <Abstract>Finds the minimum and maximum absolute values in a vector, and their indices in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga1131ff9a6c22f93bf86efe856979eb8d</Anchor>
    <Abstract>Returns the difference between the maximum and minimum values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rangeAbs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/d65/group__vec__extrema.html</Path>
    <Anchor>ga74bdbe1d40199c226e1fec132b2e5ec3</Anchor>
    <Abstract>Returns the difference between the maximum and minimum absolute values in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_trig</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Abstract>Trigonometric functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga6a9e1da0d8c77f44cb0cb53b01fed2ae</Anchor>
    <Abstract>Simultaneously computes the sin and cosine of every value in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga4b00213256c36d9c42e8f60090d05841</Anchor>
    <Abstract>Simultaneously computes the sin and cosine of every value in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_sin</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Abstract>Sine and arcsine functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gaa4b6dd046241ae61010b3ded17f60017</Anchor>
    <Abstract>Replaces every value in the vector with its sine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga756f4bbaf104041299cd2714ebaf1a65</Anchor>
    <Abstract>Writes the sine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga63246e8ab611e62651c00307dcc5a435</Anchor>
    <Abstract>Replaces every value in the vector with its arcsine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga367ddd2723585eb00cd9dc02e2e89bf8</Anchor>
    <Abstract>Writes the arcsine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga14efdf3f20df88f266d3c644ba451be0</Anchor>
    <Abstract>Replaces every value in the vector with its sine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>ga70d8db9e6144847e686dab7bc45517c0</Anchor>
    <Abstract>Writes the sine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gae3c58be834153eb8865b31b6d44ec9a0</Anchor>
    <Abstract>Replaces every value in the vector with its arcsine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcsineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d09/group__vec__sin.html</Path>
    <Anchor>gae15618bd5f7738685e4232280264ff94</Anchor>
    <Abstract>Writes the arcsine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_cos</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Abstract>Cosine and arccosine functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gae3d397db9d7193b02da3166874d241bb</Anchor>
    <Abstract>Replaces every value in the vector with its cosine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga6446bb417be8a7d5121295cba269a2c1</Anchor>
    <Abstract>Writes the cosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gaaef9270f867375067c4cdeeae99fa3cf</Anchor>
    <Abstract>Replaces every value in the vector with its arccosine.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga4351991f6ae7c84bf7036eee67d8e78d</Anchor>
    <Abstract>Writes the arccosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gae8ffec8c97c1fb02bf8400c27beb3e1e</Anchor>
    <Abstract>Replaces every value in the vector with its cosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>gaab8687cc72b8083a69703af6ce586386</Anchor>
    <Abstract>Writes the cosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga9075633c6116bb64ea13895eb3a5dada</Anchor>
    <Abstract>Replaces every value in the vector with its arccosine.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arccosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dd/d22/group__vec__cos.html</Path>
    <Anchor>ga5013ba0e6556346fe3409f3dc1ad4cf1</Anchor>
    <Abstract>Writes the arccosine of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_tan</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Abstract>Tangent and arctangent functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gac1d5049feb37c40da1813f0d71a20d53</Anchor>
    <Abstract>Replaces every value in the vector with its tangent.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga8d634b42674022a5aa28598ff8a9a9ae</Anchor>
    <Abstract>Writes the tangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga443d7d20aaae45760eef12f357aa62e5</Anchor>
    <Abstract>Replaces every value in the vector with its arctangent.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga96fc600afccb309f7399c0395f2ede97</Anchor>
    <Abstract>Writes the arctangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga5be8d79ab028b1b93e42667eacee85ef</Anchor>
    <Abstract>Replaces every value in the vector with its tangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>gaae5ec9c1a5aa45ed11a530c7034de016</Anchor>
    <Abstract>Writes the tangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga0c6c293d12a4ab925bfc4812313bdb00</Anchor>
    <Abstract>Replaces every value in the vector with its arctangent.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arctanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/d0d/group__vec__tan.html</Path>
    <Anchor>ga96acee7d2976603c30fc1affc172f29d</Anchor>
    <Abstract>Writes the arctangent of each element of the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_log</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Abstract>Logarithmic functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gaa2e88e7d43811820fd28fa1f176f2b89</Anchor>
    <Abstract>Replaces each value in the vector with its natural logarithm.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>natAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gaf3d360a09b7480480488228bbe59bfe0</Anchor>
    <Abstract>Writes the natural logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga710ea2bcb865c54064abc78ef99162a5</Anchor>
    <Abstract>Replaces each value in the vector with its base 2 logarithm.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gaa4ea17fab0d4db24b250d6075f9bed56</Anchor>
    <Abstract>Writes the base 2 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga5272dee95882c956bcd68812f6783fe1</Anchor>
    <Abstract>Replaces each value in the vector with its base 10 logarithm.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga16ce0b291bb95f92a3e0bd451c919f06</Anchor>
    <Abstract>Writes the base 10 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga10f75ff8b8959e2ee01945d9bdbab7a5</Anchor>
    <Abstract>Replaces each value in the vector with its natural logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>natAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga2263e2ba5217fe9539dbcc7fc0dd9f0f</Anchor>
    <Abstract>Writes the natural logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>gab6713ddbc205d392b2498c45561ac427</Anchor>
    <Abstract>Replaces each value in the vector with its base 2 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base2AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga7c645b417a64572eedc43015f5b34a05</Anchor>
    <Abstract>Writes the base 2 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga2ec23b2ac119c8637b1bdea7906b4c06</Anchor>
    <Abstract>Replaces each value in the vector with its base 10 logarithm.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base10AndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>df/dc9/group__vec__log.html</Path>
    <Anchor>ga1742602a49565129cc871a58ed86fd8b</Anchor>
    <Abstract>Writes the base 10 logarithm of each value in the input vector to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_exp</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Abstract>Exponential functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga9b1fbf06980673d8d242e81ca3b35b9a</Anchor>
    <Abstract>Replaces each value in the vector with eˆvalue .</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga5b90c458ee0a58487d8802a0ea0792da</Anchor>
    <Abstract>For each value in the input vector, writes eˆvalue to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gacf25d9521d2087928a3e964ca8cf4fd0</Anchor>
    <Abstract>Replaces each value in the vector with 2ˆvalue .</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twoAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga9a3a2aaaa9cbe2ce6a8e5a52e7b076b4</Anchor>
    <Abstract>For each value in the input vector, writes 2ˆvalue to the output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga01aeb14b9e5f4d4bb52ae21ecf4606a4</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>powAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga2852abe9d8baaa4d4217528d0b4615e2</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector,...</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gaf26d13f5f8fa617ebd9d6569fc335aa5</Anchor>
    <Abstract>Replaces each value in the vector with eˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga0249d187cff7cd560bcc64fe8b660337</Anchor>
    <Abstract>For each value in the input vector, writes eˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga5b878247f5007057e31d4b2401bb1ead</Anchor>
    <Abstract>Replaces each value in the vector with 2ˆvalue .</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twoAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga0e85455bb8d4385be6476ecc678fb6f0</Anchor>
    <Abstract>For each value in the input vector, writes 2ˆvalue to the output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>gab0f9de6f680283ad1ec759c1faa728a3</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>powAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>d6/d74/group__vec__exp.html</Path>
    <Anchor>ga1138b889dc48e861460a4330d9799222</Anchor>
    <Abstract>Raises each value in the input vector to the power of the corresponding element of another vector,...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_audio</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Abstract>Audio utility functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga47d23d1b1332c20df9d953b4f7bea66d</Anchor>
    <Abstract>Mixes together multiple channels of audio into one output vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gabb6052fd16f6a2cd510915f6f6b84c24</Anchor>
    <Abstract>Calculates the RMS value of the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countZeroCrossings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga12198e7a19451411e17cfb4b5c018d54</Anchor>
    <Abstract>Counts the number of zero crossings present in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga40d2819958ed451f2e05653ba3fb1a83</Anchor>
    <Abstract>Generates a ramp of samples, starting from startValue and incrementing by a consistent value until en...</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga4f6911014c23456f0a258411e794ca46</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRampAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga93a2671df52ebd0c4929b0423bf1969f</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga3cb05a7bfe9541e878923d7fd1e158a9</Anchor>
    <Abstract>Mixes together multiple channels of audio into one output vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga8d27dd47c9fcd0cc4fd9cda84b9552b3</Anchor>
    <Abstract>Calculates the RMS value of the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countZeroCrossings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaf5fd7213b9a5bd6d68653b41a0132aaf</Anchor>
    <Abstract>Counts the number of zero crossings present in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaa5fd110a645569562ed1b0ff9571d204</Anchor>
    <Abstract>Generates a ramp of samples, starting from startValue and incrementing by a consistent value until en...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>ga6614fdbae28c320a0f6c6729fb6332d8</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRampAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/db5/group__vec__audio.html</Path>
    <Anchor>gaa101b872770f68520fdc51028fc86a76</Anchor>
    <Abstract>Applies a gain ramp to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_window</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Abstract>Windowing functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ncos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga8ab157fe4613e75312485819c047ab56</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga64805b423eab6c813c81db7fbcc3fb39</Anchor>
    <Abstract>Generates a window function of the desired type , writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga3d3edac6f20b9509c8bed6fd6187e0e3</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>gac33355d3cea76811891aaea5c449fc48</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector, writing the output sample...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Blackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ggaeeecbe62b31e7d00be7fac5232223f93ab3935d5829173f20d58fc5f0405867b9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ggaeeecbe62b31e7d00be7fac5232223f93aea72b9f0db73025c8aaedae0f7b874f8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ggaeeecbe62b31e7d00be7fac5232223f93a46cd7c18d353a946c8263515a17662f2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_blackman</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Abstract>Blackman windowing functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBlackmanSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga69fbe5e47a5fe48ef69348f3e254e30e</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga91812daaf7644a343b31a8dd578519dd</Anchor>
    <Abstract>Generates a Blackman window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga7ec3faaef22f955d5510758d6a411e21</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackmanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga5f75c64d4ba19bad84aa75a4387f7f96</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga3e484b57ffdf300079b6039e85de7898</Anchor>
    <Abstract>Generates a Blackman window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackman</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gaba364c54789e790fee311a41081fff54</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBlackmanAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>gab21f461fc0412d40d173d00727e355cc</Anchor>
    <Abstract>Applies a Blackman window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_hamm</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Abstract>Hamm (Hamming) windowing functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHammSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga0cdf0423f096eb62dedfb262fc261ed6</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gaa7fe4a5869b6f4a0d8a07a58056e4ca4</Anchor>
    <Abstract>Generates a Hamm (Hamming) window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gab16d13175c3454d0230e5367edcdd985</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHammAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga0e8a2bc8f94e35682725b5ee0464b8fe</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector, writing the output samples to another v...</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>gab41b83147aa9748b2b60ce1eb4244a9d</Anchor>
    <Abstract>Generates a Hamm (Hamming) window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHamm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga98a439d54ea7e42ceaba0e0ef8f05c6d</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHammAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga77f84cbc8e7e2ab59c09b4a7b1599bec</Anchor>
    <Abstract>Applies a Hamm (Hamming) window to the samples in the vector, writing the output samples to another v...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_hanning</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Abstract>Hanning windowing functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHanningSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga753a3c1ed50535df993aa994a3aa983f</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga475f60cb9dcd055eff11500f02848591</Anchor>
    <Abstract>Generates a Hanning window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga44e4bd2d9551f8f165689a0d201856dc</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanningAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga5145d014c50cb9137965a4e1001675af</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga1f3dd9621252650e890a6f846ee6e3ce</Anchor>
    <Abstract>Generates a Hanning window, writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga58332762474a285514e30b255be86835</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHanningAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>gad7afbe4383d3a434289bdd6d4694abc7</Anchor>
    <Abstract>Applies a Hanning window to the samples in the vector, writing the output samples to another vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_complex</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Abstract>Complex number conversion functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gad18df8e02418d073f94d1e2aed8204c1</Anchor>
    <Abstract>Converts polar data to cartesian data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga92fdd723f07976adab8b474ded89c183</Anchor>
    <Abstract>Converts polar data to interleaved cartesian data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gaccce573738b864eb3fe84e9f2cd21c05</Anchor>
    <Abstract>Converts cartesian data to polar data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catesianInterleavedToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga5dc05936ca54471be64902374c27cf26</Anchor>
    <Abstract>Converts interleaved cartesian data to polar data.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gaf94d3877ee90355657c2b046c350f8a0</Anchor>
    <Abstract>Converts cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianInterleavedToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga7e38a2dc4a126c23a36f79549c3d99bd</Anchor>
    <Abstract>Converts interleaved cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gab445f6a6f4a335e67425a0f7a56ee4c2</Anchor>
    <Abstract>Converts polar data to cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga6893000b39e9cd5f68df3b50782b782c</Anchor>
    <Abstract>Converts polar data to interleaved cartesian data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga2e1838d991aea7a17f8c155e8c217daf</Anchor>
    <Abstract>Converts cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>catesianInterleavedToPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>gae72dc85cafe4ad69f63801cc1197c07c</Anchor>
    <Abstract>Converts interleaved cartesian data to polar data.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga0df7ec7c7ff3358aec1da9fcaf901876</Anchor>
    <Abstract>Converts cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cartesianInterleavedToMagnitudes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>de/d2a/group__vec__complex.html</Path>
    <Anchor>ga4b5b41c7ed4681603518d8f98c110f97</Anchor>
    <Abstract>Converts interleaved cartesian data to polar magnitudes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_fpm</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d1/d09/group__vec__fpm.html</Path>
    <Abstract>Floating point mode functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_denormals</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Abstract>Denormalized number support utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableDenormalisedNumberSupport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>ga095c013f3d5f68405a075e4c0bcdec66</Anchor>
    <Abstract>Controls whether denormalized numbers are enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areDenormalsDisabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d0/d49/group__vec__denormals.html</Path>
    <Anchor>gaf1b063aaec395fbadd3e3a24bdbd7d3e</Anchor>
    <Abstract>Returns true if denormalized numbers are currently enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_ftz</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Abstract>Flush-to-zero support utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlushToZeroMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga455df89d2cef625f239ebd5507fea3d2</Anchor>
    <Abstract>Controls whether flush to zero mode is enabled or disabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlushToZeroEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d5/dfa/group__vec__ftz.html</Path>
    <Anchor>ga8c5fce68c3759e785f4778df27012b24</Anchor>
    <Abstract>Returns true if flush to zero mode is enabled.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec_impl</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Abstract>Implementation kind checking functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingVDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gaf183d34eeacbd6b3475b5e5a00a547ea</Anchor>
    <Abstract>Returns true if the implementation being used is Apple vDSP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga6536142f4ae3b7eb733d5446657c7304</Anchor>
    <Abstract>Returns true if the implementation being used is Intel IPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingMIPP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>gac49ec9d0f787d23c27bc51ec2cbd5bdf</Anchor>
    <Abstract>Returns true if the implementation being used is MIPP.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingFallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga467465de51d6f11e720ef4fd5e1bef4b</Anchor>
    <Abstract>Returns true if the fallback implementation is being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImplementationName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga1a21f574f3d9ec4bcff2d04b4491e364</Anchor>
    <Abstract>Returns a string literal with the name of the implementation being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingPommierExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>db/db4/group__vec__impl.html</Path>
    <Anchor>ga6e828d61bfb16fafbdaf77a03870e93d</Anchor>
    <Abstract>Returns true if the Pommier SIMD extension functions are being used.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alg</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Abstract>This namespace defines various utility algorithms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElementType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a7dccb7818bdc5ba28aaff325dd4e715c</Anchor>
    <Abstract>Handy typedef for deducing the type of the objects in a Container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IteratorType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>ab08589f26a257d13ba1e706690752d0c</Anchor>
    <Abstract>Typedef for the type returned by calling begin() or end() on a Container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Container</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>de/d29/group__alg.html</Path>
    <Anchor>ga9280a6b61ef312c80d85e6e0b91e8a00</Anchor>
    <Abstract>@concept Container This concept requires that a type has begin() and end() functions that return iter...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a8578202135800da03ad18668933fcb7a</Anchor>
    <Abstract>Fills the container with the specified value.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>ad811e97da051a2a578697084d10f0681</Anchor>
    <Abstract>Returns true if the container contains the specified value.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a2d73d5e0ebb7ce07de5de55cbe8fb94d</Anchor>
    <Abstract>Returns true if the specified predicate is met by at least one object in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a8b5e74fd10c9d3e41c0dd79d0a1b7711</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a65c3a333b7540ccefdbbd29adedf12f2</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or_default</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a787a5069c66574efe3747a4c74046325</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>aef6e921fb66d033398c60d9aa387026a</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a3f0432bba758bc38ef2b2051c656a544</Anchor>
    <Abstract>If the specified predicate is met by any object in the container, then the first object to meet the p...</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a347b3ccd19983a354d0992a4359c01c2</Anchor>
    <Abstract>Counts the number of objects in the container that meet the specified predicate.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>aea20a3c576495f7b76380ed04a28b098</Anchor>
    <Abstract>Counts the number of objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>aab87399b7732eecfc20de2f1c3b6feb7</Anchor>
    <Abstract>Reverses the objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a5926fcc8887c86f6bdb0c4671c915333</Anchor>
    <Abstract>Sorts the objects in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a83890f0559cb4afdbd69151ddb5851fc</Anchor>
    <Abstract>Sorts the container using a custom comparator.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shuffle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a50b7caffcb11cf23485bc228bfa27e4e</Anchor>
    <Abstract>Randomizes the order of the elements in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>call_both</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a6c6814ab08f80fede21d3bdddd2ce6e8</Anchor>
    <Abstract>Calls a function with corresponding pairs of elements from two containers.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a3955575ad4fce0e172c08bc3ee849d3b</Anchor>
    <Abstract>Returns the maximum value in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>aaadb9d743ac062dccd1fa8db03f8b6e0</Anchor>
    <Abstract>Returns the maximum value in the container and its index in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>adffc06b89dc20f499a540036f6c59141</Anchor>
    <Abstract>Returns the minimum value in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>aace5a83c7d44d74ccd79d5ed5a015ac6</Anchor>
    <Abstract>Returns the minimum value in the container and its index in the container.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>ad17e51dc6ca77a27c4359ce50edfb330</Anchor>
    <Abstract>Populates output by calling func with each element of input in sequence.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFromTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a757811af9ff407f689d49264b212c877</Anchor>
    <Abstract>The same as transform() , except the output container is default constructed before being populated.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enumerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>alg</Scope>
    </TokenIdentifier>
    <Path>d2/d9f/namespacealg.html</Path>
    <Anchor>a977caee9e6a4f374dbbb4589c8cfc39e</Anchor>
    <Abstract>This function allows structured bindings of iterators, similar to Python&apos;s enumerate() method.</Abstract>
    <DeclaredIn>Algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assert</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d2/dab/namespaceassert.html</Path>
    <Abstract>This namespace contains utilities for runtime assertions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fire_assertion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga94d2d989fc36228179fb43e01ba142e3</Anchor>
    <Abstract>This function is called by LIMES_ASSERT if its condition fails.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fire_assertion_internal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga85a5c42b940ee58eb06e74dfc2501edb</Anchor>
    <Abstract>The actual implementation of the assertion function.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga64329f2d07616067699dcccc702a4184</Anchor>
    <Abstract>Returns the path to the current assertion log file, if any.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAssertionLogFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>assert</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga2c49f64f578f6c0589dab44d41af3e2f</Anchor>
    <Abstract>Sets a filepath to be used to log assertion failures for the current process.</Abstract>
    <DeclaredIn>limes_assert.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>debugger</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>debugger</Scope>
    </TokenIdentifier>
    <Path>db/d4b/namespacedebugger.html</Path>
    <Abstract>This namespace contains functions related to the debugger.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>breakInDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>gab171a8c95463292b15f080e4af21986d</Anchor>
    <Abstract>Attempts to break into the debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunningUnderDebugger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>debugger</Scope>
    </TokenIdentifier>
    <Path>d4/d37/group__system.html</Path>
    <Anchor>ga3d513b70fcf4f0d72481f244cea4f31a</Anchor>
    <Abstract>Returns true if the calling process is running under a debugger.</Abstract>
    <DeclaredIn>debugger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>ds</Scope>
    </TokenIdentifier>
    <Path>d3/d4e/namespaceds.html</Path>
    <Abstract>This namespace contains some useful data structures.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PoolVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds</Scope>
    </TokenIdentifier>
    <Path>d3/d4e/namespaceds.html</Path>
    <Anchor>a3142f6ef83d2aad2bdb2d96d49bf6afd</Anchor>
    <DeclaredIn>vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds</Scope>
    </TokenIdentifier>
    <Path>d3/d4e/namespaceds.html</Path>
    <Anchor>a0a3bd5fbadad4a81c5f13d07b98aadcd</Anchor>
    <DeclaredIn>vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds</Scope>
    </TokenIdentifier>
    <Path>d3/d4e/namespaceds.html</Path>
    <Anchor>a8460838eef5bd70737ec1aadb28b4b8d</Anchor>
    <DeclaredIn>vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds</Scope>
    </TokenIdentifier>
    <Path>d3/d4e/namespaceds.html</Path>
    <Anchor>a813f9ca146f6e29fde2f5d40bf2bb870</Anchor>
    <DeclaredIn>vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::AbstractFIFO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractFIFO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a020b898759cd30bbe8392df6441a657c</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishedRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a758ea3fdf6c4e43892aa0fb13f3d5545</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishedWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a92aa589ca152dc348d9977a0ce4c2c71</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>ae9d23333ebe7e74c30eb49dc45a2e18c</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFreeSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>abdd6400ef87bd75bd50b400245646e75</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumStoredObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a1cad16619d99603adfb10e99b0303553</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>ae241203e1031873664c89d49e4ecc23a</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a99bc3ccca50cff2acf282050500e2e5a</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareToRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a1033d83941af546142f5531d38c441bc</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareToWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a730df8d6e7b20b9162217dc981067941</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a5ecd16be6d92f4d73887b14999521d38</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a3b97c730ad407a24f2775c396568be92</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a19c6865fcc03a99b36dc3a445a2e9cbe</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO</Scope>
    </TokenIdentifier>
    <Path>db/d64/classds_1_1_abstract_f_i_f_o.html</Path>
    <Anchor>a996fedfbe96565b3ca80ebb687faf9c8</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::AbstractFIFO::ScopedRead</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d4/d4f/classds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d4/d4f/classds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
    <Anchor>a68c0d4aa7c8069d749b90f42e1803689</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ScopedRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d4/d4f/classds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
    <Anchor>a0c17fcb7c8639d374f2f83a27fa7cb3d</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>for_each</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d4/d4f/classds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
    <Anchor>a4f2a4d9894d7da62b4b4c2b15016bb58</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d4/d4f/classds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
    <Anchor>a16ca21faa823f0b5e9b3d2662250efef</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d4/d4f/classds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
    <Anchor>ac1d7f96ade25c070bca68e0a19322ed6</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockSize1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d4/d4f/classds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
    <Anchor>ac5dd0b971b2a6f4515435f38b0b0b1d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockSize2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d4/d4f/classds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
    <Anchor>a3d102f6f54e306d83391b8f80c93cf2a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startIndex1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d4/d4f/classds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
    <Anchor>a7c50cab520d61173393445917ab445f2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startIndex2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::AbstractFIFO::ScopedRead</Scope>
    </TokenIdentifier>
    <Path>d4/d4f/classds_1_1_abstract_f_i_f_o_1_1_scoped_read.html</Path>
    <Anchor>a6bf0be4288ebe458156652e0b051119d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::AbstractFIFO::ScopedWrite</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
    <Anchor>a3ab4b033f4e5c5bff71add9bc1f8ea2a</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ScopedWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
    <Anchor>a0670c2df88140817573ee3e590cd2908</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>for_each</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
    <Anchor>a8ff2404ada15cc3c20d080079394949d</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
    <Anchor>a756a559f27f6fd9828a7334d36e4a666</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
    <Anchor>adfee243408fde1a74d92da649dc5d513</Anchor>
    <DeclaredIn>AbstractFIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockSize1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
    <Anchor>a0f66fff5c895f1bbf83c0c444aee5d60</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockSize2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
    <Anchor>a138133ec9c605b00f24a8ed531fb3946</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startIndex1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
    <Anchor>a9bd0698f6a4114d66802dd729ac5d0f4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startIndex2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::AbstractFIFO::ScopedWrite</Scope>
    </TokenIdentifier>
    <Path>d4/d90/classds_1_1_abstract_f_i_f_o_1_1_scoped_write.html</Path>
    <Anchor>a39f4d4b49e674e6f6dc9810dfd8db993</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::basic_vector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a56935020f24fd8314c44a7d37ba94c5b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a73b17d440a2eddf72515e97653772f31</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a828556c803e73edd9ec6e9912b0ecba4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vector_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a357139c1285fb4e04cc83328f83b93fd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basic_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a74ace3d0d0eb354a38744f41e09028ad</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basic_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aa1799b7d720f00f345bcd8d1d0eed916</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basic_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a340d4c6f0fb596e4f5d4ca3939847fe4</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basic_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a092df011c3f8ebc03cce8983479bb742</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~basic_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a2313c4ff53482ac6a93d5f956159a4f4</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aa7dd8064c2d267a928613d67e35f0c5f</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a30065c1d04d009d980cbd3fba4316a89</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ad247b8f87f8adbdf5963af4202694194</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ac484f6d8268e6e866216b519fe0d02d8</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAndFree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a37bedc3e29e3a979b507ea07a3b1ab51</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAndInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a0e85c7966ae0c00f1dbc706ec3ee754e</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAndInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a53d870959ec3d01b048f153f6a1345aa</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ae07ec26bb725c7d7859f979f30afb093</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>afe5af8b4838298bd4223ed5ed59dfc4d</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFromTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a7bace24b513808bd30aaadffee4ffd02</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>acae139080574ea5a2641083b1b3259da</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a796eb2fc1ea1f0ece5e39bfbd8384117</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emplace_back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aff8cc9cba0d8c7a779fac0064a184ea0</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>af66a6fe9be167ac597c7834deeefb6fe</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a7be1b35f593154cc669c04fa1310d55b</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillFromFunctor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a3cb84694f02ce6c0260a08fedfb8ef28</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a79bd5fae855eb651ec60711d1ec4d859</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>first</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aa1b32dc1c51a8f7b995671850faf5184</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>first</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a1cf682236a19f6ed87ab9b28be4d70f8</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>for_each</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a523b6afaa3caef69697360b3929fb4ef</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a659130a32995e14261c194fa35b3f4ad</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNotEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a6ef88d295a3bf8b27aad8d0e27b099ba</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>last</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ae7518f90079ac486766c59bf7c2ce609</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>last</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a27dee5cd4885f8cc6aa1d5c8509d3207</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a855c56471c4206eed1cf318a0490b85b</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a7f850f921797744edb8ba889dc539035</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a77e78cda178896f61fc36a6e9577df2b</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a372f8546a0ac7274becf3b4bd81de3f6</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ac689331cb168fa8afbe80770f5ed4396</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ae13b312317ff34bd296fd2eb1c11e7f8</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a8be4062cf8f006ead639ae68908458dc</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>af0c7f602dcfd8a6f14ebc7b51ff657d1</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a85ce19ff1472fbdaf6f34b85bc1ff709</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a50164010bab4e526e4eb05909ad26fd7</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aa0e34b7513646cdf5d34ca5394206ba1</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aafa43fdf6350ab3e40ca215e53b245a8</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push_back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a9f0481881a2b0239157623d45d5f4ff1</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a761cf7628f999c60aa92ba97794fef0f</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeDuplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a2e3d9f5a93912f233f62db713803b619</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a3218ea2d67f3c496b421581871c4fff0</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserveAndInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a41c98dc87d3c31d761fcbc3b2791da58</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserveAndInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a9720cb9430293f33d1fc1877b4aff94c</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a6369e99cb5e22d89c187353d9ff750f0</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a4c23917d66b86f4e399be9570d5787e1</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a1fd774aac8b29c2cc9f3f170259b65ba</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformElementsTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a378e70e66bbb32f9777d92a6ab4d3f87</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zip_with</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a8042171938b8235b900ab8925e1debb4</Anchor>
    <DeclaredIn>basic_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a0b97b3cc2f7c70a8453b8d27058bb3b8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::basic_vector</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ac2f2cd2288e8e8be15dcd249d3d3645b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::FIFO</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIFO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>aae35dfbef5662e2209c95686fb2e154b</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>aae297371877024313a5585b676adada6</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFreeSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>a8b82dd1189c2cb5b0053416c93af3f40</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>a01e898222e276b0c1e8fb32c3f1fc75e</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>ac9fdd6ee0e66ecbb9fcda7315986b35b</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numStoredObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>a44ca7816276588dac88fcbe318c50cfe</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>acad95d2ee9f0fdfb568349f3d5b8b171</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>a228fd71c33451fa706c41131a0951906</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>a64e6dc8d5cca476f0dc53d7f1f709546</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>aa286f66eb540f24c8433524968819351</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>a407b91d83f7b2410f6bd890eaccc8856</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>af3883d12ba4ba3a454f7a4e5c89d647c</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>ad6b3fa223e46d0fbbd2b990ea3273864</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::FIFO</Scope>
    </TokenIdentifier>
    <Path>d1/de6/classds_1_1_f_i_f_o.html</Path>
    <Anchor>a3240e5cf22e52d42f6a394ec07ef79d5</Anchor>
    <DeclaredIn>FIFO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::LinkedList</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkedList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>abfb36dbc8538683fe0fefe3940daed41</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>affa10013e7d59476d2d66a624abb8468</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNodeAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>a7ef1cc8cee87e1ac40f13d86298839f8</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNodeBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>a7050b52963e0034106922cd5aa23cd07</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNodeToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>a34e9aa6b3d427c8743e1d9fbff0afd91</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAndAddNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>a44d3b2dc0ce5194576fed2f68a1205f0</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAndAddNodeAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>a57bc41c6773533c260e9c33affce8ae5</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAndAddNodeBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>a9932f69d1b50eb56b6919413dfc3863e</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAndAddNodeToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>ad02ad4285d1a2325b0de635e35576152</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstNodeInChain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>ae16405028e01ef460db3fe3ad107bb96</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastNodeInChain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>affb09c780528f4a71183365f895f5dbd</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>a4662a561e26a9cff4369bcdeeaa2cfd7</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>ab92e2e2289eb9eff261e8baaf24e10c5</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>af87f924bb640f45ebce96a7f4b1e8317</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::LinkedList</Scope>
    </TokenIdentifier>
    <Path>da/df7/classds_1_1_linked_list.html</Path>
    <Anchor>affbac4b949fe5aa97040bf4a77faef0b</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::LinkedList::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ds::LinkedList::Node</Scope>
    </TokenIdentifier>
    <Path>db/d7d/structds_1_1_linked_list_1_1_node.html</Path>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedList::Node</Scope>
    </TokenIdentifier>
    <Path>db/d7d/structds_1_1_linked_list_1_1_node.html</Path>
    <Anchor>a73e3b0cd73159cced082c7e80c568e30</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedList::Node</Scope>
    </TokenIdentifier>
    <Path>db/d7d/structds_1_1_linked_list_1_1_node.html</Path>
    <Anchor>a9342bf0ccbd08fe9c78e73a33260fd4a</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedList::Node</Scope>
    </TokenIdentifier>
    <Path>db/d7d/structds_1_1_linked_list_1_1_node.html</Path>
    <Anchor>a640fcdf9a07a32b1613666c62829ebcf</Anchor>
    <DeclaredIn>LinkedList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>listNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::LinkedList::Node</Scope>
    </TokenIdentifier>
    <Path>db/d7d/structds_1_1_linked_list_1_1_node.html</Path>
    <Anchor>a5c3a6133d58ab379c2c4fab44303fde8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ds::LinkedList::Node</Scope>
    </TokenIdentifier>
    <Path>db/d7d/structds_1_1_linked_list_1_1_node.html</Path>
    <Anchor>a6cb30aac2fb8b45cacf42322453105bc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::LinkedListModel</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkedListModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>ab3ad6e9c8b59b771b77954e1b7bb6a1c</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~LinkedListModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a6e3af9e7ac9b34b8bd13db964a1e738b</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a8a1051bc669c0b48f76f834d7c046a5d</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a6a5e87436b20bba7744e7a92920c110a</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstNodeInList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a8c44ff31a12907b04516aa3e7bc70a30</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstNodeInList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a1115c6a2e6facf484f3da66b75eef722</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstObjectInList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>ab186702ba0b8cfc34413d84694a5e990</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastNodeInList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>aeb3df6a21b7e4d6487b1a59ea7ec468c</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastNodeInList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>aed9f73495b6f3e0eab6ca13c9b777fa0</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastObjectInList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a9395af250c1dbe80b3d373c5872e0f5b</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a5163314a05a9f96db5044d06fd904063</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAfterConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>abd6d73f8f442d2fbf4afd187093467c7</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBeforeConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a2f7cec64782000e312cac7bd9c93f1a9</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertAfterConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a0c1436f2af7c2527a1779725d560c375</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertBeforeConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a3f525443e6610488544eca206c2f4792</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFirstNodeInList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a8353807924a3bf721c6fd9c88b5f488d</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLastNodeInList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>ae793eb9e0164d1147f70bd23f32f25ca</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a0a10c0ff63a885c46ddb46c9f82ce779</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>af9ee7da9b82bd863b4c1e2023e493f71</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAfterConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>ad858620a39a1aee091353cb23b17b62f</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBeforeConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a716ebc7404abe8f6835d47971ce21d7d</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBothConnections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a83f937d92dfd0d6ddd6fb25985f919df</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceAfterConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a2f81746c3b251693b16cea7b169f5f9c</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceBeforeConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a1a015b40cd6efc3b4a62cdc91ad6bc35</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceConnections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a48a0bf4c224fe57968be6a9912eefad4</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceConnections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a034a7cdc0d1c9c674c819cbcee268efe</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeOfList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>adab0166d9a723cb5b529cd7c20d4b823</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel</Scope>
    </TokenIdentifier>
    <Path>df/d16/structds_1_1_linked_list_model.html</Path>
    <Anchor>a3d54c2d5f9f6c96389280734b7023d5a</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::LinkedListModel::Iterator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator_category</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>acda99be886ed45b99ed2450d794c6848</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>a044218247de79c9c0fb9c36881ca9003</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>a51ccf53dce28023423862c45eca57a62</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>a8883d17ba62fb7be9f1c7cdfae0a3999</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>ab892bde582cd1aa24bf4636da7ec3c09</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>a44283b0fa225526743c914302d85ca6e</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>a715e1df92180719eb1ab59a040cab0d1</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>adebf9f75b2499d5ff72c2c16aa345e1f</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>a2e1c275053a7f62fe37e0ec1de883a61</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>a612117c3f2ca80f97eaf996fe87fa25f</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::LinkedListModel::Iterator</Scope>
    </TokenIdentifier>
    <Path>dd/dd5/structds_1_1_linked_list_model_1_1_iterator.html</Path>
    <Anchor>a00f6ec2c776280a0279baf9908f97c87</Anchor>
    <DeclaredIn>LinkedListModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::owned_vector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a4958943f1b1fc981a71bf4d0b5338e77</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>ab326640c570ad40ede65238da4dae55e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectCreationFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>afa801080963c04e4ad7d4a535dd05b1e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OwnedObjectType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a82cf863ec67a3b3ca1e58ca1770eaf3d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>owned_vector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a6bd6879c4ec39c70118fb0be77e97333</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a776b0d75916cf8fbb76bab7479750769</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a73ab594a0a0d6c566189c10ddb7d41d5</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a667fd6f1d4b8fdd337c0353c9cf52466</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a1e2c220748b77e4fcc09f0981898d44b</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>af19cdc2d3ddd504c6a36510f8c168a7d</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a3a66126a574ce233717defdb00fe5ff0</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>af17443846459571cdc360b5d8d2ce1cf</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>adc58874f7a6af51cdf7f14465d689f8d</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a234f2266b8e4bc1548c6dddfc8572de4</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>ab94b2d95a75ff501476ac263ae74b954</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a20c4166f97ddd458c583b1103519509f</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a23ce50c53e6be5222c09fc655d007c23</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a645d460ff1fa2f876eb7a9baf04a9405</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::owned_vector</Scope>
    </TokenIdentifier>
    <Path>de/de5/classds_1_1owned__vector.html</Path>
    <Anchor>a7c704eadbe5e5b8895a351be7ad4348d</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::owned_vector::iterator_base</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>difference_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>a227100cd9cb0b737ec8b27eb2331ca03</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator_category</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>a1ebea2faa72fb20b3eaf7131325dcedf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>aed601f1f3e557db6b433fb45822421cb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>a0c3cef3096dbe8d131f8ab56bd98b31e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>a7efe0ff892505f91c6bdfd905c4d0565</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>a114b3db58f91e46049b0f5b7cc015aa9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator_base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>a9d984e1d3dc20a35549cd4fc79eeeb46</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator_base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>ad48bdfcde8e9112c7de3427bc2436c00</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>aedf63961d93022463ec52e724bbe3ca4</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>ab52e2e12f90e9ac1618d9a21593d606e</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>a9745d3180755003e36a9a931b736a957</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>a59221f63eecd8ae615f67d99b36793c7</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>a59e9197e58c9a0ef37c35346040dd025</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ds::owned_vector::iterator_base</Scope>
    </TokenIdentifier>
    <Path>de/dc2/structds_1_1owned__vector_1_1iterator__base.html</Path>
    <Anchor>acafa39b692248593887d5e5f37c6f2dd</Anchor>
    <DeclaredIn>owned_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ds::scalar_vector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_iterator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a56935020f24fd8314c44a7d37ba94c5b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a73b17d440a2eddf72515e97653772f31</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectType</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a828556c803e73edd9ec6e9912b0ecba4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vector_type</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a357139c1285fb4e04cc83328f83b93fd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a3a357829c244d9d2c07e58cd47dff651</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a39252c806259d15a0191a1fe4ce262df</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a9ce618dae6568461f32b3b259093d2f7</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>af36495166328cd32ba09a317b852c04c</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a93a3e906a1c9e851940797e856e42f31</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aa7dd8064c2d267a928613d67e35f0c5f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a30065c1d04d009d980cbd3fba4316a89</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capacity</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ad247b8f87f8adbdf5963af4202694194</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ac484f6d8268e6e866216b519fe0d02d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAndFree</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a37bedc3e29e3a979b507ea07a3b1ab51</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAndInit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a0e85c7966ae0c00f1dbc706ec3ee754e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAndInit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a53d870959ec3d01b048f153f6a1345aa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearAndZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>aa7c9a640f4c60cb40bc82433c4830b3e</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ae07ec26bb725c7d7859f979f30afb093</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_if</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>afe5af8b4838298bd4223ed5ed59dfc4d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a4df28397a9d82ec38238afaddc6a76e3</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a7ad33c1047af9f6c69dff13466701600</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a9fabaa4f11f3444db85eb9403f3dd5e8</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFromTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a7bace24b513808bd30aaadffee4ffd02</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>acae139080574ea5a2641083b1b3259da</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a796eb2fc1ea1f0ece5e39bfbd8384117</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a33909ba5f7bf17d2b600e08c334c2b34</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a7ae7d621a35cadd491309aeea03a67cc</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>ab5c853e97ddbe364dbf9dd2d179c581d</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a87d5b71b4b55d68ff7b5c32caaed58ef</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divideTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a8fbafc8dbb10c983f3ffefbdaf8ee81c</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emplace_back</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aff8cc9cba0d8c7a779fac0064a184ea0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>af66a6fe9be167ac597c7834deeefb6fe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a7be1b35f593154cc669c04fa1310d55b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a198c180cdfdbefef83b5ac6037ab0a72</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillFromFunctor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a3cb84694f02ce6c0260a08fedfb8ef28</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a79bd5fae855eb651ec60711d1ec4d859</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>first</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aa1b32dc1c51a8f7b995671850faf5184</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>first</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a1cf682236a19f6ed87ab9b28be4d70f8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>for_each</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a523b6afaa3caef69697360b3929fb4ef</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a659130a32995e14261c194fa35b3f4ad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNotEmpty</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a6ef88d295a3bf8b27aad8d0e27b099ba</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>last</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ae7518f90079ac486766c59bf7c2ce609</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>last</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a27dee5cd4885f8cc6aa1d5c8509d3207</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a855c56471c4206eed1cf318a0490b85b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>ae4f9ef7f4525564085493e1f2a59ed34</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a7f850f921797744edb8ba889dc539035</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a63336df109418c249e8f651f907d3f72</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a77e78cda178896f61fc36a6e9577df2b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a372f8546a0ac7274becf3b4bd81de3f6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a5453ea2e82911fb146b20854f98a8e90</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a1b8a1fcc4a19b4d0e6dc74395fe5de1c</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a3936914d26f6840fccedda17f18b2188</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a79bf97ef1a5ad794f1931f2c45d3bb3d</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a02ef9f405eef42524884681a3e1ece18</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_of</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ac689331cb168fa8afbe80770f5ed4396</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numObjects</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ae13b312317ff34bd296fd2eb1c11e7f8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a8be4062cf8f006ead639ae68908458dc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a50164010bab4e526e4eb05909ad26fd7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aa0e34b7513646cdf5d34ca5394206ba1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>aafa43fdf6350ab3e40ca215e53b245a8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push_back</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a9f0481881a2b0239157623d45d5f4ff1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a761cf7628f999c60aa92ba97794fef0f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeDuplicates</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a2e3d9f5a93912f233f62db713803b619</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserve</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a3218ea2d67f3c496b421581871c4fff0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserveAndInit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a41c98dc87d3c31d761fcbc3b2791da58</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserveAndInit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a9720cb9430293f33d1fc1877b4aff94c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserveAndZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>ae9e54c284c85bfd389a69d97b914f9be</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a6369e99cb5e22d89c187353d9ff750f0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sort</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a4c23917d66b86f4e399be9570d5787e1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>ac6d97230b300810c29258329048b5550</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a65cd9a75ea3d53ef8cd8bca1c9f34914</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>af7bce0d536c6b6e4080b1dd459e72806</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a5326d0b9db29eb34941b9cfc59178d44</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtractTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>aa557588d637eaeeb3411d1ea6e93b381</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a1fd774aac8b29c2cc9f3f170259b65ba</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformElementsTo</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a378e70e66bbb32f9777d92a6ab4d3f87</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ds::scalar_vector</Scope>
    </TokenIdentifier>
    <Path>d6/d5d/classds_1_1scalar__vector.html</Path>
    <Anchor>a8e365a492d42b73dcc0dc47fabf9f960</Anchor>
    <DeclaredIn>scalar_vector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zip_with</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a8042171938b8235b900ab8925e1debb4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size_type</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>a0b97b3cc2f7c70a8453b8d27058bb3b8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objects</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>ds::basic_vector&lt; ElementType, std::allocator&lt; ElementType &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d63/classds_1_1basic__vector.html</Path>
    <Anchor>ac2f2cd2288e8e8be15dcd249d3d3645b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d41/namespacedsp.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseRootTwo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d41/namespacedsp.html</Path>
    <Anchor>a242ea887a4703b35824902729922c98b</Anchor>
    <DeclaredIn>limes_audio/util/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d41/namespacedsp.html</Path>
    <Anchor>aba42c13b1022431b2261219fe38c2ced</Anchor>
    <DeclaredIn>limes_audio/util/Misc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leftOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d41/namespacedsp.html</Path>
    <Anchor>ab1a12ea0ed30dd9ebf7c261a68dc1d73a1551df77400b2edbe1682fef8b4ee182</Anchor>
    <Abstract>In this mode, a MonoStereoConverter will output only the left channel of a stereo signal as its mono ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rightOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d41/namespacedsp.html</Path>
    <Anchor>ab1a12ea0ed30dd9ebf7c261a68dc1d73a97ed31f67756738d6c8d74a1ee8c565d</Anchor>
    <Abstract>In this mode, a MonoStereoConverter will output only the right channel of a stereo signal as its mono...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mixToMono</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>dsp</Scope>
    </TokenIdentifier>
    <Path>d0/d41/namespacedsp.html</Path>
    <Anchor>ab1a12ea0ed30dd9ebf7c261a68dc1d73a0d2a8602a2cd80a62be55f9bc60e1f22</Anchor>
    <Abstract>In this mode, a MonoStereoConverter will mix together the two channels of a stereo signal to create i...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::CircularBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>a6f7f7f2820e4904424dfcfb58c07f9ca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CircularBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>a55ec84f650102759e16f863a3e09c49d</Anchor>
    <Abstract>Creates a CircularBuffer with an initial size.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>a9bebc53b430ec0568de1be13c4ade8db</Anchor>
    <Abstract>Clears any previously stored data from the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>aa0a9c119b6a161fdd0fae8b07910e20f</Anchor>
    <Abstract>Returns the total capacity of the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumStoredSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>ab3d7b730372c25dd7ace01dcd04c23e8</Anchor>
    <Abstract>Returns the number of samples currently stored in the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>aef22ff002f9389f465759997adf2e42e</Anchor>
    <Abstract>Reads samples from the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>a02c87f2de1d9bf95955fb83fd091ea2b</Anchor>
    <Abstract>Reads samples from the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>aff23559e15d512b061ce959234f1106a</Anchor>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>a55b1fb92a31fdec22c497e828d6b7950</Anchor>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>a394ae8b059d429297cdb546c857e67c2</Anchor>
    <Abstract>Changes the total capacity of the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>adf0c33218005ecfd02a7de30c809f6d8</Anchor>
    <Abstract>Stores samples in the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::CircularBuffer</Scope>
    </TokenIdentifier>
    <Path>d2/d99/classdsp_1_1_circular_buffer.html</Path>
    <Anchor>a3508bf45d6244ea384d2f9b59647d3dd</Anchor>
    <Abstract>Stores samples in the buffer.</Abstract>
    <DeclaredIn>CircularBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::MonoStereoConverter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>dd/d67/classdsp_1_1_mono_stereo_converter.html</Path>
    <Abstract>A utility class for converting mono signals to stereo, or stereo signals to mono.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>dd/d67/classdsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>aaaedf36c1b621ebc2dff204ea98ad6cd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertMonoToStereo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>dd/d67/classdsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>abe1d48e879af588f3c50b833892127e2</Anchor>
    <Abstract>Converts a mono signal to stereo.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertMonoToStereo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>dd/d67/classdsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>ae41d9a49c5b3c4bf4a9497688a7ed26b</Anchor>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertStereoToMono</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>dd/d67/classdsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>a87275ee16f66af05198fa1cfedbe04f6</Anchor>
    <Abstract>Converts a stereo signal to mono.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertStereoToMono</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>dd/d67/classdsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>a88fbb7fb8b206452811b575f17ef97b5</Anchor>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStereoReductionMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>dd/d67/classdsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>a9b292631dbf67501c0dd378ddd6dab21</Anchor>
    <Abstract>Returns the StereoReductionMode the converter is currently using.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>dd/d67/classdsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>a43a21184da7386d7db30797aa00bcc23</Anchor>
    <Abstract>Prepares the converter to process a new maximum blocksize.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStereoReductionMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::MonoStereoConverter</Scope>
    </TokenIdentifier>
    <Path>dd/d67/classdsp_1_1_mono_stereo_converter.html</Path>
    <Anchor>a263ec42ef245e940c3eaf7e624638ad2</Anchor>
    <Abstract>Sets the StereoReductionMode the converter will use for converting stereo signals to mono.</Abstract>
    <DeclaredIn>MonoStereoConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::Oscillator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::Oscillator</Scope>
    </TokenIdentifier>
    <Path>dc/d70/structdsp_1_1_oscillator.html</Path>
    <Abstract>Base class for any kind of oscillator.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a1e5b8a154ca74d2c469f92c24fe55fab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::Oscillator</Scope>
    </TokenIdentifier>
    <Path>dc/d70/structdsp_1_1_oscillator.html</Path>
    <Anchor>ad8bd29310d3cefaa3bd757c6315a36c4</Anchor>
    <Abstract>Returns the oscillator&apos;s frequency.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a5520f61d0deb5752ab24f64c1f5bc80d</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a71de49020f685e073977ef1bf2d32c6c</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a35e57580377f6becd8683001e4ef4c13</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab3724b668055b21c252370a6df4ba648</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>aa1e82d44faa4f6f97380e4aef9d6bbfc</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::Oscillator</Scope>
    </TokenIdentifier>
    <Path>dc/d70/structdsp_1_1_oscillator.html</Path>
    <Anchor>a2cf012c13f489c6fe7c90d1691d5b7d7</Anchor>
    <Abstract>Resets the oscillator&apos;s phase.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::Oscillator</Scope>
    </TokenIdentifier>
    <Path>dc/d70/structdsp_1_1_oscillator.html</Path>
    <Anchor>a88de4e92ff1f42398d24bae0aa3d56ac</Anchor>
    <Abstract>Sets the oscillator&apos;s output frequency and samplerate.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab53ad10db3d9145c127670dfe6333d08</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::Oscillator::Phase</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dsp::Oscillator::Phase</Scope>
    </TokenIdentifier>
    <Path>d1/d83/structdsp_1_1_oscillator_1_1_phase.html</Path>
    <Abstract>Represents the phase of an oscillator.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIncrement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::Oscillator::Phase</Scope>
    </TokenIdentifier>
    <Path>d1/d83/structdsp_1_1_oscillator_1_1_phase.html</Path>
    <Anchor>a103fc9fceff52936a17fa8dfede2fa16</Anchor>
    <Abstract>Returns the current phase increment.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>next</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::Oscillator::Phase</Scope>
    </TokenIdentifier>
    <Path>d1/d83/structdsp_1_1_oscillator_1_1_phase.html</Path>
    <Anchor>a19342dcfc04262291304dc4cba9ea2f3</Anchor>
    <Abstract>Returns the next phase value and handles wraparound logic.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::Oscillator::Phase</Scope>
    </TokenIdentifier>
    <Path>d1/d83/structdsp_1_1_oscillator_1_1_phase.html</Path>
    <Anchor>a4232ba30b5c02109b634863914d105e5</Anchor>
    <Abstract>Resets the phase,.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::Oscillator::Phase</Scope>
    </TokenIdentifier>
    <Path>d1/d83/structdsp_1_1_oscillator_1_1_phase.html</Path>
    <Anchor>ae696db6a171cd71c1906bfb494267116</Anchor>
    <Abstract>Sets the output frequency and samplerate.</Abstract>
    <DeclaredIn>oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::PerlinNoise</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::PerlinNoise</Scope>
    </TokenIdentifier>
    <Path>de/da0/classdsp_1_1_perlin_noise.html</Path>
    <DeclaredIn>PerlinNoise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerlinNoise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::PerlinNoise</Scope>
    </TokenIdentifier>
    <Path>de/da0/classdsp_1_1_perlin_noise.html</Path>
    <Anchor>a14845e946babe65c6243f4c9e8516b53</Anchor>
    <DeclaredIn>PerlinNoise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerlinNoise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::PerlinNoise</Scope>
    </TokenIdentifier>
    <Path>de/da0/classdsp_1_1_perlin_noise.html</Path>
    <Anchor>acf7f25f89e3924e7dda12bfd52e63fda</Anchor>
    <DeclaredIn>PerlinNoise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::PerlinNoise</Scope>
    </TokenIdentifier>
    <Path>de/da0/classdsp_1_1_perlin_noise.html</Path>
    <Anchor>a2a6f030ad1f3a127fe8c1882adec2289</Anchor>
    <DeclaredIn>PerlinNoise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::PerlinNoise</Scope>
    </TokenIdentifier>
    <Path>de/da0/classdsp_1_1_perlin_noise.html</Path>
    <Anchor>a1055f08ef841e1dbcc2434fb02ccd8c5</Anchor>
    <DeclaredIn>PerlinNoise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::PerlinNoise</Scope>
    </TokenIdentifier>
    <Path>de/da0/classdsp_1_1_perlin_noise.html</Path>
    <Anchor>abfdaf5e775de46124fa2d90b0cd65315</Anchor>
    <DeclaredIn>PerlinNoise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::SampleStream</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Abstract>Base class for any object that can output a stream of audio samples, with no audio or MIDI input.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a1e5b8a154ca74d2c469f92c24fe55fab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a30cb8c74344e4e3db895de595676c74b</Anchor>
    <Abstract>Creates a sample stream with a specified lambda function for producing the next sample.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SampleStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>afb71adb5cac47c193f816c34cafa24ae</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a5520f61d0deb5752ab24f64c1f5bc80d</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a71de49020f685e073977ef1bf2d32c6c</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a35e57580377f6becd8683001e4ef4c13</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab3724b668055b21c252370a6df4ba648</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>aa1e82d44faa4f6f97380e4aef9d6bbfc</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab53ad10db3d9145c127670dfe6333d08</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::WhiteNoiseGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::WhiteNoiseGenerator</Scope>
    </TokenIdentifier>
    <Path>dd/d77/structdsp_1_1_white_noise_generator.html</Path>
    <DeclaredIn>WhiteNoiseGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a1e5b8a154ca74d2c469f92c24fe55fab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WhiteNoiseGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::WhiteNoiseGenerator</Scope>
    </TokenIdentifier>
    <Path>dd/d77/structdsp_1_1_white_noise_generator.html</Path>
    <Anchor>a74b1ba45eddd7d8c10d60db23c8284b9</Anchor>
    <DeclaredIn>WhiteNoiseGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WhiteNoiseGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::WhiteNoiseGenerator</Scope>
    </TokenIdentifier>
    <Path>dd/d77/structdsp_1_1_white_noise_generator.html</Path>
    <Anchor>a3465e6a5c765866b21c0cc962bcda083</Anchor>
    <DeclaredIn>WhiteNoiseGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WhiteNoiseGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::WhiteNoiseGenerator</Scope>
    </TokenIdentifier>
    <Path>dd/d77/structdsp_1_1_white_noise_generator.html</Path>
    <Anchor>abc95581c7c6511ea4085a1bb75f8a793</Anchor>
    <DeclaredIn>WhiteNoiseGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a5520f61d0deb5752ab24f64c1f5bc80d</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a71de49020f685e073977ef1bf2d32c6c</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a35e57580377f6becd8683001e4ef4c13</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab3724b668055b21c252370a6df4ba648</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::WhiteNoiseGenerator</Scope>
    </TokenIdentifier>
    <Path>dd/d77/structdsp_1_1_white_noise_generator.html</Path>
    <Anchor>a3b0ed9b81786d109c35d2535872190b0</Anchor>
    <DeclaredIn>WhiteNoiseGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>aa1e82d44faa4f6f97380e4aef9d6bbfc</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::WhiteNoiseGenerator</Scope>
    </TokenIdentifier>
    <Path>dd/d77/structdsp_1_1_white_noise_generator.html</Path>
    <Anchor>a1a1893e9d693c58f8d0e26f29cd75f07</Anchor>
    <DeclaredIn>WhiteNoiseGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab53ad10db3d9145c127670dfe6333d08</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::filters</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>dsp::filters</Scope>
    </TokenIdentifier>
    <Path>db/ded/namespacedsp_1_1filters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::filters::Coeffecients</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Abstract>A filter coefficients class, with lots of methods for creating various filter topologies.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilterOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a58132109da4817d8f25cbca2968a6671</Anchor>
    <Abstract>Returns the filter order associated with the coefficients.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRawCoefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>aca6a39c95c26f374d0df06320e891b74</Anchor>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRawCoefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a497bc36af36a945e2b7651db680df282</Anchor>
    <Abstract>The raw coefficients.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAllPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a0e6382ee694c883efe064a401f3e5b32</Anchor>
    <Abstract>Creates the coefficients for an all-pass filter, with variable Q.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeBandPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>ae44dd4407556f104f028533a5dde9c78</Anchor>
    <Abstract>Creates the coefficients for a band pass filter, with variable Q.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeFirstOrderAllPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a1a1cebc9843e7ecdb700d5c67be9551d</Anchor>
    <Abstract>Creates the coefficients for a first order all-pass filter.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeFirstOrderHighPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a1a09ddbb8de0098c08e3afed35064098</Anchor>
    <Abstract>Creates the coefficients for a first order high pass filter.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeFirstOrderLowPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a33486a742f1af88e011a16b70f77f952</Anchor>
    <Abstract>Creates the coefficients for a first order low pass filter.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeHighPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>ab1f8e6dae139e967aabd12062d565da7</Anchor>
    <Abstract>Creates the coefficients for a high pass filter, with variable Q.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeHighShelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a985dd3e857ad9c85bbcd306de9f7dcd5</Anchor>
    <Abstract>Creates the coefficients for a high-pass shelf filter with variable Q and gain.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeLowPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a1a59a4958c8caef7d6bf95e5d1be29b9</Anchor>
    <Abstract>Creates the coefficients for a low pass filter, with variable Q.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeLowShelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a4ef1a8544205c22ee6e017fecb16804e</Anchor>
    <Abstract>Creates the coefficients for a low-pass shelf filter with variable Q and gain.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeNotch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a3eb627ccd8e15042fcd4d566318fc374</Anchor>
    <Abstract>Creates the coefficients for a notch filter, with variable Q.</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makePeakFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>a5a51a58243f428b9045104a560c736b1</Anchor>
    <Abstract>Creates the coefficients for a peak filter centred around a given frequency, with a variable Q and ga...</Abstract>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dsp::filters::Coeffecients</Scope>
    </TokenIdentifier>
    <Path>d5/d70/classdsp_1_1filters_1_1_coeffecients.html</Path>
    <Anchor>ac3e53b293a6e7d2cc9b01aa9fc02cecb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::filters::Coeffecients::Storage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dsp::filters::Coeffecients::Storage</Scope>
    </TokenIdentifier>
    <Path>db/d18/structdsp_1_1filters_1_1_coeffecients_1_1_storage.html</Path>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Storage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::filters::Coeffecients::Storage</Scope>
    </TokenIdentifier>
    <Path>db/d18/structdsp_1_1filters_1_1_coeffecients_1_1_storage.html</Path>
    <Anchor>a859af3ca2bd0e0cbf9f72ad1505a302f</Anchor>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::filters::Coeffecients::Storage</Scope>
    </TokenIdentifier>
    <Path>db/d18/structdsp_1_1filters_1_1_coeffecients_1_1_storage.html</Path>
    <Anchor>a633ca253714724cbc7c3436dd0201c06</Anchor>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::filters::Coeffecients::Storage</Scope>
    </TokenIdentifier>
    <Path>db/d18/structdsp_1_1filters_1_1_coeffecients_1_1_storage.html</Path>
    <Anchor>a61c8936697cca94a713cf39f5fa8e9c9</Anchor>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::filters::Coeffecients::Storage</Scope>
    </TokenIdentifier>
    <Path>db/d18/structdsp_1_1filters_1_1_coeffecients_1_1_storage.html</Path>
    <Anchor>a19b5b213f6f26267b75ccec1d4e1ab5f</Anchor>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::filters::Coeffecients::Storage</Scope>
    </TokenIdentifier>
    <Path>db/d18/structdsp_1_1filters_1_1_coeffecients_1_1_storage.html</Path>
    <Anchor>ad7f80cccb383d7b94a13d3fad28a27cd</Anchor>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::filters::Coeffecients::Storage</Scope>
    </TokenIdentifier>
    <Path>db/d18/structdsp_1_1filters_1_1_coeffecients_1_1_storage.html</Path>
    <Anchor>acb9629f1dfdd0b96557ce7d09fe160e4</Anchor>
    <DeclaredIn>Coeffecients.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dsp::filters::Coeffecients::Storage</Scope>
    </TokenIdentifier>
    <Path>db/d18/structdsp_1_1filters_1_1_coeffecients_1_1_storage.html</Path>
    <Anchor>a10a10af12e62c43ec84644be2f364258</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::filters::Filter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>da/d96/classdsp_1_1filters_1_1_filter.html</Path>
    <Abstract>A basic IIR filter with coefficients that can be reassigned during realtime playback.</Abstract>
    <DeclaredIn>Filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>da/d96/classdsp_1_1filters_1_1_filter.html</Path>
    <Anchor>a3af9fc6c3d5746dea086341c9d1417b3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>da/d96/classdsp_1_1filters_1_1_filter.html</Path>
    <Anchor>a725eca528d00a2ce66b68daea5a76483</Anchor>
    <Abstract>Prepares the filter to process audio.</Abstract>
    <DeclaredIn>Filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>da/d96/classdsp_1_1filters_1_1_filter.html</Path>
    <Anchor>a59f95ad05b79bac7da5e58f67f809095</Anchor>
    <Abstract>Applies the filter to a stream of audio samples.</Abstract>
    <DeclaredIn>Filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>da/d96/classdsp_1_1filters_1_1_filter.html</Path>
    <Anchor>a3e126dda3751e86db6f80e030f73e61b</Anchor>
    <DeclaredIn>Filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>da/d96/classdsp_1_1filters_1_1_filter.html</Path>
    <Anchor>a59b8adad76d902189fd7c04cb4954864</Anchor>
    <Abstract>Resets the internal state of the filter.</Abstract>
    <DeclaredIn>Filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coefs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dsp::filters::Filter</Scope>
    </TokenIdentifier>
    <Path>da/d96/classdsp_1_1filters_1_1_filter.html</Path>
    <Anchor>ac9a8561703881a0cb831e08ebe3e67a8</Anchor>
    <Abstract>The filter&apos;s coefficients.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::osc</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>dsp::osc</Scope>
    </TokenIdentifier>
    <Path>d8/d1b/namespacedsp_1_1osc.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Oscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::osc</Scope>
    </TokenIdentifier>
    <Path>d8/d1b/namespacedsp_1_1osc.html</Path>
    <Anchor>ad8383dc63bae31f5edc1554ef2a26908</Anchor>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::osc::DetunableModel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DetunableModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>abbcbc80849bf80d278fd3ab22f9f3ead</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyFrequencies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>ac2baf0a5c491da96c7a5efe1be27f074</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeNumVoices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>a04b64347e18c0177a5f94586c4ce63f0</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCenterFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>af539cc63e0daaedb52afc9aec4ea6753</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>a62fb42ae6713bed425eb86626edcd1ef</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumVoices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>a972869429db4eafde55ce95c04e5c0a1</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchSpreadCents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>a61b1190b9205393d13885e6552edcce0</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>adafa5c4f297899f05c63014f2ba89ef0</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>a52be51209b7d3c41f98498bedb726956</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDetuneAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>a4062a582abf17af1fa32b44aaa1737d0</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::osc::DetunableModel</Scope>
    </TokenIdentifier>
    <Path>d2/dde/classdsp_1_1osc_1_1_detunable_model.html</Path>
    <Anchor>a357533a792ab6e81d489fa40885e523d</Anchor>
    <DeclaredIn>DetunableModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::osc::Saw</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d6/d76/structdsp_1_1osc_1_1_saw.html</Path>
    <Abstract>A basic sawtooth wave oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a1e5b8a154ca74d2c469f92c24fe55fab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Saw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d6/d76/structdsp_1_1osc_1_1_saw.html</Path>
    <Anchor>a04df3b1bf29a0a6b3abdfacc9c0be815</Anchor>
    <Abstract>Constructs a default sawtooth oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d6/d76/structdsp_1_1osc_1_1_saw.html</Path>
    <Anchor>ab13c9422d7987beb43f5de7ded2801d5</Anchor>
    <Abstract>Returns the sawtooth wave&apos;s frequency.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a5520f61d0deb5752ab24f64c1f5bc80d</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a71de49020f685e073977ef1bf2d32c6c</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a35e57580377f6becd8683001e4ef4c13</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab3724b668055b21c252370a6df4ba648</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d6/d76/structdsp_1_1osc_1_1_saw.html</Path>
    <Anchor>a605d1f8ba8153173563586ca045fecf1</Anchor>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>aa1e82d44faa4f6f97380e4aef9d6bbfc</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d6/d76/structdsp_1_1osc_1_1_saw.html</Path>
    <Anchor>acaba78e5e54cafe6dddd94363a4f4b70</Anchor>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d6/d76/structdsp_1_1osc_1_1_saw.html</Path>
    <Anchor>a938454ef1e44cbb80ab59dd64bc549ed</Anchor>
    <Abstract>Resets the sawtooth wave&apos;s phase.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Saw</Scope>
    </TokenIdentifier>
    <Path>d6/d76/structdsp_1_1osc_1_1_saw.html</Path>
    <Anchor>af23dbcade157d39d8787ceb7d32f3d16</Anchor>
    <Abstract>Sets the output frequency and samplerate of the sawtooth wave.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab53ad10db3d9145c127670dfe6333d08</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::osc::Sine</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>dc/dd8/structdsp_1_1osc_1_1_sine.html</Path>
    <Abstract>A basic sine wave oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a1e5b8a154ca74d2c469f92c24fe55fab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>dc/dd8/structdsp_1_1osc_1_1_sine.html</Path>
    <Anchor>aa8f01029e17bd2f512e7c8bdf33fb405</Anchor>
    <Abstract>Constructs a default sine oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>dc/dd8/structdsp_1_1osc_1_1_sine.html</Path>
    <Anchor>a7ed04aacbcf3fced74fa25b456a850a0</Anchor>
    <Abstract>Returns the sine wave&apos;s frequency.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a5520f61d0deb5752ab24f64c1f5bc80d</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a71de49020f685e073977ef1bf2d32c6c</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a35e57580377f6becd8683001e4ef4c13</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab3724b668055b21c252370a6df4ba648</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>dc/dd8/structdsp_1_1osc_1_1_sine.html</Path>
    <Anchor>a3b5e849a39d0c3a09542acc81b9c3db0</Anchor>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>aa1e82d44faa4f6f97380e4aef9d6bbfc</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>dc/dd8/structdsp_1_1osc_1_1_sine.html</Path>
    <Anchor>a5eb9973ebecf8be73f3859b8d07172ff</Anchor>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>dc/dd8/structdsp_1_1osc_1_1_sine.html</Path>
    <Anchor>a27010c2337b3a2288615e6103685f753</Anchor>
    <Abstract>Resets the sine wave&apos;s phase.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Sine</Scope>
    </TokenIdentifier>
    <Path>dc/dd8/structdsp_1_1osc_1_1_sine.html</Path>
    <Anchor>ae6aa4013f7646e337a8c75a727f490a7</Anchor>
    <Abstract>Sets the output frequency and samplerate of the sine wave.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab53ad10db3d9145c127670dfe6333d08</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::osc::Square</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>d1/d92/structdsp_1_1osc_1_1_square.html</Path>
    <Abstract>A basic square wave oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a1e5b8a154ca74d2c469f92c24fe55fab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>d1/d92/structdsp_1_1osc_1_1_square.html</Path>
    <Anchor>ad2156ecd2391f6a2bdf9ba586cfa8a1e</Anchor>
    <Abstract>Consructs a default square wave oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>d1/d92/structdsp_1_1osc_1_1_square.html</Path>
    <Anchor>a75215d7f2dddadab87c140c7a7b8e41c</Anchor>
    <Abstract>Returns the square wave&apos;s frequency.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a5520f61d0deb5752ab24f64c1f5bc80d</Anchor>
    <Abstract>Returns the next output sample from the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a71de49020f685e073977ef1bf2d32c6c</Anchor>
    <Abstract>Returns a stream of samples.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>a35e57580377f6becd8683001e4ef4c13</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab3724b668055b21c252370a6df4ba648</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>d1/d92/structdsp_1_1osc_1_1_square.html</Path>
    <Anchor>a83642b3f7cc8062adb477ef522ae5f73</Anchor>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>aa1e82d44faa4f6f97380e4aef9d6bbfc</Anchor>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>d1/d92/structdsp_1_1osc_1_1_square.html</Path>
    <Anchor>a611e426330de73713754660fa8586d93</Anchor>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>d1/d92/structdsp_1_1osc_1_1_square.html</Path>
    <Anchor>ae51fc86541955c67c6b433d1f70a2136</Anchor>
    <Abstract>Resets the square wave&apos;s phase.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>d1/d92/structdsp_1_1osc_1_1_square.html</Path>
    <Anchor>a53197850fe876fc1d33e4e84b4b26bd2</Anchor>
    <Abstract>Sets the square wave&apos;s output frequency and samplerate.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skipSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::SampleStream</Scope>
    </TokenIdentifier>
    <Path>df/d5c/structdsp_1_1_sample_stream.html</Path>
    <Anchor>ab53ad10db3d9145c127670dfe6333d08</Anchor>
    <Abstract>Skips a number of samples in the stream.</Abstract>
    <DeclaredIn>SampleStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle&lt; SampleType &gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>dsp::osc::Square</Scope>
    </TokenIdentifier>
    <Path>d1/d92/structdsp_1_1osc_1_1_square.html</Path>
    <Anchor>aa097fa88ccabac97b5fdd8498653f4f0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::osc::Triangle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d6/dda/structdsp_1_1osc_1_1_triangle.html</Path>
    <Abstract>A basic triangle wave oscillator.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d6/dda/structdsp_1_1osc_1_1_triangle.html</Path>
    <Anchor>a223e68aaa94c330dd077e27f18f239b3</Anchor>
    <Abstract>Constructs a default triangle wave.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d6/dda/structdsp_1_1osc_1_1_triangle.html</Path>
    <Anchor>af0c1ab2a48a9f210e56b577f9537e405</Anchor>
    <Abstract>Returns the square wave&apos;s frequency.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d6/dda/structdsp_1_1osc_1_1_triangle.html</Path>
    <Anchor>aedd9d46f7f2571cb7128af71752d0c6d</Anchor>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d6/dda/structdsp_1_1osc_1_1_triangle.html</Path>
    <Anchor>ac9c80b2e8f3baa111be16000b8aa9080</Anchor>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d6/dda/structdsp_1_1osc_1_1_triangle.html</Path>
    <Anchor>aa4f3f89c9f33150f7483462424577ffb</Anchor>
    <Abstract>Resets the triangle wave&apos;s phase.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dsp::osc::Triangle</Scope>
    </TokenIdentifier>
    <Path>d6/dda/structdsp_1_1osc_1_1_triangle.html</Path>
    <Anchor>a1f07cd640b15feddd8794c2dfb2ebb0c</Anchor>
    <Abstract>Sets the triangle wave&apos;s output frequency and samplerate.</Abstract>
    <DeclaredIn>basic_oscillators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::psola</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>dsp::psola</Scope>
    </TokenIdentifier>
    <Path>d2/dff/namespacedsp_1_1psola.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::psola::Analyzer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>ab7240ad867c8fe78ec2cb9227d7dc82b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Analyzer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>abe7f29ad8e8eb155f15b3aa121441a77</Anchor>
    <Abstract>Creates an Analyzer with an initial minimum detectable frequency.</Abstract>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>analyzeInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>a1f0990f98d9aa733ddc399d81897ef25</Anchor>
    <Abstract>Analyzes a frame of audio.</Abstract>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastInputPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>adb83f4349983033f6cec6210686b24bc</Anchor>
    <Abstract>Returns the last input pitch, in Hz, that the analyzer detected, or 0 if the last frame was unpitched...</Abstract>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatencySamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>a40375000a6c82458daf1e3a7ebf1a7d5</Anchor>
    <Abstract>Returns the latency in samples of the PSOLA algorithm.</Abstract>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>a52c55aae7e3eb065a01d2a018fa44140</Anchor>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>a18c3777ad8f85374cf19aaa891c21326</Anchor>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseResources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>a29c086ac77b23583e9064f4fd63a6850</Anchor>
    <Abstract>Releases all resources used by the Analyzer object.</Abstract>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>a69c4909e831d8c066026092407362467</Anchor>
    <Abstract>Resets the analyzer to its initial state, without releasing any resources.</Abstract>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMinInputFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>af16c7e26830432ce9710616de2517cfe</Anchor>
    <Abstract>Sets the minimum frequency detectable as pitched by the internal PitchDetector object.</Abstract>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSamplerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>af2780b79ee26ded45b888ec7031b52ba</Anchor>
    <Abstract>Sets the samplerate, and informs any Shifter objects that are using this Analyzer.</Abstract>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Shifter&lt; SampleType &gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>dsp::psola::Analyzer</Scope>
    </TokenIdentifier>
    <Path>d2/d32/classdsp_1_1psola_1_1_analyzer.html</Path>
    <Anchor>ab0c6bf0dc83509d935bf350d9dace989</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::psola::PeakFinder</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classdsp_1_1psola_1_1_peak_finder.html</Path>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PeakFinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classdsp_1_1psola_1_1_peak_finder.html</Path>
    <Anchor>aaa84ab9445bdc03a77a7282749d943d0</Anchor>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findPeaks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classdsp_1_1psola_1_1_peak_finder.html</Path>
    <Anchor>ad1614565ff7b7315af8d8edca5d974f4</Anchor>
    <Abstract>Analyzes a stream of audio and identifies the best set of pitch peaks to use for PSOLA pitch shifting...</Abstract>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classdsp_1_1psola_1_1_peak_finder.html</Path>
    <Anchor>af27df41f18bda8f046d66eca0caa3012</Anchor>
    <Abstract>Prepares the analyzer for a new maximum blocksize.</Abstract>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseResources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classdsp_1_1psola_1_1_peak_finder.html</Path>
    <Anchor>ab759e3941b8bebb355fc33e89e1c38ef</Anchor>
    <Abstract>Releases all resources used by the analyzer.</Abstract>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PeakFinder</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classdsp_1_1psola_1_1_peak_finder.html</Path>
    <Anchor>a883fc981d94ffbd9162d76bfff4168e0</Anchor>
    <Abstract>Resets the analyzer to its initial state, without freeing any resources.</Abstract>
    <DeclaredIn>PeakFinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::psola::PitchDetector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>ab72485504614726c9dc1e59a730c3122</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PitchDetector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a591a4181364120e1bc40746612e27666</Anchor>
    <Abstract>Creates a pitch detector with an initial minimum detectable frequency and confidence threshold.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentLegalPeriodRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a3b22a923dfe0c89c39b573cab22383c9</Anchor>
    <Abstract>Returns the current legal period range for the last analyzed frame of audio.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatencySamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a20293ef8cd5a49125497236e2d24f1a1</Anchor>
    <Abstract>Returns the latency in samples of the detection algorithm.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a8a98429e490e9f0d016d0fea584b9f74</Anchor>
    <Abstract>Returns the minimum frequency in Hz that this pitch detector is configured to detect.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a55bbb7e8085cf593cee2ff10f0aa4324</Anchor>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a894cd35c6dfc39a8fbad4736b46330d1</Anchor>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseResources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a28cabe5cc98a8c60561517491affc195</Anchor>
    <Abstract>Releases all of the pitch detector&apos;s internal resources.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>ab58de74402708fc7409c92a783a400a6</Anchor>
    <Abstract>Resets the internal state of the pitch detector without releasing any resources.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfidenceThresh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a34a0cbe291d3dff179ff4ca71fc412e1</Anchor>
    <Abstract>Sets the confidence threshold of the pitch detection algorithm.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMinHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a01caf7311a5bd5196054f1bcbdc84878</Anchor>
    <Abstract>Sets the minimum detectable frequency for the pitch detector.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSamplerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a567c2a044ed37970c48b0eb84a2e9ca5</Anchor>
    <Abstract>Sets the samplerate in Hz of the pitch detector.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a706606e50d37f2b8a4f00bf7b24f0ad8</Anchor>
    <Abstract>Detects the pitch in Hz for a frame of audio.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a4b7d702070d24107cffbf0a8fca0d79b</Anchor>
    <Abstract>Detects the pitch in Hz for a frame of audio.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>ace8b484b25aab1a7fa1ecc8c931b8514</Anchor>
    <Abstract>Detects the period, in samples, for a frame of audio.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detectPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::PitchDetector</Scope>
    </TokenIdentifier>
    <Path>d0/dfe/classdsp_1_1psola_1_1_pitch_detector.html</Path>
    <Anchor>a1353c514f3322982fca1c88c78ccbdc0</Anchor>
    <Abstract>Detects the pitch in Hz for a frame of audio.</Abstract>
    <DeclaredIn>PitchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dsp::psola::Shifter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Abstract>A class that repitches a stream of monophonic audio using PSOLA-like techniques.</Abstract>
    <DeclaredIn>analyzer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Shifter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>a30454bbd16eb0467e33d8d8ab26440bc</Anchor>
    <Abstract>Creates a Shifter.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Shifter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>adf722d44cadf273995c6a181f5df3ed1</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>a360f79af5f3aa35a224307f14bb8e6c8</Anchor>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>ad7b1a04e11e65fed7fe60f387c13f363</Anchor>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>a61baa16d95751f245de016469f08325f</Anchor>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseResources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>ab9b1ebd5dc8fce462eebbcbea75efa75</Anchor>
    <Abstract>Releases all the resources used by the Shifter.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>acbcab6c11af952e404a6691fa95b28da</Anchor>
    <Abstract>Resets the shifter to its initial state, without releasing any resources.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPitchHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>a1f308f4066e41df96fa87844b6256396</Anchor>
    <Abstract>Sets the pitch, in Hz, of the shifter&apos;s output.</Abstract>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>analyzer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>af4c9dfba5b337a0354a037ca3a452b1a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onNewBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>a9912906d52ef69b3b3a92ce3f6c52b83</Anchor>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pitchHzChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>aa3e2faf85c137fe71271c45cf1834926</Anchor>
    <DeclaredIn>shifter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Analyzer&lt; SampleType &gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>dsp::psola::Shifter</Scope>
    </TokenIdentifier>
    <Path>dc/d66/classdsp_1_1psola_1_1_shifter.html</Path>
    <Anchor>a22bbc3f7f1466d647e7b5eb3e4b39204</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>files</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d6/d04/namespacefiles.html</Path>
    <Abstract>This namespace contains filesystem utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d6/d04/namespacefiles.html</Path>
    <Anchor>a794b8ca19b6b9e9045a70663a9c3416c</Anchor>
    <Abstract>Convenience typedef for filesystem paths.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExecutablePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>ga60f08b0e2e66b004beac62e8edb85765</Anchor>
    <Abstract>Returns the path of the current executable, as a string.</Abstract>
    <DeclaredIn>exec_location.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModulePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>files</Scope>
    </TokenIdentifier>
    <Path>d9/dda/group__files.html</Path>
    <Anchor>gaff709ef716d9a2d98819bd95a56b6ade</Anchor>
    <Abstract>Returns the path of the current module, as a string.</Abstract>
    <DeclaredIn>exec_location.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>files::CFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Abstract>This class is a wrapper around a C-style FILE* that takes care of freeing the file when the object is...</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a18dc1c4025aa6ad4c3adb051a956f712</Anchor>
    <Abstract>CFile is not copyable.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a4635ad9d081dfd9fe3a22b1589345ac5</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a695903716af53077c2048e2a7a4b49e1</Anchor>
    <Abstract>If the file is currently open, this closes it by calling fclose() .</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a283b4929f0fb641682cc5187b23dd656</Anchor>
    <Abstract>Returns true if the file is currently open.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a03eab3d2ed3c139c1f3a6a69ebb293c6</Anchor>
    <Abstract>Opens the given file in the given mode.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a70643e912e1d6142774b439aaaf839e3</Anchor>
    <Abstract>Evaluates to true if the file is currently open.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>aefa728a4c5b81ead3ecaba058c4b5b56</Anchor>
    <Abstract>Move assignment operator.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>aeed274c563ef99b87ba40ed6a0b692f6</Anchor>
    <Abstract>CFile is not copyable.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>aa8cdeceaa2690deb9fa4ab689b5c7be1</Anchor>
    <Abstract>Creates a default CFile that holds a nullptr.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>aba4b8eb6bde7f0cfbd19517cd26ed49f</Anchor>
    <Abstract>Creates a CFile referencing the given filepath, in the given mode.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>adad59868663a8a8e67927d6e22461e4f</Anchor>
    <Abstract>Move constructor.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a493feb21f1f971df6758ad348624d5d3</Anchor>
    <Abstract>Returns the pointer this object holds.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>aed66e69a4af4999cac8812fcd6dcd178</Anchor>
    <Abstract>Returns the pointer this object holds.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>ad7d4133c4e024703801c19000191f3d6</Anchor>
    <Abstract>Dereferences the pointer this object holds.</Abstract>
    <DeclaredIn>CFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a9718f3b5f8f5cc3124c59c9d72e16eada7a1a5f3e79fdc91edf2f5ead9d66abb4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a9718f3b5f8f5cc3124c59c9d72e16eada1129c0e4d43f2d121652a7302712cff6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a9718f3b5f8f5cc3124c59c9d72e16eada3ac4692f3935a49a0b243eecf529faa9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReadExtended</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a9718f3b5f8f5cc3124c59c9d72e16eada2f796b49f88cf3656e9575abf6381c26</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WriteExtended</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a9718f3b5f8f5cc3124c59c9d72e16eadaaeab85703d22a0bf9b9af6d5b1202397</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AppendExtended</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>files::CFile</Scope>
    </TokenIdentifier>
    <Path>dc/df5/classfiles_1_1_c_file.html</Path>
    <Anchor>a9718f3b5f8f5cc3124c59c9d72e16eada3703b9884b477b32e474fd89939df754</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>files::Directory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Abstract>This class represents a directory on the filesystem.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CopyOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a74945df516560d81721125c34923d1dc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Permissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afd61b18fdf61fdaa9503289065c7dd89</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PermOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac5040d9cc3d3ba7f641ab25e89c18b80</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a0681cdf7d16ce1d1faead0facdfe6caf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirectoryCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a928bf0ab0b38096860a4a4cad1eab720</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SymLinkCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a9f7b7add1ebfbbb41d8bd035f0b00802</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntryCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a97bdbcab0c1f2e7514d2457e0473b548</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Directory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>acfdd0c343e0030680f8f36b3642d53b9</Anchor>
    <Abstract>Directory is default copyable.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Directory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a20dbec4f3b9e1542e65384a0e5ae4716</Anchor>
    <Abstract>Directory is default movable.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a85096ce71f330fb7aac55818e976ab18</Anchor>
    <Abstract>Changes the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>adb9e29335662a4a2e8370870a0ee5627</Anchor>
    <Abstract>Returns true if this directory contains the passed FilesystemEntry.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a9f070dae088fa62aaf4677738ef64b35</Anchor>
    <Abstract>Returns true if this directory contains a child with the specified name.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a539db4d6acb7e111e94460a40e1c8aa2</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac94cbb7cac53af77d84d537351cfd9e1</Anchor>
    <Abstract>Overwriting Overwrites this filesystem entry by copying from another location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9157e1aa99966fff615fe55d728f8ea8</Anchor>
    <Abstract>Creates a copy of this filesystem object, with the same filename, in a different directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createChildSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a9b0d354be6d11a48e167f4a8874406f6</Anchor>
    <Abstract>Returns a SymLink object that represents a symbolic link in the current directory with the specified ...</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIfDoesntExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>afc1eaafc90082173a91d526c9d7ccdb1</Anchor>
    <Abstract>Creates the directory this object refers to, if it doesn&apos;t already exist.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteIfExists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad58e2731fc8305342086694ae82fb060</Anchor>
    <Abstract>Deletes the filesystem entry this object refers to, if it exists.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a09b3b1216d8d897947204e31c464b4cf</Anchor>
    <Abstract>Returns true if the filesystem object this object refers to exists on disk.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>adeb5caaa30bfa36d21f38ddd9239deaa</Anchor>
    <Abstract>Creates a FilesystemEntry with an empty path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a1a72fa462a280d1c5d625e9b1d1dac0e</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>ad880842142372c42cc2ece037107818b</Anchor>
    <Abstract>Creates a FilesystemEntry referring to the specified path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>afeb046c3c1c4bbcee893b068c0c772ba</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a61a768c3effba7e761f704532131dfcf</Anchor>
    <Abstract>Returns the full, absolute path of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a95b69859e365d803ac79f1bad7758471</Anchor>
    <Abstract>Returns all child filesystem entries that exist in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a7dfa68f208a5b850764c45438b729931</Anchor>
    <Abstract>Returns a type-erased FilesystemEntry representing a filesystem object in this directory with the spe...</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildDirectories</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a01e5a2a313b7444934c5fdcf26bc02a8</Anchor>
    <Abstract>Returns all child directories that exist in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>adb76e7a4144edf43db95cbb157ab6b1e</Anchor>
    <Abstract>Returns a Directory object that represents a subdirectory of this one with the specified name.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a689dd5d0c2ed54ab0a97c3d89f681f2e</Anchor>
    <Abstract>Returns a File object representing a file in this directory with the specified name.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildFiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a621e6ae07b7c937fbfbdda662f7d9108</Anchor>
    <Abstract>Returns all child files that exist in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildSymLinks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>ae01c76e026e92acdef949deb55049888</Anchor>
    <Abstract>Returns all child symbolic links that exist in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a7382b6e12105957a50492570ab27f14f</Anchor>
    <Abstract>Returns the directory containing this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9be4fead3dca5059e31d0880f5502006</Anchor>
    <Abstract>If this object refers to a directory, constructs a Directory object referring to the same directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac6374d8381cd4cffa0a49b6a7e7b2180</Anchor>
    <Abstract>If this object refers to a file, constructs a File object referring to the same file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a64fdcc7065422efa75196de5bf804a19</Anchor>
    <Abstract>Returns the last modification time of the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad29e63925bc45b2ff88f2e957b604cb0</Anchor>
    <Abstract>Returns the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParentDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a81a33eb8cd834934f8a2ff44d1d6a096</Anchor>
    <Abstract>Returns the parent directory of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a15a943c53968c0fcbf42edfa99b45622</Anchor>
    <Abstract>Returns the current path held by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>aa66e2aabfeab8b02ebba41784d02c3d6</Anchor>
    <Abstract>Returns the current permissions of the filesystem entry this object refers to.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a5ead3ebeb96dd87ae9e6e2fecaab27f4</Anchor>
    <Abstract>Returns the input path made relative to this directory&apos;s path.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymLinkObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a98285950c70acb6467301100d86736b3</Anchor>
    <Abstract>If this object refers to a symbolic link, constructs a SymLink object referring to the same link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a76d80f597e36ed73ee5485d92d7bb428</Anchor>
    <Abstract>Returns true if the path this object holds is a relative path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrentWorkingDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>ac36f341687b4b6a4c255e63723d39bb6</Anchor>
    <Abstract>Returns true if this directory is the current working directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a57c79f078776722cd7a9dff206fa0015</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a9318d2129bbba983b0ccde48f858b7bc</Anchor>
    <Abstract>Returns true if this directory contains no children.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a17aba38215d388c6fc7fcacf0fa32208</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a17f9ae14fe9aa594d0da270951d1fa29</Anchor>
    <Abstract>Returns true if the filename of this object begins with a .</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a2e1eef22931983bea56349c22d5adf63</Anchor>
    <Abstract>Returns true if the path this object holds is an absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a16b95513db39c4a7d78a344e5f45cfed</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a symbolic link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0701c63389a63f8bbed51c3aac8b1b6b</Anchor>
    <Abstract>Returns true if this object holds a valid filesystem path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterateAllChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a0a56ab7f63607de50dfd562d68786be0</Anchor>
    <Abstract>Iterates through all child objects of this directory, calling different callbacks for each object dep...</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterateAllChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a3c3b98d1bb754708a58f23a8d33eeaec</Anchor>
    <Abstract>Iterates through all child objects of this directory, calling a single type-erased callback for each ...</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterateDirectories</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>acf361d175e03cadf3ed66e8091d06727</Anchor>
    <Abstract>Calls a function for each child directory that exists in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterateFiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a7a5544f03e507b2e41a6f6c13ffd2643</Anchor>
    <Abstract>Calls a function for each child file that exists in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterateSymLinks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a084961d9fc1ed3b6123af23db1fd855f</Anchor>
    <Abstract>Calls a function for each child symbolic link that exists in this directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>abee9fcba23eaf1bf624f8b2f9b499497</Anchor>
    <Abstract>If the path this object holds is already absolute, this function does nothing.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeToCWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afd5097cabdb383708b718eb70b2e2bcb</Anchor>
    <Abstract>Similar to makeAbsoluteRelativeTo(), but uses the current working directory as the base path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a897751bb8c3a7634ec7ed8303e560320</Anchor>
    <Abstract>Converts this filesystem entry to its absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1e84caf1c815c6012fc81386b1d0a119</Anchor>
    <Abstract>Returns a new FilesystemEntry referring to a subpath of this one.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4d10690764cb18d88cf6d3d79cb42756</Anchor>
    <Abstract>Assigns this object&apos;s path to a subpath of the current path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a11b4bb5a4e9476fd5735ac5dce4c015c</Anchor>
    <Abstract>Directory is default copyable.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a4152b30159c56c61caf0cf4e8e33bb99</Anchor>
    <Abstract>Directory is default movable.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a2dd47edec337e34bd28dbda4f24a3b9f</Anchor>
    <Abstract>Renames this filesystem object to a new path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4b8ae8f254c6c9b17abdafb92c64b450</Anchor>
    <Abstract>Renames this filesystem entry to a new filename within its current directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAsWorkingDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a7ec8fbdb83dd8ae4da08a247e5614002</Anchor>
    <Abstract>Sets this directory as the current working directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4e1c18e47442416fe6b83a29fbace76e</Anchor>
    <Abstract>Sets the permissions for the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a6d47715bb913d1b606376a1f51049a41</Anchor>
    <Abstract>Returns the size of this directory, calculated as the cumulative size of all this directory&apos;s content...</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>addf51936721322625169b5ee31900072</Anchor>
    <Abstract>If the filesystem entry this object refers do doesn&apos;t exist, this function creates it.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch_noCreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a30b265a1ff9708e8e259227c95783aa7</Anchor>
    <Abstract>The same as touch(), except this function does not create the filesystem entry if it didn&apos;t already e...</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a37546e1978194d9a2f9c4b6644810a21</Anchor>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a4db7e7b3a1f4ec9c51733fa7df5a2588</Anchor>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentWorkingDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a4e2fa3048ea1d26d21bf8ec4bd433d5f</Anchor>
    <Abstract>Returns a directory object representing the current working directory.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPATH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a260cb978d6e0804989cc3be30f8057e0</Anchor>
    <Abstract>Returns the contents of the PATH environment variable as a vector of Directory objects.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTempFileDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a6934e33ce15fc4fa6fea43f02c36c7e9</Anchor>
    <Abstract>Returns a directory appropriate for storing temporary files.</Abstract>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentWorkingDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>a07d8b903a160e050d0724a4b2351df4c</Anchor>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentWorkingDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::Directory</Scope>
    </TokenIdentifier>
    <Path>d5/d2a/classfiles_1_1_directory.html</Path>
    <Anchor>ab79e855ab522ba9d3d31972cb224fc29</Anchor>
    <DeclaredIn>directory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>files::DynamicLibrary</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Abstract>This class represents a dynamically loaded library.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a5f9a695c914c30c090d7d70c042e40f3</Anchor>
    <Abstract>DynamicLibrary is default copyable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>ad393c9e890a7679e9db2bb638eee71aa</Anchor>
    <Abstract>DynamicLibrary is default movable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DynamicLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>acd792f4b352972817b0e69febaa84cfd</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a7c558d000c576dbc35604da544860ac6</Anchor>
    <Abstract>Closes the shared library, if one is open.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a034c23f98cca3c07b31a77e955597d41</Anchor>
    <Abstract>Attempts to locate a function within the shared library, and, if found, returns a pointer to the func...</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a0d4474b499d2258dcca5c72cab3dbb56</Anchor>
    <Abstract>Attempts to locate the file on disk where the code for the current shared library is actually located...</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>aa176a2ad1647ff69fde8124dccb9af1b</Anchor>
    <Abstract>Returns an opaque platform-specific handle to the currently open shared library (if any).</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>aadd28016ec5bcbb99ec5fb802342ddd3</Anchor>
    <Abstract>Attempts to determine the name of the library, if it is open.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a3fc98da3aad0f3df592a8d28800aef57</Anchor>
    <Abstract>Returns true if the library is currently open.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a7fac326ab0c7f3604d07143286b4d851</Anchor>
    <Abstract>Attempts to open a new shared library.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a4f7874ea2e87219391bfec3a937079dc</Anchor>
    <Abstract>Returns true if this library object does not refer to the same shared library as the other one.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a432d9d22feef6d3d7805ed5f58456060</Anchor>
    <Abstract>DynamicLibrary is default copyable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a8b3daa8eea9dae24a8ccb3368e065ef9</Anchor>
    <Abstract>DynamicLibrary is default movable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a8fb39cf27edd5027eb73be77ef09f039</Anchor>
    <Abstract>Returns true if this library object refers to the same shared library as the other one.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>a4e11abde2173839853903907ecb00713</Anchor>
    <Abstract>Creates an unopened library object.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::DynamicLibrary</Scope>
    </TokenIdentifier>
    <Path>d5/d80/classfiles_1_1_dynamic_library.html</Path>
    <Anchor>aa64824f52c3e45fb4a7852f0fe617cf3</Anchor>
    <Abstract>Creates a library object and attempts to open the specified library.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>files::File</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Abstract>This class represents a file on the filesystem.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CopyOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a74945df516560d81721125c34923d1dc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Permissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afd61b18fdf61fdaa9503289065c7dd89</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PermOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac5040d9cc3d3ba7f641ab25e89c18b80</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>File</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a8f4617df95e1070225a1b0cc731907b4</Anchor>
    <Abstract>File is default copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>File</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>ab4d88ff734c20b3c3e40c5626d121542</Anchor>
    <Abstract>File is default movable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a85096ce71f330fb7aac55818e976ab18</Anchor>
    <Abstract>Changes the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a539db4d6acb7e111e94460a40e1c8aa2</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac94cbb7cac53af77d84d537351cfd9e1</Anchor>
    <Abstract>Overwriting Overwrites this filesystem entry by copying from another location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9157e1aa99966fff615fe55d728f8ea8</Anchor>
    <Abstract>Creates a copy of this filesystem object, with the same filename, in a different directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIfDoesntExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0372477eba4e1e2be2e99320b70a04b0</Anchor>
    <Abstract>Creates the filesystem entry this object refers to, if it doesn&apos;t already exist.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteIfExists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad58e2731fc8305342086694ae82fb060</Anchor>
    <Abstract>Deletes the filesystem entry this object refers to, if it exists.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a99c52ca9ad5e511b5cf78c7d5fcc4046</Anchor>
    <Abstract>Duplicates this file within its directory.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a09b3b1216d8d897947204e31c464b4cf</Anchor>
    <Abstract>Returns true if the filesystem object this object refers to exists on disk.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>adeb5caaa30bfa36d21f38ddd9239deaa</Anchor>
    <Abstract>Creates a FilesystemEntry with an empty path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a1a72fa462a280d1c5d625e9b1d1dac0e</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>ad880842142372c42cc2ece037107818b</Anchor>
    <Abstract>Creates a FilesystemEntry referring to the specified path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>afeb046c3c1c4bbcee893b068c0c772ba</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a61a768c3effba7e761f704532131dfcf</Anchor>
    <Abstract>Returns the full, absolute path of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a2eca747ae1667bf745be309250f40092</Anchor>
    <Abstract>Returns a CFile referring to this file.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a7382b6e12105957a50492570ab27f14f</Anchor>
    <Abstract>Returns the directory containing this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9be4fead3dca5059e31d0880f5502006</Anchor>
    <Abstract>If this object refers to a directory, constructs a Directory object referring to the same directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a36f8e632720b563a204432b1cc405491</Anchor>
    <Abstract>Returns this file&apos;s file extension, if any.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>acba956c018ec61c99ac0888de41e97b5</Anchor>
    <Abstract>Returns this file&apos;s filename.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac6374d8381cd4cffa0a49b6a7e7b2180</Anchor>
    <Abstract>If this object refers to a file, constructs a File object referring to the same file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a64fdcc7065422efa75196de5bf804a19</Anchor>
    <Abstract>Returns the last modification time of the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad29e63925bc45b2ff88f2e957b604cb0</Anchor>
    <Abstract>Returns the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParentDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a81a33eb8cd834934f8a2ff44d1d6a096</Anchor>
    <Abstract>Returns the parent directory of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a15a943c53968c0fcbf42edfa99b45622</Anchor>
    <Abstract>Returns the current path held by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>aa66e2aabfeab8b02ebba41784d02c3d6</Anchor>
    <Abstract>Returns the current permissions of the filesystem entry this object refers to.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymLinkObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a98285950c70acb6467301100d86736b3</Anchor>
    <Abstract>If this object refers to a symbolic link, constructs a SymLink object referring to the same link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a250685944655e222c88847369bf2d855</Anchor>
    <Abstract>Returns true if this file has a file extension.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a5140a8a866b878fcbfad3603b1a47985</Anchor>
    <Abstract>Returns true if this file has the specified file extension.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>afa056480600dcf01657dfe788c895de8</Anchor>
    <Abstract>Calculates a hash of the file&apos;s content using the specified hash type.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a76d80f597e36ed73ee5485d92d7bb428</Anchor>
    <Abstract>Returns true if the path this object holds is a relative path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a57c79f078776722cd7a9dff206fa0015</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a17aba38215d388c6fc7fcacf0fa32208</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a17f9ae14fe9aa594d0da270951d1fa29</Anchor>
    <Abstract>Returns true if the filename of this object begins with a .</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a2e1eef22931983bea56349c22d5adf63</Anchor>
    <Abstract>Returns true if the path this object holds is an absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a16b95513db39c4a7d78a344e5f45cfed</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a symbolic link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0701c63389a63f8bbed51c3aac8b1b6b</Anchor>
    <Abstract>Returns true if this object holds a valid filesystem path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>abee9fcba23eaf1bf624f8b2f9b499497</Anchor>
    <Abstract>If the path this object holds is already absolute, this function does nothing.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeToCWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afd5097cabdb383708b718eb70b2e2bcb</Anchor>
    <Abstract>Similar to makeAbsoluteRelativeTo(), but uses the current working directory as the base path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a897751bb8c3a7634ec7ed8303e560320</Anchor>
    <Abstract>Converts this filesystem entry to its absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1e84caf1c815c6012fc81386b1d0a119</Anchor>
    <Abstract>Returns a new FilesystemEntry referring to a subpath of this one.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4d10690764cb18d88cf6d3d79cb42756</Anchor>
    <Abstract>Assigns this object&apos;s path to a subpath of the current path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a7f1387331c848d5c694fa8ae2374ed33</Anchor>
    <Abstract>File is default copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>ab99246864863392cc87892be4f182d6a</Anchor>
    <Abstract>File is default movable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a2dd47edec337e34bd28dbda4f24a3b9f</Anchor>
    <Abstract>Renames this filesystem object to a new path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4b8ae8f254c6c9b17abdafb92c64b450</Anchor>
    <Abstract>Renames this filesystem entry to a new filename within its current directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>aa4ccf26180f511c19b56679f704702fb</Anchor>
    <Abstract>Replaces the filename in the path this object refers to.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4e1c18e47442416fe6b83a29fbace76e</Anchor>
    <Abstract>Sets the permissions for the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>aa77db7e8052144ae389d1bb100f253c2</Anchor>
    <Abstract>Returns the size, in bytes, of the filesystem entry referred to by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>addf51936721322625169b5ee31900072</Anchor>
    <Abstract>If the filesystem entry this object refers do doesn&apos;t exist, this function creates it.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch_noCreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a30b265a1ff9708e8e259227c95783aa7</Anchor>
    <Abstract>The same as touch(), except this function does not create the filesystem entry if it didn&apos;t already e...</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a96dc0a14ccf181ec94b45c745773581d</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>aa8bbdba4dd856f1e9898b50e8d859c23</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentExecutable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a124072e76219d4860f03f36fde78c504</Anchor>
    <Abstract>Returns a file representing the location of the executable file that launched the current process.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentModule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a9c282fc86537288306de9a3a79a76c0e</Anchor>
    <Abstract>Returns a file representing the location of the current code module.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>files::FilesystemEntry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Abstract>The base class for any kind of object in the filesystem.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CopyOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a74945df516560d81721125c34923d1dc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Permissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afd61b18fdf61fdaa9503289065c7dd89</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PermOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac5040d9cc3d3ba7f641ab25e89c18b80</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1a72fa462a280d1c5d625e9b1d1dac0e</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afeb046c3c1c4bbcee893b068c0c772ba</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>acd8b731c59a5ed01d59c37dc18895788</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a85096ce71f330fb7aac55818e976ab18</Anchor>
    <Abstract>Changes the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a539db4d6acb7e111e94460a40e1c8aa2</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac94cbb7cac53af77d84d537351cfd9e1</Anchor>
    <Abstract>Overwriting Overwrites this filesystem entry by copying from another location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9157e1aa99966fff615fe55d728f8ea8</Anchor>
    <Abstract>Creates a copy of this filesystem object, with the same filename, in a different directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIfDoesntExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0372477eba4e1e2be2e99320b70a04b0</Anchor>
    <Abstract>Creates the filesystem entry this object refers to, if it doesn&apos;t already exist.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteIfExists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad58e2731fc8305342086694ae82fb060</Anchor>
    <Abstract>Deletes the filesystem entry this object refers to, if it exists.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a09b3b1216d8d897947204e31c464b4cf</Anchor>
    <Abstract>Returns true if the filesystem object this object refers to exists on disk.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a61a768c3effba7e761f704532131dfcf</Anchor>
    <Abstract>Returns the full, absolute path of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a7382b6e12105957a50492570ab27f14f</Anchor>
    <Abstract>Returns the directory containing this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9be4fead3dca5059e31d0880f5502006</Anchor>
    <Abstract>If this object refers to a directory, constructs a Directory object referring to the same directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac6374d8381cd4cffa0a49b6a7e7b2180</Anchor>
    <Abstract>If this object refers to a file, constructs a File object referring to the same file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a64fdcc7065422efa75196de5bf804a19</Anchor>
    <Abstract>Returns the last modification time of the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad29e63925bc45b2ff88f2e957b604cb0</Anchor>
    <Abstract>Returns the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParentDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a81a33eb8cd834934f8a2ff44d1d6a096</Anchor>
    <Abstract>Returns the parent directory of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a15a943c53968c0fcbf42edfa99b45622</Anchor>
    <Abstract>Returns the current path held by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>aa66e2aabfeab8b02ebba41784d02c3d6</Anchor>
    <Abstract>Returns the current permissions of the filesystem entry this object refers to.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymLinkObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a98285950c70acb6467301100d86736b3</Anchor>
    <Abstract>If this object refers to a symbolic link, constructs a SymLink object referring to the same link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a76d80f597e36ed73ee5485d92d7bb428</Anchor>
    <Abstract>Returns true if the path this object holds is a relative path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a57c79f078776722cd7a9dff206fa0015</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a17aba38215d388c6fc7fcacf0fa32208</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a17f9ae14fe9aa594d0da270951d1fa29</Anchor>
    <Abstract>Returns true if the filename of this object begins with a .</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a2e1eef22931983bea56349c22d5adf63</Anchor>
    <Abstract>Returns true if the path this object holds is an absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a16b95513db39c4a7d78a344e5f45cfed</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a symbolic link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0701c63389a63f8bbed51c3aac8b1b6b</Anchor>
    <Abstract>Returns true if this object holds a valid filesystem path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>abee9fcba23eaf1bf624f8b2f9b499497</Anchor>
    <Abstract>If the path this object holds is already absolute, this function does nothing.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeToCWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afd5097cabdb383708b718eb70b2e2bcb</Anchor>
    <Abstract>Similar to makeAbsoluteRelativeTo(), but uses the current working directory as the base path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a897751bb8c3a7634ec7ed8303e560320</Anchor>
    <Abstract>Converts this filesystem entry to its absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1e84caf1c815c6012fc81386b1d0a119</Anchor>
    <Abstract>Returns a new FilesystemEntry referring to a subpath of this one.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4d10690764cb18d88cf6d3d79cb42756</Anchor>
    <Abstract>Assigns this object&apos;s path to a subpath of the current path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ab32b0c954f635941eef8114e15e7a1ce</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>acce9b12f46b6c466054b6004795989a8</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a2dd47edec337e34bd28dbda4f24a3b9f</Anchor>
    <Abstract>Renames this filesystem object to a new path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4b8ae8f254c6c9b17abdafb92c64b450</Anchor>
    <Abstract>Renames this filesystem entry to a new filename within its current directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4e1c18e47442416fe6b83a29fbace76e</Anchor>
    <Abstract>Sets the permissions for the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>aa77db7e8052144ae389d1bb100f253c2</Anchor>
    <Abstract>Returns the size, in bytes, of the filesystem entry referred to by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>addf51936721322625169b5ee31900072</Anchor>
    <Abstract>If the filesystem entry this object refers do doesn&apos;t exist, this function creates it.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch_noCreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a30b265a1ff9708e8e259227c95783aa7</Anchor>
    <Abstract>The same as touch(), except this function does not create the filesystem entry if it didn&apos;t already e...</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>adeb5caaa30bfa36d21f38ddd9239deaa</Anchor>
    <Abstract>Creates a FilesystemEntry with an empty path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad880842142372c42cc2ece037107818b</Anchor>
    <Abstract>Creates a FilesystemEntry referring to the specified path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a83f06de2ec3b1d270379e8dd2a8775b3</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a3466532903bf97e43a8fa373394ff33a</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a5e9c245f1c3a4c56e133370b0da16dae</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>files::SymLink</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Abstract>This class represents a symbolic link on the filesystem.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CopyOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a74945df516560d81721125c34923d1dc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Permissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afd61b18fdf61fdaa9503289065c7dd89</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PermOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac5040d9cc3d3ba7f641ab25e89c18b80</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>a63ac6c270cc0143e6774d1d67c8fd264</Anchor>
    <Abstract>Creates a symbolic link object (the link itself will also be created on the filesystem).</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>ade95219b93b272fefff87a56e9494708</Anchor>
    <Abstract>SymLink is default copyable.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>a573011cda3aace754453bbe72571fa38</Anchor>
    <Abstract>SymLink is default movable.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a85096ce71f330fb7aac55818e976ab18</Anchor>
    <Abstract>Changes the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a539db4d6acb7e111e94460a40e1c8aa2</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac94cbb7cac53af77d84d537351cfd9e1</Anchor>
    <Abstract>Overwriting Overwrites this filesystem entry by copying from another location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9157e1aa99966fff615fe55d728f8ea8</Anchor>
    <Abstract>Creates a copy of this filesystem object, with the same filename, in a different directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIfDoesntExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0372477eba4e1e2be2e99320b70a04b0</Anchor>
    <Abstract>Creates the filesystem entry this object refers to, if it doesn&apos;t already exist.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteIfExists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad58e2731fc8305342086694ae82fb060</Anchor>
    <Abstract>Deletes the filesystem entry this object refers to, if it exists.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a09b3b1216d8d897947204e31c464b4cf</Anchor>
    <Abstract>Returns true if the filesystem object this object refers to exists on disk.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>adeb5caaa30bfa36d21f38ddd9239deaa</Anchor>
    <Abstract>Creates a FilesystemEntry with an empty path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>a1a72fa462a280d1c5d625e9b1d1dac0e</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>ad880842142372c42cc2ece037107818b</Anchor>
    <Abstract>Creates a FilesystemEntry referring to the specified path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>afeb046c3c1c4bbcee893b068c0c772ba</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>follow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>a4a908152cd372d3d3bd346d0ec7d5a70</Anchor>
    <Abstract>Follows the symbolic link to find its target.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a61a768c3effba7e761f704532131dfcf</Anchor>
    <Abstract>Returns the full, absolute path of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a7382b6e12105957a50492570ab27f14f</Anchor>
    <Abstract>Returns the directory containing this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9be4fead3dca5059e31d0880f5502006</Anchor>
    <Abstract>If this object refers to a directory, constructs a Directory object referring to the same directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac6374d8381cd4cffa0a49b6a7e7b2180</Anchor>
    <Abstract>If this object refers to a file, constructs a File object referring to the same file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a64fdcc7065422efa75196de5bf804a19</Anchor>
    <Abstract>Returns the last modification time of the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad29e63925bc45b2ff88f2e957b604cb0</Anchor>
    <Abstract>Returns the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParentDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a81a33eb8cd834934f8a2ff44d1d6a096</Anchor>
    <Abstract>Returns the parent directory of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a15a943c53968c0fcbf42edfa99b45622</Anchor>
    <Abstract>Returns the current path held by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>aa66e2aabfeab8b02ebba41784d02c3d6</Anchor>
    <Abstract>Returns the current permissions of the filesystem entry this object refers to.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymLinkObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a98285950c70acb6467301100d86736b3</Anchor>
    <Abstract>If this object refers to a symbolic link, constructs a SymLink object referring to the same link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a76d80f597e36ed73ee5485d92d7bb428</Anchor>
    <Abstract>Returns true if the path this object holds is a relative path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a57c79f078776722cd7a9dff206fa0015</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a17aba38215d388c6fc7fcacf0fa32208</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a17f9ae14fe9aa594d0da270951d1fa29</Anchor>
    <Abstract>Returns true if the filename of this object begins with a .</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a2e1eef22931983bea56349c22d5adf63</Anchor>
    <Abstract>Returns true if the path this object holds is an absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a16b95513db39c4a7d78a344e5f45cfed</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a symbolic link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0701c63389a63f8bbed51c3aac8b1b6b</Anchor>
    <Abstract>Returns true if this object holds a valid filesystem path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>abee9fcba23eaf1bf624f8b2f9b499497</Anchor>
    <Abstract>If the path this object holds is already absolute, this function does nothing.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeToCWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afd5097cabdb383708b718eb70b2e2bcb</Anchor>
    <Abstract>Similar to makeAbsoluteRelativeTo(), but uses the current working directory as the base path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a897751bb8c3a7634ec7ed8303e560320</Anchor>
    <Abstract>Converts this filesystem entry to its absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1e84caf1c815c6012fc81386b1d0a119</Anchor>
    <Abstract>Returns a new FilesystemEntry referring to a subpath of this one.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4d10690764cb18d88cf6d3d79cb42756</Anchor>
    <Abstract>Assigns this object&apos;s path to a subpath of the current path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>aaa2c76039ceced6abb4180413fa5f257</Anchor>
    <Abstract>SymLink is default copyable.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>aafcdc0b5b07182ac4a9fb46c6c0e580b</Anchor>
    <Abstract>SymLink is default movable.</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>references</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>a38c2972a24dc4062f8a4c3dfb9ce91da</Anchor>
    <Abstract>Returns true if this symbolic link references the given FilesystemEntry, either as its immediate targ...</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referencesSameLocationAs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>a44f33f71cb2646cc3ef8420105da3f76</Anchor>
    <Abstract>Returns true if the other symbolic link references the same target as this one, either as its immedia...</Abstract>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a2dd47edec337e34bd28dbda4f24a3b9f</Anchor>
    <Abstract>Renames this filesystem object to a new path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4b8ae8f254c6c9b17abdafb92c64b450</Anchor>
    <Abstract>Renames this filesystem entry to a new filename within its current directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4e1c18e47442416fe6b83a29fbace76e</Anchor>
    <Abstract>Sets the permissions for the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>aa77db7e8052144ae389d1bb100f253c2</Anchor>
    <Abstract>Returns the size, in bytes, of the filesystem entry referred to by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>addf51936721322625169b5ee31900072</Anchor>
    <Abstract>If the filesystem entry this object refers do doesn&apos;t exist, this function creates it.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch_noCreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a30b265a1ff9708e8e259227c95783aa7</Anchor>
    <Abstract>The same as touch(), except this function does not create the filesystem entry if it didn&apos;t already e...</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>a2602a824bad4b330edfd5189512f2c72</Anchor>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::SymLink</Scope>
    </TokenIdentifier>
    <Path>de/d90/classfiles_1_1_sym_link.html</Path>
    <Anchor>a0c66cf1d06c55821e0bd22d1e775f27f</Anchor>
    <DeclaredIn>sym_link.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>files::TempFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d5/db7/classfiles_1_1_temp_file.html</Path>
    <Abstract>Represents a temporary file.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CopyOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a74945df516560d81721125c34923d1dc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Permissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afd61b18fdf61fdaa9503289065c7dd89</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PermOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac5040d9cc3d3ba7f641ab25e89c18b80</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TempFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d5/db7/classfiles_1_1_temp_file.html</Path>
    <Anchor>abc11552c6afcbc5a4db364a1ec6c3a7f</Anchor>
    <Abstract>Creates a temporary file with the specified filename.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TempFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d5/db7/classfiles_1_1_temp_file.html</Path>
    <Anchor>a1e2f8da4025b571987efc0c5cfbbdace</Anchor>
    <Abstract>TempFile is not copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TempFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d5/db7/classfiles_1_1_temp_file.html</Path>
    <Anchor>ac8d69280968c87edebe8a5ad6716cc06</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TempFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d5/db7/classfiles_1_1_temp_file.html</Path>
    <Anchor>a697e8a08d2b922c6d5fde538fcad6a70</Anchor>
    <Abstract>The temporary file will be deleted from the filesystem when this object is destroyed,...</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a85096ce71f330fb7aac55818e976ab18</Anchor>
    <Abstract>Changes the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a539db4d6acb7e111e94460a40e1c8aa2</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac94cbb7cac53af77d84d537351cfd9e1</Anchor>
    <Abstract>Overwriting Overwrites this filesystem entry by copying from another location.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyToDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9157e1aa99966fff615fe55d728f8ea8</Anchor>
    <Abstract>Creates a copy of this filesystem object, with the same filename, in a different directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createIfDoesntExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0372477eba4e1e2be2e99320b70a04b0</Anchor>
    <Abstract>Creates the filesystem entry this object refers to, if it doesn&apos;t already exist.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteIfExists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad58e2731fc8305342086694ae82fb060</Anchor>
    <Abstract>Deletes the filesystem entry this object refers to, if it exists.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duplicate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a99c52ca9ad5e511b5cf78c7d5fcc4046</Anchor>
    <Abstract>Duplicates this file within its directory.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a09b3b1216d8d897947204e31c464b4cf</Anchor>
    <Abstract>Returns true if the filesystem object this object refers to exists on disk.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>adeb5caaa30bfa36d21f38ddd9239deaa</Anchor>
    <Abstract>Creates a FilesystemEntry with an empty path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a1a72fa462a280d1c5d625e9b1d1dac0e</Anchor>
    <Abstract>FilesystemEntry is default copyable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>ad880842142372c42cc2ece037107818b</Anchor>
    <Abstract>Creates a FilesystemEntry referring to the specified path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilesystemEntry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>afeb046c3c1c4bbcee893b068c0c772ba</Anchor>
    <Abstract>FilesystemEntry is default movable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a61a768c3effba7e761f704532131dfcf</Anchor>
    <Abstract>Returns the full, absolute path of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a2eca747ae1667bf745be309250f40092</Anchor>
    <Abstract>Returns a CFile referring to this file.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a7382b6e12105957a50492570ab27f14f</Anchor>
    <Abstract>Returns the directory containing this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9be4fead3dca5059e31d0880f5502006</Anchor>
    <Abstract>If this object refers to a directory, constructs a Directory object referring to the same directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a36f8e632720b563a204432b1cc405491</Anchor>
    <Abstract>Returns this file&apos;s file extension, if any.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>acba956c018ec61c99ac0888de41e97b5</Anchor>
    <Abstract>Returns this file&apos;s filename.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac6374d8381cd4cffa0a49b6a7e7b2180</Anchor>
    <Abstract>If this object refers to a file, constructs a File object referring to the same file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a64fdcc7065422efa75196de5bf804a19</Anchor>
    <Abstract>Returns the last modification time of the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ad29e63925bc45b2ff88f2e957b604cb0</Anchor>
    <Abstract>Returns the last section of the path (the filename).</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParentDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a81a33eb8cd834934f8a2ff44d1d6a096</Anchor>
    <Abstract>Returns the parent directory of this filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a15a943c53968c0fcbf42edfa99b45622</Anchor>
    <Abstract>Returns the current path held by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>aa66e2aabfeab8b02ebba41784d02c3d6</Anchor>
    <Abstract>Returns the current permissions of the filesystem entry this object refers to.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymLinkObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a98285950c70acb6467301100d86736b3</Anchor>
    <Abstract>If this object refers to a symbolic link, constructs a SymLink object referring to the same link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a250685944655e222c88847369bf2d855</Anchor>
    <Abstract>Returns true if this file has a file extension.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a5140a8a866b878fcbfad3603b1a47985</Anchor>
    <Abstract>Returns true if this file has the specified file extension.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>afa056480600dcf01657dfe788c895de8</Anchor>
    <Abstract>Calculates a hash of the file&apos;s content using the specified hash type.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAbsolutePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a76d80f597e36ed73ee5485d92d7bb428</Anchor>
    <Abstract>Returns true if the path this object holds is a relative path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a57c79f078776722cd7a9dff206fa0015</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a17aba38215d388c6fc7fcacf0fa32208</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a file.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a17f9ae14fe9aa594d0da270951d1fa29</Anchor>
    <Abstract>Returns true if the filename of this object begins with a .</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a2e1eef22931983bea56349c22d5adf63</Anchor>
    <Abstract>Returns true if the path this object holds is an absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSymLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a16b95513db39c4a7d78a344e5f45cfed</Anchor>
    <Abstract>Returns true if this filesystem entry refers to a symbolic link.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0701c63389a63f8bbed51c3aac8b1b6b</Anchor>
    <Abstract>Returns true if this object holds a valid filesystem path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>abee9fcba23eaf1bf624f8b2f9b499497</Anchor>
    <Abstract>If the path this object holds is already absolute, this function does nothing.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeAbsoluteRelativeToCWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>afd5097cabdb383708b718eb70b2e2bcb</Anchor>
    <Abstract>Similar to makeAbsoluteRelativeTo(), but uses the current working directory as the base path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a897751bb8c3a7634ec7ed8303e560320</Anchor>
    <Abstract>Converts this filesystem entry to its absolute path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1e84caf1c815c6012fc81386b1d0a119</Anchor>
    <Abstract>Returns a new FilesystemEntry referring to a subpath of this one.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4d10690764cb18d88cf6d3d79cb42756</Anchor>
    <Abstract>Assigns this object&apos;s path to a subpath of the current path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d5/db7/classfiles_1_1_temp_file.html</Path>
    <Anchor>ad16debd05ba97fd05664a4d3071f7a1e</Anchor>
    <Abstract>TempFile is not copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d5/db7/classfiles_1_1_temp_file.html</Path>
    <Anchor>afe74ffd7e00fbed924f97e7ec5b800d4</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a2dd47edec337e34bd28dbda4f24a3b9f</Anchor>
    <Abstract>Renames this filesystem object to a new path.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4b8ae8f254c6c9b17abdafb92c64b450</Anchor>
    <Abstract>Renames this filesystem entry to a new filename within its current directory.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>aa4ccf26180f511c19b56679f704702fb</Anchor>
    <Abstract>Replaces the filename in the path this object refers to.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPermissions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a4e1c18e47442416fe6b83a29fbace76e</Anchor>
    <Abstract>Sets the permissions for the filesystem entry.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>aa77db7e8052144ae389d1bb100f253c2</Anchor>
    <Abstract>Returns the size, in bytes, of the filesystem entry referred to by this object.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>addf51936721322625169b5ee31900072</Anchor>
    <Abstract>If the filesystem entry this object refers do doesn&apos;t exist, this function creates it.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch_noCreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a30b265a1ff9708e8e259227c95783aa7</Anchor>
    <Abstract>The same as touch(), except this function does not create the filesystem entry if it didn&apos;t already e...</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a5e9c245f1c3a4c56e133370b0da16dae</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a39c47e9198d7ab0b4f6ccfbed4baa573</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a6d0122d220195391ac56a0c6eca59f20</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac9db57bad6a400a6eb566ec3f9c56a86</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>abd6c09d9c465c1c2b1363a6c44385305</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a545a7e7a9112a4cc774ee0fdd44e68ef</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1cd7d5078e805a9870dbfb2c02750824</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0b4a6dae47a822e2b2c8b30760563e76</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1875e9ce57d6def5cbe9df2cd2619b06</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9e2f369f3eb273983be58c9029139b88</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a8d6550662813b370bbd5d41cb6c8cf1f</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a2159ae59674828bbc5cee4e153833a1c</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a9627bb228737520c388da0845c484eaa</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a574cc53d8c693e05cc16140ad2749f51</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a8e8cd937c5af3561b965549af27b788a</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a83149b8985076cf369920b7db3f254f7</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a1c96320a28b2ce7d03bb3730b0d67a12</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a53c3ba75be794be036afbecd5a852ea5</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a71a77f69aa5a90a58a92c64ca3747b0d</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>adda4894496bc6d82c7d24996e4c0bd9e</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>aead7f35a2ef3d7af169bf3643972885e</Anchor>
    <Abstract>Loads the file&apos;s contents as a RawData object.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a0c3bb4bd3c7f3d998816d28762ce8ec6</Anchor>
    <Abstract>Loads the file&apos;s contents as a string.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsLines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a488ce1dd0d2c587526452a78311fd589</Anchor>
    <Abstract>Loads the file&apos;s contents as a vector of strings, with each string containing the contents of one lin...</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a5e9c245f1c3a4c56e133370b0da16dae</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a39c47e9198d7ab0b4f6ccfbed4baa573</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a6d0122d220195391ac56a0c6eca59f20</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac9db57bad6a400a6eb566ec3f9c56a86</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>abd6c09d9c465c1c2b1363a6c44385305</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a545a7e7a9112a4cc774ee0fdd44e68ef</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1cd7d5078e805a9870dbfb2c02750824</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0b4a6dae47a822e2b2c8b30760563e76</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1875e9ce57d6def5cbe9df2cd2619b06</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9e2f369f3eb273983be58c9029139b88</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a8d6550662813b370bbd5d41cb6c8cf1f</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a39c47e9198d7ab0b4f6ccfbed4baa573</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a6d0122d220195391ac56a0c6eca59f20</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac9db57bad6a400a6eb566ec3f9c56a86</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>abd6c09d9c465c1c2b1363a6c44385305</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a545a7e7a9112a4cc774ee0fdd44e68ef</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0b4a6dae47a822e2b2c8b30760563e76</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1cd7d5078e805a9870dbfb2c02750824</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1875e9ce57d6def5cbe9df2cd2619b06</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9e2f369f3eb273983be58c9029139b88</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a8d6550662813b370bbd5d41cb6c8cf1f</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a5e9c245f1c3a4c56e133370b0da16dae</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a39c47e9198d7ab0b4f6ccfbed4baa573</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a6d0122d220195391ac56a0c6eca59f20</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac9db57bad6a400a6eb566ec3f9c56a86</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>abd6c09d9c465c1c2b1363a6c44385305</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a545a7e7a9112a4cc774ee0fdd44e68ef</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1cd7d5078e805a9870dbfb2c02750824</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0b4a6dae47a822e2b2c8b30760563e76</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1875e9ce57d6def5cbe9df2cd2619b06</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9e2f369f3eb273983be58c9029139b88</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a8d6550662813b370bbd5d41cb6c8cf1f</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a2159ae59674828bbc5cee4e153833a1c</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a9627bb228737520c388da0845c484eaa</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overwrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a574cc53d8c693e05cc16140ad2749f51</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a8e8cd937c5af3561b965549af27b788a</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a83149b8985076cf369920b7db3f254f7</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a1c96320a28b2ce7d03bb3730b0d67a12</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a53c3ba75be794be036afbecd5a852ea5</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a71a77f69aa5a90a58a92c64ca3747b0d</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>adda4894496bc6d82c7d24996e4c0bd9e</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>aead7f35a2ef3d7af169bf3643972885e</Anchor>
    <Abstract>Loads the file&apos;s contents as a RawData object.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a0c3bb4bd3c7f3d998816d28762ce8ec6</Anchor>
    <Abstract>Loads the file&apos;s contents as a string.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsLines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a488ce1dd0d2c587526452a78311fd589</Anchor>
    <Abstract>Loads the file&apos;s contents as a vector of strings, with each string containing the contents of one lin...</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assignPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a5e9c245f1c3a4c56e133370b0da16dae</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a39c47e9198d7ab0b4f6ccfbed4baa573</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a6d0122d220195391ac56a0c6eca59f20</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>ac9db57bad6a400a6eb566ec3f9c56a86</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>abd6c09d9c465c1c2b1363a6c44385305</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a545a7e7a9112a4cc774ee0fdd44e68ef</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1cd7d5078e805a9870dbfb2c02750824</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a0b4a6dae47a822e2b2c8b30760563e76</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a1875e9ce57d6def5cbe9df2cd2619b06</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a9e2f369f3eb273983be58c9029139b88</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>files::FilesystemEntry</Scope>
    </TokenIdentifier>
    <Path>de/d3d/classfiles_1_1_filesystem_entry.html</Path>
    <Anchor>a8d6550662813b370bbd5d41cb6c8cf1f</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentExecutable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a124072e76219d4860f03f36fde78c504</Anchor>
    <Abstract>Returns a file representing the location of the executable file that launched the current process.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentModule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::File</Scope>
    </TokenIdentifier>
    <Path>df/dcc/classfiles_1_1_file.html</Path>
    <Anchor>a9c282fc86537288306de9a3a79a76c0e</Anchor>
    <Abstract>Returns a file representing the location of the current code module.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>files::TempFile</Scope>
    </TokenIdentifier>
    <Path>d5/db7/classfiles_1_1_temp_file.html</Path>
    <Anchor>ac0a6ea55732b596693321b08ae9cc710</Anchor>
    <Abstract>Returns a new temporary file, with the name generated using a counter specific to the current process...</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>func</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>d9/dd6/namespacefunc.html</Path>
    <Abstract>This namespace contains some utilities for working with higher-level functions and functions as objec...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga734e223214335b499b76e734d6c3771f</Anchor>
    <Abstract>This typedef evaluates to the result type returned by calling the given function with the given argum...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>call_once</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga721d87621ab2fa2ff1ab032652d0b035</Anchor>
    <Abstract>Calls the function object exactly once throughout the entire life of the program.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consteval_invoke</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>gaca5e418d69ffceeb71b3ba29e6539e3c</Anchor>
    <Abstract>Forces a given function to be executed at compile time.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>curry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga0c20c15a7d3553a54d6fc156280e9705</Anchor>
    <Abstract>Breaks down a function that takes multiple arguments into a series of functions that each take one ar...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>try_call</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga2c54695eb338963524e6830107685528</Anchor>
    <Abstract>Executes a potentially-throwing function within a try-catch block, and returns false if an exception ...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>func</Scope>
    </TokenIdentifier>
    <Path>de/d94/group__func.html</Path>
    <Anchor>ga3dbd7fc208fe38c48614027d7480df86</Anchor>
    <Abstract>@concept Function This concept simply requires that an object is invocable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>func::CallDeferred</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>df/deb/classfunc_1_1_call_deferred.html</Path>
    <Abstract>This class calls a given function when its destructor is executed.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallDeferred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>df/deb/classfunc_1_1_call_deferred.html</Path>
    <Anchor>a5633df25a043f84d6d64f72fbb453b26</Anchor>
    <Abstract>CallDeferred is not movable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallDeferred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>df/deb/classfunc_1_1_call_deferred.html</Path>
    <Anchor>a50c29ae3c01eec9ad95d2cc473c100cc</Anchor>
    <Abstract>CallDeferred is not copyable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallDeferred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>df/deb/classfunc_1_1_call_deferred.html</Path>
    <Anchor>a982b418c7462946195962fbf737858da</Anchor>
    <Abstract>The constructor simply stores the function object, it does not execute it.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CallDeferred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>df/deb/classfunc_1_1_call_deferred.html</Path>
    <Anchor>a34e1511dbf24937e363b0c6485a2db45</Anchor>
    <Abstract>The destructor executes the stored function.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>df/deb/classfunc_1_1_call_deferred.html</Path>
    <Anchor>a1df35248e1a15c2be4127513d2b4bca0</Anchor>
    <Abstract>CallDeferred is not movable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::CallDeferred</Scope>
    </TokenIdentifier>
    <Path>df/deb/classfunc_1_1_call_deferred.html</Path>
    <Anchor>abbb34bc71dd9511f7bfc1ada0d8a35fc</Anchor>
    <Abstract>CallDeferred is not copyable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>func::RAIICaller</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>db/d9b/classfunc_1_1_r_a_i_i_caller.html</Path>
    <Abstract>This generic RAII object allows you to specify a function to be called when it is created and when it...</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RAIICaller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>db/d9b/classfunc_1_1_r_a_i_i_caller.html</Path>
    <Anchor>a94cef61b8b13aeb2c3c5212aa11f5c70</Anchor>
    <Abstract>RAIICaller is not copyable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RAIICaller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>db/d9b/classfunc_1_1_r_a_i_i_caller.html</Path>
    <Anchor>a8b41153bd210b093634fb9b877fec3c4</Anchor>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RAIICaller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>db/d9b/classfunc_1_1_r_a_i_i_caller.html</Path>
    <Anchor>a1fd2a5b624d8658763520c837cc87d5c</Anchor>
    <Abstract>RAIICaller is not movable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RAIICaller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>db/d9b/classfunc_1_1_r_a_i_i_caller.html</Path>
    <Anchor>a92c11a602d408f245a8bae6f61d9c332</Anchor>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>db/d9b/classfunc_1_1_r_a_i_i_caller.html</Path>
    <Anchor>a6873350f48d6e25edaa49e4d7de02ca1</Anchor>
    <Abstract>RAIICaller is not copyable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>func::RAIICaller</Scope>
    </TokenIdentifier>
    <Path>db/d9b/classfunc_1_1_r_a_i_i_caller.html</Path>
    <Anchor>a148293e71d538f31c56e5ca9b4fb2603</Anchor>
    <Abstract>RAIICaller is not movable.</Abstract>
    <DeclaredIn>Functions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>de/de9/namespacehash.html</Path>
    <Abstract>This namespace contains some common hash functions and utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga4598ffcc4268a107b17fccc0d7ca0ec1</Anchor>
    <Abstract>Calculates an MD5 hash for the given data.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md5</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf105596223e1d9106a443b06d88fe0a5</Anchor>
    <Abstract>Calculates an MD5 hash for the given string.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaec09524a0a9cc79b26e87a240facbbcb</Anchor>
    <Abstract>Calculates a SHA1 hash for the given data.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafb781672efaf0f254df585afccf25cdd</Anchor>
    <Abstract>Calculates a SHA1 hash for the given string.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf310bd761cb2ea60eed063dc94a6cb3a</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha224</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaeec722719abbee6f990150f730ef1040</Anchor>
    <Abstract>Calculates a SHA224 hash for the given data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gacd24c7afd31ac2e87dcd259e82a0ea89</Anchor>
    <Abstract>Calculates a SHA256 hash for the given data.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga92457f7ebfc4fae0430d496b9f251caf</Anchor>
    <Abstract>Calculates a SHA256 hash for the given string.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga8372b451a4621a1c99c2c0113512e2c2</Anchor>
    <Abstract>Calculates a SHA384 hash for the given data.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha384</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gafadeb5a87633e046e82bee60fe2ed296</Anchor>
    <Abstract>Calculates a SHA384 hash for the given string.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gab0212a06ee094fda760117932208ae08</Anchor>
    <Abstract>Calculates a SHA512 hash for the given data.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga3f9a0a53e41ac8e17fa40128bd8864a0</Anchor>
    <Abstract>Calculates a SHA512 hash for the given string.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createHasherForType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga93880e4516879865db6f778fbe52858e</Anchor>
    <Abstract>Creates an appropriate Hasher for the given Type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>ga77f8b860e06068de15d1b5884ffffe7e</Anchor>
    <Abstract>Calculates a hash value for the input data using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash</Scope>
    </TokenIdentifier>
    <Path>db/d97/group__hashes.html</Path>
    <Anchor>gaf2f7e434e212f85cd74b50d6a2aa5b03</Anchor>
    <Abstract>Calculates a hash value for the input string using a hasher appropriate for the desired type.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash::Hasher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Abstract>A base class representing an object that calculates a hash function.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Hasher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Anchor>a1fb8089c01dc0914c3744b66aad5af69</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Anchor>abd33dbf72b84d4613a2bb582a80928de</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Anchor>a21edb89665b60700c7c85430d900637d</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Anchor>a9dca4b7dea9a080b4e4da5ab84cc23f2</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash::MD5</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>hash::MD5</Scope>
    </TokenIdentifier>
    <Path>dc/d36/classhash_1_1_m_d5.html</Path>
    <Abstract>A Hasher object that calculates an MD5 hash.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::MD5</Scope>
    </TokenIdentifier>
    <Path>dc/d36/classhash_1_1_m_d5.html</Path>
    <Anchor>a9e51d16b14d4db4398eaf84889bc56da</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Anchor>a21edb89665b60700c7c85430d900637d</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::MD5</Scope>
    </TokenIdentifier>
    <Path>dc/d36/classhash_1_1_m_d5.html</Path>
    <Anchor>ac7e1c2002539725590d5ef645533e94b</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>md5.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash::SHA1</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>hash::SHA1</Scope>
    </TokenIdentifier>
    <Path>d9/d90/classhash_1_1_s_h_a1.html</Path>
    <Abstract>A Hasher object that calculates a SHA1 hash.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::SHA1</Scope>
    </TokenIdentifier>
    <Path>d9/d90/classhash_1_1_s_h_a1.html</Path>
    <Anchor>acc63dbaee8972a2a2a145cf511d92b60</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Anchor>a21edb89665b60700c7c85430d900637d</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::SHA1</Scope>
    </TokenIdentifier>
    <Path>d9/d90/classhash_1_1_s_h_a1.html</Path>
    <Anchor>a849ba4f1cbf0dbdcb96db194bb23a851</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>sha1.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash::SHA224</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>hash::SHA224</Scope>
    </TokenIdentifier>
    <Path>d4/dc3/classhash_1_1_s_h_a224.html</Path>
    <Abstract>A Hasher object that calculates a SHA224 hash.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::SHA224</Scope>
    </TokenIdentifier>
    <Path>d4/dc3/classhash_1_1_s_h_a224.html</Path>
    <Anchor>ab5ebd083bcb3f533dc4aba87f6334969</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Anchor>a21edb89665b60700c7c85430d900637d</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::SHA224</Scope>
    </TokenIdentifier>
    <Path>d4/dc3/classhash_1_1_s_h_a224.html</Path>
    <Anchor>aa98dd601c436d48ce53b725dd354b74a</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>sha224.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash::SHA256</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>hash::SHA256</Scope>
    </TokenIdentifier>
    <Path>d4/d97/classhash_1_1_s_h_a256.html</Path>
    <Abstract>A Hasher object that calculates a SHA256 hash.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::SHA256</Scope>
    </TokenIdentifier>
    <Path>d4/d97/classhash_1_1_s_h_a256.html</Path>
    <Anchor>a2717902eee5b200844cf10b685428628</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Anchor>a21edb89665b60700c7c85430d900637d</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::SHA256</Scope>
    </TokenIdentifier>
    <Path>d4/d97/classhash_1_1_s_h_a256.html</Path>
    <Anchor>aaebbd94fc4850fe0448346b1a4e29d54</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>sha256.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash::SHA384</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>hash::SHA384</Scope>
    </TokenIdentifier>
    <Path>da/d0a/classhash_1_1_s_h_a384.html</Path>
    <Abstract>A Hasher object that calculates a SHA384 hash.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::SHA384</Scope>
    </TokenIdentifier>
    <Path>da/d0a/classhash_1_1_s_h_a384.html</Path>
    <Anchor>a77ae6ae264dfb7dd82846f670132f2a3</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Anchor>a21edb89665b60700c7c85430d900637d</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::SHA384</Scope>
    </TokenIdentifier>
    <Path>da/d0a/classhash_1_1_s_h_a384.html</Path>
    <Anchor>a555eedab613686b7846ffd3dc1473b9e</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>sha384.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash::SHA512</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>hash::SHA512</Scope>
    </TokenIdentifier>
    <Path>d9/d5e/classhash_1_1_s_h_a512.html</Path>
    <Abstract>A Hasher object that calculates a SHA512 hash.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::SHA512</Scope>
    </TokenIdentifier>
    <Path>d9/d5e/classhash_1_1_s_h_a512.html</Path>
    <Anchor>adcc848c31242fd39a173335f0c990fe3</Anchor>
    <Abstract>Retrieves the calculated hash value as a string.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::Hasher</Scope>
    </TokenIdentifier>
    <Path>de/d65/classhash_1_1_hasher.html</Path>
    <Anchor>a21edb89665b60700c7c85430d900637d</Anchor>
    <Abstract>Updates the internal state of the hasher with some new data.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>hash::SHA512</Scope>
    </TokenIdentifier>
    <Path>d9/d5e/classhash_1_1_s_h_a512.html</Path>
    <Anchor>ad23f5c83c08bd28b3218bc38d097d888</Anchor>
    <Abstract>Updates the internal state of the hasher with new data.</Abstract>
    <DeclaredIn>sha512.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash::util</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a0596e0ff48ecb615b3baf469e953c2fb</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ae633d08d56b7f37014a8429fd951d6cb</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a06ca06f131cf8d7d022a70c631436d78</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a23bdffac119b6f557253ff55ee31ba0d</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256_F1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a32b19ed72a3d908b303ae734d2f694d3</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256_F2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ad0e56812713a653e8e48f705ab8a83ce</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256_F3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a9de1cd09733b73bf2fe95dc1de491bb0</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256_F4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a6be4f1e7e3d1b09029e2813627a4c0d7</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512_F1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ac3a19d933af69aca69536b939395d0bf</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512_F2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ac45cfec8e6bc211cb89bb65746b176fd</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512_F3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a9e3d4844584dc05c8ed549342d5fe4a6</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512_F4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ad5fa20a6ba712f8a8fe15abb3a2d5c4b</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unpack32</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>aec89267b2687a40779c65bfc0805c984</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unpack64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a94e1e34836c9520e1042c8839cbd3086</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha256_k</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>a3d7cecc329ad4328154b5341f2824ae9</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sha512_k</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>hash::util</Scope>
    </TokenIdentifier>
    <Path>db/d61/namespacehash_1_1util.html</Path>
    <Anchor>ac393c58bc5fe80f301064c8fdc409aac</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>json</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>d1/db2/namespacejson.html</Path>
    <Abstract>This namespace contains utilities for working with JSON.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>d1/db2/namespacejson.html</Path>
    <Anchor>a69fe2c5b4fa24c7d464058ff94e772b5</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Number</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>d1/db2/namespacejson.html</Path>
    <Anchor>ab9033928f827dd8617b0431ad7f31c44ab2ee912b91d69b435159c7c3f6df7f5f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>String</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>d1/db2/namespacejson.html</Path>
    <Anchor>ab9033928f827dd8617b0431ad7f31c44a27118326006d3829667a400ad23d5d98</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Boolean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>d1/db2/namespacejson.html</Path>
    <Anchor>ab9033928f827dd8617b0431ad7f31c44a27226c864bac7454a8504f8edb15d95b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>d1/db2/namespacejson.html</Path>
    <Anchor>ab9033928f827dd8617b0431ad7f31c44a4410ec34d9e6c1a68100ca0ce033fb17</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>d1/db2/namespacejson.html</Path>
    <Anchor>ab9033928f827dd8617b0431ad7f31c44a497031794414a552435f90151ac3b54b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Null</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>d1/db2/namespacejson.html</Path>
    <Anchor>ab9033928f827dd8617b0431ad7f31c44abbb93ef26e3c101ff11cdd21cab08a94</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>json::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Abstract>Represents any kind of JSON object.</Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Array</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a7829e9f6557f3353a60ff6aa4c2248fa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a24fa8b82f229a1628440d5e5036a26db</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectField</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a99c01bb57a49777e33750aaf04dfffb3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a72d46051da79fa327f651ebb530e4ef5</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>ab5a535258517b2c320b19fab08ebcc05</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a41b6e77377e2dec336ebe106d44f1322</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChildArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>af5a4572fe2a1f3c76d0eebb3d2395402</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChildBoolean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a414deb91f742fd86e5a68d20c19b80e2</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChildNull</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a2f5bc5848e6485995be0644a65b906f5</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChildNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a4c290dd594c3a3559dcf6a4c64ec55b2</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChildObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>aa5434bb4b5306e49aeff06231abfad75</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChildString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a9961deddf12c5ec69d6e89660cc352f0</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a759797397ce11f4dfec0fc2a350e9b45</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoolean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a7c138f1bd2082fb6d89e796a7bc034fb</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDebugString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a02d752be84f8929e28738ba1fb05a65a</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJsonText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a7f78595e84725cda2da7ffd2d0d770ab</Anchor>
    <Abstract>Re-encodes this object into its JSON string representation.</Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>ae772842518d59a4df560c0f9a28d9ccb</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a1becc0713012c20b29c5f345f53d7336</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a5918ca7afa1b5dab4279b30f15317d13</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a99314480c7b6fcd0485ac2e060a15904</Anchor>
    <Abstract>Returns the type of this object.</Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypeAsString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a0a675976d4a9bc1791d8aaf5da58af3c</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>ab2d8d2cb4e62e8aca6bd085a4dbfcce5</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBoolean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a371f13b77fc792ffa38d50990712ed71</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>ab611f9a8e2430373f06c5d5684d901e1</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a52ec086e94e7f2a1053ec1d5bd131e0d</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>af41cc4e5585fcb434c18aad20762588c</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a67fa42b390fef93fec83740f3634ed9e</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a2777df3b6e04b5e5a5e02477275f33c2</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>aa33d3a320144adef9deadba5c32c3b57</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a0a8abefad41082eec39d647a32d59481</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>ad69ec912554a38ba220db64ca05262f2</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>ab8b13c006d7e8a2c83c22ab8a0d37cd3</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a69dcc98032f4cb6f0a360df7240cf0e1</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>json::Node</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/classjson_1_1_node.html</Path>
    <Anchor>a0561fb645f60411d61b0e78cb2c87c06</Anchor>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>locale</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>de/d31/namespacelocale.html</Path>
    <Abstract>This namespace contains utilities for localization and internationalization.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllCountries</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga262099b4b3f19c978f7b41e80a6e6b80</Anchor>
    <Abstract>Returns a vector of all known Country objects.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllKnownLanguages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gae47ba49b20a945e9d925d71610c1183e</Anchor>
    <Abstract>Returns all known Language objects in Limes&apos;s internal database.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>gaab2be6b035e835729dd69bf96b645ce6</Anchor>
    <Abstract>Returns the Country object representing the given ISO country code.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountryByName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>d2/d91/group__loc__country.html</Path>
    <Anchor>ga6d6478b3f2a31fa30dd3a97860411b95</Anchor>
    <Abstract>Returns the Country object representing the country with the given name.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gace306aa0dfcae7ac36db5bd2047e664a</Anchor>
    <Abstract>Returns the Language object representing the language with the given name.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguageForCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>gae2a4889b42da4f8cc121814805e3b775</Anchor>
    <Abstract>Returns the Language object representing the given ISO language code.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguagesForCountry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale</Scope>
    </TokenIdentifier>
    <Path>df/dfc/group__loc__lang.html</Path>
    <Anchor>ga5a9ca617c05af633b214fe6043698e6e</Anchor>
    <Abstract>Returns a vector of Language objects representing languages that may be spoken in the given country.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>locale::Country</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>locale::Country</Scope>
    </TokenIdentifier>
    <Path>d5/d47/structlocale_1_1_country.html</Path>
    <Abstract>This struct represents metadata about a country.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLanguages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale::Country</Scope>
    </TokenIdentifier>
    <Path>d5/d47/structlocale_1_1_country.html</Path>
    <Anchor>a065fe6395113459cb09797ef43cd21b7</Anchor>
    <Abstract>Returns a vector of Language objects representing languages that may be spoken in this country.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale::Country</Scope>
    </TokenIdentifier>
    <Path>d5/d47/structlocale_1_1_country.html</Path>
    <Anchor>a37aac4f0d2e7066425a96add065e5e69</Anchor>
    <Abstract>Returns true if all the metadata fields contain valid data.</Abstract>
    <DeclaredIn>countries.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countryCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>locale::Country</Scope>
    </TokenIdentifier>
    <Path>d5/d47/structlocale_1_1_country.html</Path>
    <Anchor>a2e3cb971b1232f468e96ae008bdf2c62</Anchor>
    <Abstract>The ISO country code for this country.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countryName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>locale::Country</Scope>
    </TokenIdentifier>
    <Path>d5/d47/structlocale_1_1_country.html</Path>
    <Anchor>a1933ee8c6b678464de1170ad55424c97</Anchor>
    <Abstract>The full name of this country.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>locale::Language</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Abstract>This struct represents metadata about a spoken human language.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCountries</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Anchor>a46c70cc805b12ed20c691ab9e9dbbb82</Anchor>
    <Abstract>Returns a vector of Country objects representing countries in which a meaningful proportion of the po...</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isForCountry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Anchor>a1b34261eba9c298884d948ba01e1fb7a</Anchor>
    <Abstract>Returns true if this language is likely to be spoken by a meaningful proportion of the given country&apos;...</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Anchor>aab9bfadb4209b8ec1e3eb8fface780dd</Anchor>
    <Abstract>Returns true if all the metadata fields contain valid data.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Language</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Anchor>ae4b83134df7b2ef9ffbef25a4c58cf12</Anchor>
    <Abstract>This library contains an internal database of known languages; you should rarely need to construct on...</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Language</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Anchor>a353b90740f3947a7bf33b40baf9e8ae3</Anchor>
    <Abstract>Constructs a null language object containing no metadata.</Abstract>
    <DeclaredIn>languages.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countryCodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Anchor>a700670c2ff28836efd571e95d19a46f6</Anchor>
    <Abstract>A vector of ISO country codes identifying countries where a meaningful proportion of the population m...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ISO639_1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Anchor>a696237a2aca2cb7627ca784980833d46</Anchor>
    <Abstract>The 2-digit ISO 639-1 code identifying this language.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ISO639_2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Anchor>a3237e588a12871d96a5a2f7c8423a04f</Anchor>
    <Abstract>The 3-digit ISO 639-2 code identifying this language.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRightToLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Anchor>ae172bcc498b78e911304d47febddf397</Anchor>
    <Abstract>True if this language is written right to left.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>languageName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>locale::Language</Scope>
    </TokenIdentifier>
    <Path>d5/db6/structlocale_1_1_language.html</Path>
    <Anchor>a170827715d8c2242c9e58d046eb7409f</Anchor>
    <Abstract>The full name of the language.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>dd/d47/namespacemath.html</Path>
    <Abstract>This namespace contains math utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga85112aca5e58028e5a710f98adde3f40</Anchor>
    <Abstract>@concept Scalar A scalar type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga04e106b35afcdef6a145a5db35d91efa</Anchor>
    <Abstract>@concept Integral An integral type.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6d262e04bc6f3646fdefa9bdb887f977</Anchor>
    <Abstract>A constexpr-enabled absolute value function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga0c049988ace901cbcc231b71ade26e9e</Anchor>
    <Abstract>A constexpr-enabled negation function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>round</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gacb9b0f8450f502b2c771ca5e5a7da212</Anchor>
    <Abstract>A constexpr-enabled rounding function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga54cdbdfc2b2002ed1b794a8e2e416e35</Anchor>
    <Abstract>A constexpr-enabled clipping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>power</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga4c562496dcd927fa763bbed87f0dbac1</Anchor>
    <Abstract>A constexpr-enabled power function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gad0e5a71d2f701efa07a804945876b122</Anchor>
    <Abstract>A constexpr-enabled mapping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPowerOf2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga2c6a4276c506b35b346e1bf5dbc04e15</Anchor>
    <Abstract>Returns true if val is 2^something.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDivisibleBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga9e117ca50dccbf636d7a04e110a08df8</Anchor>
    <Abstract>Returns true if the number is divisible by the divisor with no remainder.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberIsEven</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga548a17542294fda4e35f822965eef21d</Anchor>
    <Abstract>Returns true if the number is evenly divisible by 2.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaa7aecc12e23fb531f845fdf32f2588cf</Anchor>
    <Abstract>Returns true if the number is a prime number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factorial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8f543e20a836b53e34ff51af3c435650</Anchor>
    <Abstract>Computes the factorial of the number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>middleOfThree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga09f140aa9f0323bb7cbb299cfd4be28f</Anchor>
    <Abstract>Returns the median of three values.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>periodInSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga1a6dc5f37f6bc00737b62629958fd0ab</Anchor>
    <Abstract>Returns the period in samples of a frequency at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqFromPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6bb0f47d78ad031a40afbf364083bb43</Anchor>
    <Abstract>Returns the frequency in Hz with a given period in samples at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampsToMs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga03e0609c4a16e5500a587ca9bafe7f87</Anchor>
    <Abstract>Converts a number of samples to milliseconds at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>msToSamps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga95da7fc1fb96ae78716e0faf3b1dc0a0</Anchor>
    <Abstract>Converts a number of milliseconds to the closest integer number of samples at the specified samplerat...</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midiToFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga1d25879e95bcdc91434efb4fe91bda13</Anchor>
    <Abstract>Converts a MIDI note to a frequency in Hz.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqToMidi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaba5c165d2cb7683000726630f32ff02c</Anchor>
    <Abstract>Converts a frequency in Hz to a MIDI note.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6d262e04bc6f3646fdefa9bdb887f977</Anchor>
    <Abstract>A constexpr-enabled absolute value function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>negate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga0c049988ace901cbcc231b71ade26e9e</Anchor>
    <Abstract>A constexpr-enabled negation function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>round</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gacb9b0f8450f502b2c771ca5e5a7da212</Anchor>
    <Abstract>A constexpr-enabled rounding function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga54cdbdfc2b2002ed1b794a8e2e416e35</Anchor>
    <Abstract>A constexpr-enabled clipping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>power</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga4c562496dcd927fa763bbed87f0dbac1</Anchor>
    <Abstract>A constexpr-enabled power function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gad0e5a71d2f701efa07a804945876b122</Anchor>
    <Abstract>A constexpr-enabled mapping function.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPowerOf2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga2c6a4276c506b35b346e1bf5dbc04e15</Anchor>
    <Abstract>Returns true if val is 2^something.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDivisibleBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga9e117ca50dccbf636d7a04e110a08df8</Anchor>
    <Abstract>Returns true if the number is divisible by the divisor with no remainder.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberIsEven</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga548a17542294fda4e35f822965eef21d</Anchor>
    <Abstract>Returns true if the number is evenly divisible by 2.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPrime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaa7aecc12e23fb531f845fdf32f2588cf</Anchor>
    <Abstract>Returns true if the number is a prime number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factorial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga8f543e20a836b53e34ff51af3c435650</Anchor>
    <Abstract>Computes the factorial of the number.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>middleOfThree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga09f140aa9f0323bb7cbb299cfd4be28f</Anchor>
    <Abstract>Returns the median of three values.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>periodInSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga1a6dc5f37f6bc00737b62629958fd0ab</Anchor>
    <Abstract>Returns the period in samples of a frequency at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqFromPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga6bb0f47d78ad031a40afbf364083bb43</Anchor>
    <Abstract>Returns the frequency in Hz with a given period in samples at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampsToMs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga03e0609c4a16e5500a587ca9bafe7f87</Anchor>
    <Abstract>Converts a number of samples to milliseconds at the specified samplerate.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>msToSamps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga95da7fc1fb96ae78716e0faf3b1dc0a0</Anchor>
    <Abstract>Converts a number of milliseconds to the closest integer number of samples at the specified samplerat...</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midiToFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>ga1d25879e95bcdc91434efb4fe91bda13</Anchor>
    <Abstract>Converts a MIDI note to a frequency in Hz.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqToMidi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>d9/dfc/group__core__math.html</Path>
    <Anchor>gaba5c165d2cb7683000726630f32ff02c</Anchor>
    <Abstract>Converts a frequency in Hz to a MIDI note.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::Fraction</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Abstract>This class represents a fraction.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a27dd073ea61c196b15bf9f09f8b364dd</Anchor>
    <Abstract>Fraction is default copyable at compile time.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a0dcced88681e1f56b4d929d08d7554e1</Anchor>
    <Abstract>Fraction is default movable at compile time.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>divided</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a12fe18d3186a4adc7f78c785e88ce863</Anchor>
    <Abstract>Divides the numerator by the denominator and returns the result.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReciprocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a9369a4e1440614d9d7c3740e4e9443d7</Anchor>
    <Abstract>Returns the reciprocal of this fraction.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEquivalentTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a2502a1b59220f5c2f70a7609932fae42</Anchor>
    <Abstract>Returns true if the two fractions are equivalent, regardless of their exact representations.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNegative</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a9a960d873ea0ece0e557d698983ae338</Anchor>
    <Abstract>Returns true if this fraction is negative.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leastCommonDenominatorWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a4adb7cadb62ecf9c7ab434c9ce6c4af6</Anchor>
    <Abstract>Returns the least common denominator between this fraction and the other one.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator T</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>aa8160e7a3b03a311d946dc4b51bf5112</Anchor>
    <Abstract>Converts this fraction to a value of the desired type by dividing the numerator by the denominator.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>abadf57f586f42ac39837037e842fc132</Anchor>
    <Abstract>Fraction is default copyable at compile time.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>ada52f6e579889dabd2d409f933a3a85b</Anchor>
    <Abstract>Assigns this fraction to a new value.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a2c13714e05572ca44e59da1b64816d46</Anchor>
    <Abstract>Fraction is default movable at compile time.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reduce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a244c46dfe1e9aa89494ecfd892b0156c</Anchor>
    <Abstract>If the fraction can be reduced, this function returns a new fraction with the reduced numerator and d...</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withDenominator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>ab9b1a0ddf3c499dd0c529223b0e3cc86</Anchor>
    <Abstract>Returns a new fraction representing the same numerical value as this one, but expressed in terms of t...</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a414f715ca2602961a0cf950b803ce8ad</Anchor>
    <Abstract>Creates a default fraction with a numerator and denominator of 0.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a215d73a285d3c516ea1dd3660081b2b2</Anchor>
    <Abstract>Creates a fraction.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>aae08c6a79792496ecd40fc759ccc1474</Anchor>
    <Abstract>Creates a fraction.</Abstract>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a66c0df6164aa90d657e8a16852ab5155</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>abc01f978b824c0a3e06c38595269d17e</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>ac54a5f86653c0cfbb1d336c768520c07</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>ae6e53f4084591e48cfd257fb91c1a5c5</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>ae592767853a32487b319c06532ec5923</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>af019ecf1ef91841307802238c89385ed</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a2e5366f524383ebf61527c42045b3cce</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a74f72c8d4c3edd1fb8358fd9e10134a7</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a7a4046706494035a7bd8f15ea0976f48</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>aa07fcf60c9f8c013975ca7714368df09</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a8ce830c3b54314c422d302182dc909fd</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a7c19cddf5e83f74849d63d3a84fc3aa7</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a537905d68be4b8f2047389905e31cc02</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>aad4b9d87816b23d0c03999a0b91044ef</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a3223e8c54a82a2c26e4480a11c5bf87d</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a4f1a02d69809facc779d85396e105321</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>ab157e209f38724489546ecdfad6f78f1</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>aa65cd231aaed8b094a3b79534ec8881d</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a26408dc40c497fc082118b607e89736d</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a3cab38d81dbdadbe6c957a2677666147</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>ac34dcc60e2d07e877afe48028992fbf0</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>ac32eb3987249cb630213f65c10a64fd5</Anchor>
    <DeclaredIn>Fraction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>denominator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>ab55494cd5e967e722dd88d9a363464a3</Anchor>
    <Abstract>The fraction&apos;s denominator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::Fraction</Scope>
    </TokenIdentifier>
    <Path>d5/d26/structmath_1_1_fraction.html</Path>
    <Anchor>a9115de78ddfbccc985672a5c93f1164c</Anchor>
    <Abstract>The fraction&apos;s numerator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::Matrix</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Abstract>This class is a matrix, a rectangular array of objects arranged in rows and columns.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>aaafa268584c63eaa3195a98f83804b3b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Element</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a679a17fcf1021a1b52bd901ffcf6e2aa</Anchor>
    <Abstract>You can access the stored type of objects through this typedef.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Row</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>aa0d0b9a5cc8c4a6b64bdfdbbb0ddbfa7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a29108dd0fc49cf1cb8a40fdde2ba420f</Anchor>
    <Abstract>Returns a reference to an object at a specified location in the matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a45bd4dd4094d3b98c8b4cde553e64583</Anchor>
    <Abstract>Returns a reference to an object at a specified location in the matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>abc227bdc3b5bd929c90ec7d7c07abc28</Anchor>
    <Abstract>Returns a column of the matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSubmatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a0adb28ed8ff99303f511cf5742ec8e73</Anchor>
    <Abstract>Returns a new matrix containing copies of a subset of this matrix&apos;s objects.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a72493621ac293dfffa072f9f4c52e16f</Anchor>
    <Abstract>Returns true if not every object in both matrices is equivalent.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a4c15a2306e3b0c1e1d16a4f9c6ef38cc</Anchor>
    <Abstract>Adds each element in other to the element at the corresponding position in this matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a94e311088c0c4594b351c421e90480ba</Anchor>
    <Abstract>Adds the object to every object in this matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a289b915314ccd0d8d3041008e3c6aa15</Anchor>
    <Abstract>Subtracts each element in other from the element at the corresponding position in this matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a30cdbbb1a963b6fae7f37fca586f48fc</Anchor>
    <Abstract>Subtracts the object from every object in this matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a2c0cdb2575173f00ca065f68b70b0264</Anchor>
    <Abstract>Returns true if every object in both matrices is equivalent.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a97aabae569812c6558a379cbfd848af8</Anchor>
    <Abstract>Returns a reference to a row of the matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a7b753af4b626645ace785d246291b56a</Anchor>
    <Abstract>Returns a reference to a row of the matrix.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>acd514e4425c6c3813da8c01deb15e542</Anchor>
    <Abstract>Assigns an object at a specified location in the matrix to a new value.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>adaa62ffca1576b00a9d990ba02abf927</Anchor>
    <Abstract>Returns the number of columns the matrix contains.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumRows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a2c2169f006f2a825a672545cf0ee47b7</Anchor>
    <Abstract>Returns the number of rows the matrix contains.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalNumElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>a246dd53b6741145dee6705925204810f</Anchor>
    <Abstract>Returns the number of total number of elements the matrix contains.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::Matrix</Scope>
    </TokenIdentifier>
    <Path>d6/d00/classmath_1_1_matrix.html</Path>
    <Anchor>ab31a1132e7227a516a685b9ed1c09012</Anchor>
    <Abstract>Returns true if the matrix is square; ie, its number of rows is equal to its number of columns.</Abstract>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::Random</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Abstract>This class is a random number generator.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EngineType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>ab1e915b82c303d064089055bf949cfe6</Anchor>
    <Abstract>The type of random number generation engine being used internally.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ValueType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>a4ecd876d598895c55c8f7f15fb09fcea</Anchor>
    <Abstract>The types of values the random number engine outputs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Random</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>a6bc4982e1baf6a6d19580a318c7db126</Anchor>
    <Abstract>Random is default copyable.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Random</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>ae9245de3b22ddab523b0b5ca5e1746fb</Anchor>
    <Abstract>Random is default movable.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fork</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>aecbe1f0ac426143e04f223d6ef75f0b3</Anchor>
    <Abstract>Creates a new random number generator, which is seeded with this generator&apos;s next value.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>next</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>ab60a512c0fb9c6f511f31e8f55c52b38</Anchor>
    <Abstract>Returns the next value from the random number generator as a specified type, optionally mapped to a s...</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>ab7eda4eb3d5e3a18aef0eef6d0b971a0</Anchor>
    <Abstract>Returns the next value from the random number generator, interpreted as a boolean.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>a33ff57ffddd1da234c27da1f60d42b0f</Anchor>
    <Abstract>Returns the next value from the random number generator.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>a162340ce6ed6c67e47462720df797de2</Anchor>
    <Abstract>Random is default copyable.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>abca261b3c5b9767af1716e4dc66f6dcb</Anchor>
    <Abstract>Random is default movable.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>a0da3dcef544056b07b928f55e856d3c1</Anchor>
    <Abstract>Sets the seed of the random number generator.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Random</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>a067b23fbd49b91e5afa1b5640b8d6edf</Anchor>
    <Abstract>Creates a random number generator with a specified seed value.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Random</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>a393802d03b13e3c39b6cb73eff0fa0ed</Anchor>
    <Abstract>Creates a random number generator with a specified seed value.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Random</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>a0077f75260ba6ab6b85d47ad9baa7c1f</Anchor>
    <Abstract>Creates a random number generator with a random seed value.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::Random</Scope>
    </TokenIdentifier>
    <Path>d3/dbd/classmath_1_1_random.html</Path>
    <Anchor>a25ceb431124cacd08ad308ad4c0a9158</Anchor>
    <Abstract>Returns a static, system-wide random number generator.</Abstract>
    <DeclaredIn>Random.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::constants</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>math::constants</Scope>
    </TokenIdentifier>
    <Path>d8/d0f/namespacemath_1_1constants.html</Path>
    <Abstract>This namespace contains some mathematical constants.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blackman_alpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::constants</Scope>
    </TokenIdentifier>
    <Path>d8/d0f/namespacemath_1_1constants.html</Path>
    <Anchor>ab9ce49145794b197c4107d35284a6e0e</Anchor>
    <Abstract>The alpha value used for computing default Blackman filters.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>half_pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::constants</Scope>
    </TokenIdentifier>
    <Path>d8/d0f/namespacemath_1_1constants.html</Path>
    <Anchor>a235933b0adc79428388d6f18d94193d3</Anchor>
    <Abstract>One-half pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::constants</Scope>
    </TokenIdentifier>
    <Path>d8/d0f/namespacemath_1_1constants.html</Path>
    <Anchor>afc3cb116f5aa8a90b9c93d112b372f1e</Anchor>
    <Abstract>Pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>two_pi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::constants</Scope>
    </TokenIdentifier>
    <Path>d8/d0f/namespacemath_1_1constants.html</Path>
    <Anchor>a6db585a73b2811284a16382a6cfb4952</Anchor>
    <Abstract>Two pi.</Abstract>
    <DeclaredIn>mathHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>math::geometry</Scope>
    </TokenIdentifier>
    <Path>d9/d9a/namespacemath_1_1geometry.html</Path>
    <Abstract>This namespace contains utilities for working with geometric shapes and calculations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::geometry</Scope>
    </TokenIdentifier>
    <Path>d9/d9a/namespacemath_1_1geometry.html</Path>
    <Anchor>a317e9900bc8f2c083ad6d6c8fafc5df8</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::geometry</Scope>
    </TokenIdentifier>
    <Path>d9/d9a/namespacemath_1_1geometry.html</Path>
    <Anchor>a2396d30ac8dc8dc734b4aa53fb53c6e5</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Angle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Abstract>This class represents a geometric angle.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Angle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a9cb9402c2de3131ba34628aecfda04e1</Anchor>
    <Abstract>Creates an Angle representing the given number of degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bisect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>ae2dedb94ca2c13b541cb53d8bd1950da</Anchor>
    <Abstract>Returns a new angle object representing half of this angle&apos;s measure.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator ValueType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>ae22c7e285f151da5daad2ddd08a4f32f</Anchor>
    <Abstract>Returns the angle&apos;s measure in degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>degrees</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>ad3357d37f05df78ae570764b1bba0172</Anchor>
    <Abstract>Returns the angle&apos;s measure in degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radians</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a0b9fda3272294b749a11744b930cbc70</Anchor>
    <Abstract>Returns the angle&apos;s measure in radians.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a34d28695d8643aebadf69ba499cd2c3e</Anchor>
    <Abstract>Returns true if the angle is exactly 90 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAcute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>afb46572ac461bbe1d0490d7b4de96ac6</Anchor>
    <Abstract>Returns true if the angle is less than 90 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObtuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a24793a9cb2689f82200bd152fa6f824d</Anchor>
    <Abstract>Returns true if the angle is larger than 90 degrees and smaller than 180 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStraight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a37ba7891eac25231f3a66b8204c7d26d</Anchor>
    <Abstract>Returns true if the angle is exactly 180 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReflex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>ad9da9503b0c1af1588fe3bc1ec2fed10</Anchor>
    <Abstract>Returns true if the angle is larger than 180 degrees and smaller than 360 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFull</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a811b402f196f3456f12523da1771d93c</Anchor>
    <Abstract>Returns true if the angle is exactly 360 degrees.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOblique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>aa5006e23c6ce67e13c4396a71192c55f</Anchor>
    <Abstract>Returns true if the angle&apos;s measure in degrees is not divisible by 90.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComplementaryWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a1822fb41b21e689ab9d616a54a949e33</Anchor>
    <Abstract>Returns true if this angle and the other&apos;s measures in degrees sum to 90.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getComplement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a11f80710ccb7e50cef7fbed52184c075</Anchor>
    <Abstract>Returns an angle object such that the new angle&apos;s measure in degrees added to this angle&apos;s measure wi...</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupplementaryWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a8353f104cd9a588d36bd5c8ab321065e</Anchor>
    <Abstract>Returns true if this angle and the other&apos;s measures in degrees sum to 180.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupplement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a0f3b99af11478c460e89b600a93d12ea</Anchor>
    <Abstract>Returns an angle object such that the new angle&apos;s measure in degrees added to this angle&apos;s measure wi...</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExplementaryWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a1c9bab43148c331acd8cd244d5760fc2</Anchor>
    <Abstract>Returns true if this angle and the other&apos;s measures in degrees sum to 360.</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExplement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>af431ac5d20895ff8ab67a208c5660ee4</Anchor>
    <Abstract>Returns an angle object such that the new angle&apos;s measure in degrees added to this angle&apos;s measure wi...</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>ad6ac3eb0e07261b771542153eac4a269</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a8425564cfb8af7f7028c9a5a975e019f</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a7af25823379a6cc387c0cbed03e365ef</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a580a180d0ee0203427d97ab643cc4d48</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>ad870a3c3d73a5c636afee8bbde37052c</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>acca5b429b194e65b8a3c691382ae4667</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a3747efb4325537fe2a4dfa6cf63c0d06</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a12be89c49cd347fc52edd0542a8277d0</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a0a95cad287e279b6df0a93abfdd629d1</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>aa333fe987d190f08775c698df11b58bf</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a20b882121e84967fc8e1c0ff9ce9e714</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a06d5cff62e40ad3c388889232f950479</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a5699f3a3c3740bed75176c83fc8dccef</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a3ff8935d2b33e3b266486ba925cbe577</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a7cf96717d4834ac037a0e1f574222ca4</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a115debc97c4a3aacc15cb2ba624fd4ee</Anchor>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>right</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>aaa032ccd17a4782a31cb78b1b2413e5f</Anchor>
    <Abstract>Convenience function for creating a right angle object (90 degrees).</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>straight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>ab5410bcad3fe41b06cf67dc21f267dda</Anchor>
    <Abstract>Convenience function for creating a straight angle object (180 degrees).</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>full</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::geometry::Angle</Scope>
    </TokenIdentifier>
    <Path>d0/d61/classmath_1_1geometry_1_1_angle.html</Path>
    <Anchor>a0b37243d33015f31fdcd2e588ed78018</Anchor>
    <Abstract>Convenience function for creating a full angle object (360 degrees).</Abstract>
    <DeclaredIn>angle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Circle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Abstract>Represents a circle.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>ae32a60c60e28d62594358cd6e2ad42cc</Anchor>
    <Abstract>Circle is default movable at compile time.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>af05fd5741dc71b523398280981dca33d</Anchor>
    <Abstract>Circle is default copyable at compile time.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>a243ac41ab3e29b2e20c83b7a73c81ff0</Anchor>
    <Abstract>Creates a circle with the given radius (in unspecified units).</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>a60a3a0f9b42611e7757a7795cea5bdab</Anchor>
    <Abstract>Returns the area of the circle.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>a7e026ffd172f6f4366fc349c42c04dd1</Anchor>
    <Abstract>Returns the diameter of the circle.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>a7a4471490168cecb108ca309e6c9ff14</Anchor>
    <Abstract>Circle is default movable at compile time.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>a81c6099206085c6207342228fd03dae8</Anchor>
    <Abstract>Circle is default copyable at compile time.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>a6e0b7244ddf42e218801f1b8ceb8f010</Anchor>
    <Abstract>Returns the perimeter of the circle.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>a2af0764eaa4999faeb8bcdd32815b415</Anchor>
    <Abstract>Returns the radius of the circle.</Abstract>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>a6513f6053c9478c7b7eac59e38e70ce4</Anchor>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>a8224daff5444ab29c6086200e57083f0</Anchor>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>a15ff47eea17d6ab4f7074f43aebe4394</Anchor>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Circle</Scope>
    </TokenIdentifier>
    <Path>da/d47/classmath_1_1geometry_1_1_circle.html</Path>
    <Anchor>aeae0818b6bf7290cc4ef408fa9d510cc</Anchor>
    <DeclaredIn>circle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Cone</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Abstract>This class represents a cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>a0b8dc150f9d8a4a0e476c896fcbe9034</Anchor>
    <Abstract>Cone is default movable at compile time.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>ad01d26a9ab33f02c777a3bbd8c037905</Anchor>
    <Abstract>Cone is default copyable at compile time.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>a1261ca00d1a90e5106746e118066a6de</Anchor>
    <Abstract>Returns the diameter of the cone&apos;s face.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>abc2954d9a0eabfd3f88677c01803e6ae</Anchor>
    <Abstract>Returns a Circle object representing the face of this cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>a837f9a8d87b38915479785fb12dfdfc0</Anchor>
    <Abstract>Returns the height of the cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>aed8bde63afc582e0fb52096f1aaea26e</Anchor>
    <Abstract>Cone is default movable at compile time.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>ac8d4eeeb90a6fd909f34eebbc0a32740</Anchor>
    <Abstract>Cone is default copyable at compile time.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>aba2ae3c0978744867431fc604d958324</Anchor>
    <Abstract>Returns the radius of the cone&apos;s face.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>slantHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>a46154885e384c306c348675d791fd704</Anchor>
    <Abstract>Returns the slant height area of the cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>a4cfe4af1830ed96f75930143b2e24c30</Anchor>
    <Abstract>Returns the surface area of the cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a2a9bc5a504181687ffaa907fb2b6ac38</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>ab848fee33edca6dbd3d12e51725ce0d6</Anchor>
    <Abstract>Returns the volume of the cone.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ad2e9b9b7de82333a816a7e7880e1919f</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>afcf5bf4a18dae8731ffdb0ad8b955553</Anchor>
    <Abstract>Creates a cone with the given radius (of its face) and height.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>aa9721e462b1f98290a9d043941bfab8f</Anchor>
    <Abstract>Creates a cone with the given face and height.</Abstract>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>a2b50d5a4602db83e9c2343c8719341d2</Anchor>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cone</Scope>
    </TokenIdentifier>
    <Path>da/d97/classmath_1_1geometry_1_1_cone.html</Path>
    <Anchor>a02960567f3936cf937807b6158f08337</Anchor>
    <DeclaredIn>cone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Cube</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Abstract>This class represents a cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cube</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a168231e3ac7918d2216cba0fdc1c7113</Anchor>
    <Abstract>Cube is default copyable at compile time.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cube</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a00f09dc8282543a1893f5dde1e4c75f2</Anchor>
    <Abstract>Cube is default movable at compile time.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a316513f713c72fed30c7de3f43f26b93</Anchor>
    <Abstract>Returns a Square object representing a face of this cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRectangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>ac9ffc1a6a2eafd7483af281eb262ed56</Anchor>
    <Abstract>Returns a RectangularPrism object with the same dimensions as this cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a5ea7b4671070c21d4f8fba3b32ff59bc</Anchor>
    <Abstract>Cube is default copyable at compile time.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>af1671196c76322da7a82795e5fe0d99f</Anchor>
    <Abstract>Cube is default movable at compile time.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sideLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a05ae55698846c3ee33610c6f27e78a62</Anchor>
    <Abstract>Returns the side length of the cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spaceDiagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a071f44d1ac88209cdc115b8a00b9c341</Anchor>
    <Abstract>Returns the space diagonal of the cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>ae454a8c6c28a436b7be0882a2fd96262</Anchor>
    <Abstract>Returns the surface area of the cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a2a9bc5a504181687ffaa907fb2b6ac38</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfacePerimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a3ed8abf44872dd1dcbb4e9064377c2c0</Anchor>
    <Abstract>Returns the surface perimeter of the cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a2c6d32e59332a9e0293dc82c97153a21</Anchor>
    <Abstract>Returns the volume of the cube.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ad2e9b9b7de82333a816a7e7880e1919f</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cube</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a2978730a8972de754062cc8ca0a3c729</Anchor>
    <Abstract>Creates a cube with the given side length.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cube</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>ac42791da4f5db420a423ca39568a3b4a</Anchor>
    <Abstract>Creates a cube with the given face.</Abstract>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a2d5b08848e19314316beab2f4d95ad62</Anchor>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a444dc26f52ce3e2195de89906802dc73</Anchor>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a5512f221f3bacd73afe76aa2c2b74ca0</Anchor>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cube</Scope>
    </TokenIdentifier>
    <Path>de/df9/classmath_1_1geometry_1_1_cube.html</Path>
    <Anchor>a520f939022fdbd93dde0cb7886907a19</Anchor>
    <DeclaredIn>cube.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Cylinder</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Abstract>This class represents a cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>ab822474aa16e09feed41ee2ff53804d3</Anchor>
    <Abstract>Cylinder is default copyable at compile time.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>aab0e211d8a1b36ce6653caa9ccbd8ce1</Anchor>
    <Abstract>Cylinder is default movable at compile time.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>circumference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>aeea0c92fee3933b700947eabba9adfc2</Anchor>
    <Abstract>Returns the circumference of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a75c9dec245d95f62d2cbeaa5b62b52b2</Anchor>
    <Abstract>Returns the diameter of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a8086284381b45bfab7fa70884f3aa1e5</Anchor>
    <Abstract>Returns a Circle representing a face of this cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a07fac576e4499ac7447fa8a26bb3e440</Anchor>
    <Abstract>Cylinder is default copyable at compile time.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>ae8130e1da1e538d74b8c144e1372d9be</Anchor>
    <Abstract>Cylinder is default movable at compile time.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a45db5cee93ec07ef2bc0bba1aadd4e90</Anchor>
    <Abstract>Returns the radius of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a0d5a97764bea04456db049547164da5e</Anchor>
    <Abstract>Returns the surface area of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a2a9bc5a504181687ffaa907fb2b6ac38</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfacePerimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a6d08be94a14c7d8bc660bdda126e7a37</Anchor>
    <Abstract>Returns the surface perimeter of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>adfc4ece29aa8e09a8d11cec62c09f048</Anchor>
    <Abstract>Returns the volume of the cylinder.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ad2e9b9b7de82333a816a7e7880e1919f</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>ac14e0199ffb5bf8e5a0ec2245ba50af7</Anchor>
    <Abstract>Creates a cylinder with the given radius and height.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>ad9b74e839c8a96b46ffe08c763dcc92e</Anchor>
    <Abstract>Creates a cylinder with the given face and height.</Abstract>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a2177d18de8eb1e78baa8413c4f3d93aa</Anchor>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Cylinder</Scope>
    </TokenIdentifier>
    <Path>d3/ddb/classmath_1_1geometry_1_1_cylinder.html</Path>
    <Anchor>a579eadf5378094e661d54adcf98c6122</Anchor>
    <DeclaredIn>cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Hexagon</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Abstract>Represents a hexagon.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hexagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a404e5c3affb0a2d92222af906d8c9d8f</Anchor>
    <Abstract>Hexagon is default copyable at compile time.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hexagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a5d249170ce036877006578b677139fcf</Anchor>
    <Abstract>Hexagon is default movable at compile time.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hexagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>add4fb70002a70bf4728f9679e9d982eb</Anchor>
    <Abstract>Creates a hexagon with the specified side length (in unspecified units).</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a2821d802ea4f8707d7b067e656abb57b</Anchor>
    <Abstract>Returns the area of the hexagon.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a5cd05d2dba9a1dfb0b62ba1c2e6ec095</Anchor>
    <Abstract>Hexagon is default copyable at compile time.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a9154ebe17ac8ac1a20756bfc047dfde9</Anchor>
    <Abstract>Hexagon is default movable at compile time.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a7c3ff8daf00cb55319fe2eefc0673433</Anchor>
    <Abstract>Returns the perimeter of the hexagon.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sideLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a573336b07192a82cdc9e8f41f7567d24</Anchor>
    <Abstract>Returns the side length of the hexagon.</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a4389a6b31d49b5b3f06b03071a55b948</Anchor>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>af392d222eb947539e8885abc55a87923</Anchor>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a7d40005bc457b3a7a4267721611faa74</Anchor>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a22979a7944321effbe679b7ec7dd7b08</Anchor>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exteriorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>a596db1fef71eea5a55111a97b72dcae2</Anchor>
    <Abstract>Returns the exterior angle of any hexagon (60 degrees).</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interiorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::geometry::Hexagon</Scope>
    </TokenIdentifier>
    <Path>df/d80/classmath_1_1geometry_1_1_hexagon.html</Path>
    <Anchor>aaac6ca229d0dc75d9a701a78cea944cc</Anchor>
    <Abstract>Returns the interior angle of any hexagon (120 degrees).</Abstract>
    <DeclaredIn>hexagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Octagon</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Abstract>Represents an octagon.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Octagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a41f12c23bf7396f0b7362c64aa7117db</Anchor>
    <Abstract>Octagon is default copyable at compile time.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Octagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a526cc48e35d9d005808e1197d5c6d34c</Anchor>
    <Abstract>Octagon is default movable at compile time.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Octagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a80c7a0a7372c537dc576aacb3e0b5410</Anchor>
    <Abstract>Creates an octagon with the specified side length (in unspecified units).</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a862d8eaa41877404032b22f7a2e9bb54</Anchor>
    <Abstract>Returns the area of the octagon.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>ab5f1149a0606d96100a0b62d1a155a51</Anchor>
    <Abstract>Octagon is default copyable at compile time.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>acc0ce78e65dd522126f506a865ef5465</Anchor>
    <Abstract>Octagon is default movable at compile time.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>ab78a010490ed73d203e1c0786f710f42</Anchor>
    <Abstract>Returns the perimeter of the octagon.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sideLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a2285ff00f44d76bf00d480d6c2f8038b</Anchor>
    <Abstract>Returns the side length of the octagon.</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>ab46607398062837cda035562693d9c98</Anchor>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a55897eab0c8d8c85a04594a9f0a00882</Anchor>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a308f02f44de20e3e029089bbf0140223</Anchor>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a8030c5e8951ab80ea6d3038dd1fd118a</Anchor>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exteriorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>a8466df6370bdb267c07c9d173806be1f</Anchor>
    <Abstract>Returns the exterior angle of any octagon (45 degrees).</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interiorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::geometry::Octagon</Scope>
    </TokenIdentifier>
    <Path>d3/dc1/classmath_1_1geometry_1_1_octagon.html</Path>
    <Anchor>ac19b8a0159f5681071085031d4adc09c</Anchor>
    <Abstract>Returns the interior angle of any octagon (135 degrees).</Abstract>
    <DeclaredIn>octagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Pentagon</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Abstract>Represents a pentagon.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pentagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a4a9884de85214e4127581f95a8a31351</Anchor>
    <Abstract>Pentagon is default copyable at compile time.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pentagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a58f48c948680572031f3b68683c4f604</Anchor>
    <Abstract>Pentagon is default movable at compile time.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pentagon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a3d24b8fde80e672fd9e1e9e8c4a8720b</Anchor>
    <Abstract>Creates a pentagon with the specified side length (in unspecified units).</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a177d668eb371ef09b01cceebc1ae311c</Anchor>
    <Abstract>Returns the area of the pentagon.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a86d66733b1774ba61bd79ebb6704ce40</Anchor>
    <Abstract>Returns the length of the internal diagonal of the pentagon.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a45a64884c15c3c28df454cff9393a2ef</Anchor>
    <Abstract>Pentagon is default copyable at compile time.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a557ba80feb33b1e9f31edc78d75dce95</Anchor>
    <Abstract>Pentagon is default movable at compile time.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a3e273e0e501ea9addb05f3edcce3324c</Anchor>
    <Abstract>Returns the perimeter of the pentagon.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sideLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>aec689a1f64be48fbc661441adcdcd204</Anchor>
    <Abstract>Returns the side length of the pentagon.</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a2af13717805735e4b59bc46286a12c55</Anchor>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a5fe501aa58f8969ef6274118b25cd46f</Anchor>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a18d86a9b94e3031647f2cc852bc6cf81</Anchor>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>a15a6560a5b2ad210961a78f7954d59ac</Anchor>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exteriorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>aa0c5af9a314ae3da916ec3be19175178</Anchor>
    <Abstract>Returns the exterior angle of any pentagon (72 degrees).</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interiorAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>math::geometry::Pentagon</Scope>
    </TokenIdentifier>
    <Path>d4/d55/classmath_1_1geometry_1_1_pentagon.html</Path>
    <Anchor>ab6a8612ae5e04aa8fc79346b0ca7d9cc</Anchor>
    <Abstract>Returns the interior angle of any pentagon (108 degrees).</Abstract>
    <DeclaredIn>pentagon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Pyramid</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Abstract>This class represents a pyramid.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pyramid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>af6b26cea58bf1dd1b53405e804508648</Anchor>
    <Abstract>Pyramid is default copyable at compile time.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pyramid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>ae3e4846f842b1c7cd0476595fcbfebf9</Anchor>
    <Abstract>Pyramid is default movable at compile time.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>baseLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>ad3518cab4410d7d4ef1d165888d91e91</Anchor>
    <Abstract>Returns the length of the pyramid&apos;s base.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>baseWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a060c4fe57c4004ad4dab3de947395c07</Anchor>
    <Abstract>Returns the width of the pyramid&apos;s base.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a35d2b5c5dc61683bdc30b7b1a06b7c1b</Anchor>
    <Abstract>Returns a Rectangle object representing this pyramid&apos;s base.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>ae4db1b2d99052ddab4f3a1d6f71ab8a2</Anchor>
    <Abstract>Returns the height of the pyramid.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a7277cf3992ee75e1e12610ec7c3165d8</Anchor>
    <Abstract>Pyramid is default copyable at compile time.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>ac08fb5d8864bc18be10d7253593c9044</Anchor>
    <Abstract>Pyramid is default movable at compile time.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a0b9e37da70f655d6de5f35a3c1b71ddf</Anchor>
    <Abstract>Returns the surface area of the pyramid.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a2a9bc5a504181687ffaa907fb2b6ac38</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a0fbc67b2fd5df3032bf9608ccbdb5b82</Anchor>
    <Abstract>Returns the volume of the pyramid.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ad2e9b9b7de82333a816a7e7880e1919f</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pyramid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>aefbe65fd0cf124533a7a2d41fb1901b5</Anchor>
    <Abstract>Creates a pyramid with the given dimensions.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pyramid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>a397f0d4242a80a913e66da54ea2ccb74</Anchor>
    <Abstract>Creates a pyramid with the given base and height.</Abstract>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>ada41980a1f53905194288679fe8e2993</Anchor>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Pyramid</Scope>
    </TokenIdentifier>
    <Path>df/dcd/classmath_1_1geometry_1_1_pyramid.html</Path>
    <Anchor>ad68229f66458c4ee518eddef6864db9b</Anchor>
    <DeclaredIn>pyramid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Rectangle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Abstract>Represents a rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Rectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>aa447b8e2e04860ecc0052f7b49056704</Anchor>
    <Abstract>Rectangle is default copyable at compile time.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Rectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>aded5e2ce698f990f46439504e21753ba</Anchor>
    <Abstract>Rectangle is default movable at compile time.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Rectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>ad1726661cb1a28de45efe38a0ea53e62</Anchor>
    <Abstract>Creates a rectangle with the specified length and width (in unspecified units).</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>afb1eb9b40a5cbebab7e46d767102c422</Anchor>
    <Abstract>Returns the area of the rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bisectDiagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>abc83ccb3151884e7a6d4ad9b603bd280</Anchor>
    <Abstract>Returns a triangle representing the rectangle bisected along its internal diagonal.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a1766c9d3471d71b12540a41f6a34cf10</Anchor>
    <Abstract>Returns the length of the internal diagonal of the rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>ab31bdcd15467106ddbb07ee6771b1f14</Anchor>
    <Abstract>Returns true if the rectangle is square; ie, the length is equal to the width.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>afcfe454af8808fd560719dfdc131d03b</Anchor>
    <Abstract>Returns the length of the rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a72fb610c81fc2b3d03c470474f22f594</Anchor>
    <Abstract>Rectangle is default copyable at compile time.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>afc886461c13d920f49d42bd0dc1381bc</Anchor>
    <Abstract>Rectangle is default movable at compile time.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a097c6156a749c27d3578ace8deed5141</Anchor>
    <Abstract>Returns the perimeter of the rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>aeb6f07ce9663fbbfbb0b50037020565a</Anchor>
    <Abstract>Returns the width of the rectangle.</Abstract>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a99d70ece296018eb9e0450b678edd812</Anchor>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>a71a778158bac51f462be251897e14ad3</Anchor>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>aac3e74058612423bc8d1cf9a35a990cf</Anchor>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Rectangle</Scope>
    </TokenIdentifier>
    <Path>d0/d60/classmath_1_1geometry_1_1_rectangle.html</Path>
    <Anchor>ad26cb7f42f1dadb486041211f3bca799</Anchor>
    <DeclaredIn>rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::RectangularPrism</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Abstract>This class represents a rectagular prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a2cde4790fa24868c1ffea0a649dce1f5</Anchor>
    <Abstract>RectangularPrism is default copyable at compile time.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>ab80ea236f5e5a23b300a5d7698790717</Anchor>
    <Abstract>RectangularPrism is default movable at compile time.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a5ae050ac9d0963888d8e5ff5e1f21666</Anchor>
    <Abstract>Creates a RectangularPrism with the given dimensions.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a80a678c6d0e5605fdbd0a751c048d26a</Anchor>
    <Abstract>Returns the height of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCube</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>ab613f4e6bbbd4d6212f62639265f201a</Anchor>
    <Abstract>Returns true if this rectangular prism is a cube.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a949ce7d28ee37a45d286e8b81035e538</Anchor>
    <Abstract>Returns the length of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a64d6c5bc246b0cee90dae90e928e2db2</Anchor>
    <Abstract>RectangularPrism is default copyable at compile time.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a5b28fedd806958fed91e3659182b1c54</Anchor>
    <Abstract>RectangularPrism is default movable at compile time.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spaceDiagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>ae2c00b4ae36c8711b86c87f0a98d053f</Anchor>
    <Abstract>Returns the space diagonal of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a640db4440e073a2b525f663125c05854</Anchor>
    <Abstract>Returns the surface area of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a2a9bc5a504181687ffaa907fb2b6ac38</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a4a6f5b738f5cfa3c4ccffa2669850707</Anchor>
    <Abstract>Returns the volume of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ad2e9b9b7de82333a816a7e7880e1919f</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>aed9dc8ec8865c2659adbaba6fafe4e71</Anchor>
    <Abstract>Returns the width of the prism.</Abstract>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a6249183fa15f0c708de9d6d785d5d476</Anchor>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::RectangularPrism</Scope>
    </TokenIdentifier>
    <Path>d3/d1d/classmath_1_1geometry_1_1_rectangular_prism.html</Path>
    <Anchor>a17c2d3f445ad7420b02a34a1194996d2</Anchor>
    <DeclaredIn>rectangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Sphere</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Abstract>This class represents a sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>ac594cb08adbe759b868e9994c21f7ebd</Anchor>
    <Abstract>Sphere is default copyable at compile time.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a2e9889e9a6c94098cca3fa83449dc60e</Anchor>
    <Abstract>Sphere is default movable at compile time.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>circumference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a4a2eae5fce9d2f85bbae6abc63df51bd</Anchor>
    <Abstract>Returns the circumference of the sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a9753235cd4632c3616e535b1c6d65093</Anchor>
    <Abstract>Returns the diameter of the sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGreatCircle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a986c66912020de3e3479bbae859ef0f2</Anchor>
    <Abstract>Returns a Circle object with the same radius as this sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a44b4bf622611503052f7e2f43b250acb</Anchor>
    <Abstract>Sphere is default copyable at compile time.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a2367e8550e29ee593267bc4c5fedd58b</Anchor>
    <Abstract>Sphere is default movable at compile time.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a847fb34cf24394f0d62c0c04a28e8e27</Anchor>
    <Abstract>Returns the radius of the sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>ae1c3e482c00d5b114594a161cbb158cd</Anchor>
    <Abstract>Returns the surface area of the sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a2a9bc5a504181687ffaa907fb2b6ac38</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>ac462d673bcdc2c161eb52deafa06581f</Anchor>
    <Abstract>Returns the volume of the sphere.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ad2e9b9b7de82333a816a7e7880e1919f</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>af6f6d7649f0c475acc5f8659ec28b945</Anchor>
    <Abstract>Creates a sphere with the given radius.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a4b518c4a7ea64bb1a696791199f98ac7</Anchor>
    <Abstract>Creates a sphere with the given great circle.</Abstract>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>ac53ed46f9901e95ca656b3e1cc9d45c3</Anchor>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a3e1e94a2529ab1a4e28fd851af9dbe98</Anchor>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a0d6a8b78bfe89e3c08bb8e3e7f0694da</Anchor>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Sphere</Scope>
    </TokenIdentifier>
    <Path>d4/dc0/classmath_1_1geometry_1_1_sphere.html</Path>
    <Anchor>a7d4c769de6817d490ac2a3dc07ce9de4</Anchor>
    <DeclaredIn>sphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Square</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Abstract>Represents a square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Rect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a6dcde90c0aef498c783d8e31f9ad53c7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a82ee46e828dc2ee6fbfe133c2406072a</Anchor>
    <Abstract>Square is default copyable at compile time.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a85b2a282a8f2256a6440a5f1d7645d60</Anchor>
    <Abstract>Square is default movable at compile time.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a066e5f4b3bbe790737ed437acc0e6fb0</Anchor>
    <Abstract>Creates a square with the specified side length (in unspecified units).</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a40c3e591191ebc40d77aa8b199be8b68</Anchor>
    <Abstract>Returns the area of the square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bisectDiagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a5914565a6ed2f162038af74927e188be</Anchor>
    <Abstract>Returns a triangle representing this square bisected along its internal diagonal.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a1e21acc3a53e76487e9e1b5337d3eeb0</Anchor>
    <Abstract>Returns the length of the internal diagonal of this square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a9649952e7fa1ba97de2c2c1e6096fa27</Anchor>
    <Abstract>Returns a Rectangle object with the same dimensions as this square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a57fdf6896c9928f1634573473960e864</Anchor>
    <Abstract>Square is default copyable at compile time.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a3266a6b987e5edd0ee773823a39c834f</Anchor>
    <Abstract>Square is default movable at compile time.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>aafa6f4508f0037713064609da4933582</Anchor>
    <Abstract>Returns the perimeter of the square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sideLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>ab44da1994a2237b8435ec11e5abcbfb4</Anchor>
    <Abstract>Returns the side length of the square.</Abstract>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>aaa64c928995fa3ce0a3b6faea3eea4b4</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>ac1995c141b55ab55b78cd18bb8f33683</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a1ae3dad55d9de5d4ea7f5ada85d32e40</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>ab76f9dcc78e0fd4bee655cb07041f665</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>ae14c6bf5799beb02e4bfd2d48cdb23e0</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>afce33b8c2ee32a07248c6bc8a7986638</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>aca63f32720dda9e29acb72c18095a590</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Square</Scope>
    </TokenIdentifier>
    <Path>d3/d06/classmath_1_1geometry_1_1_square.html</Path>
    <Anchor>a307296196e3d99976a9a2de30a254d9e</Anchor>
    <DeclaredIn>square.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::ThreeDShape</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Abstract>A base class for any kind of 3-dimensional shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThreeDShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a84c9911d70539295b0293d5019c4a776</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a2a9bc5a504181687ffaa907fb2b6ac38</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ad2e9b9b7de82333a816a7e7880e1919f</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::Triangle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Abstract>Represents a triangle.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a9ecf2a01b6d6e8298adf001cc7aa1289</Anchor>
    <Abstract>Triangle is default copyable at compile time.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a35dacfd7e241abfccd9ffb0216120113</Anchor>
    <Abstract>Triangle is default movable at compile time.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>altitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>afd7865454b082a849ab1400bc29efdb1</Anchor>
    <Abstract>Returns the length of the vertical altitude from the triangle&apos;s base to the point opposite the base.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>aeaa9557efb99179056cf7804e75e2ceb</Anchor>
    <Abstract>Returns the area of the triangle.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bisect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a2a8e824e611975b313a1c361d37af006</Anchor>
    <Abstract>Returns a new triangle created by bisecting the requested side of the current triangle.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSimilarTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a34590833c4c5f2d43f8ae8d035842de8</Anchor>
    <Abstract>Returns true if the two triangles have the same angle measures, regardless of their side lengths.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a205573710b6cf7ff113fb9a12fcef230</Anchor>
    <Abstract>Triangle is default copyable at compile time.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a845d02e1cbd6a22606ab4c597814b2d1</Anchor>
    <Abstract>Triangle is default movable at compile time.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a6b7672b8c093022e51e9d7d428420b37</Anchor>
    <Abstract>Returns the perimeter of the triangle.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a0a3d534da919677322c3d7f053ca2b69</Anchor>
    <Abstract>Creates a triangle with all three side lengths explicitly specified.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a2b611ebeb28731bda776a2ccdf7c749e</Anchor>
    <Abstract>Creates a triangle from one side length and two angles.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a24eff85fd73735e1d78d2b24215020ea</Anchor>
    <Abstract>Creates a triangle from two side lengths and the angle between them.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a2833a4524067256a1d8223f8dec6a97a</Anchor>
    <Abstract>Returns the length of the triangle&apos;s base side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a0a9eafe87742a06fa94fac584e5c1e8c</Anchor>
    <Abstract>Returns the length of the triangle&apos;s height side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hypotenuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a0af55ec75ac536551b505521ba251dbf</Anchor>
    <Abstract>Returns the length of the triangle&apos;s hypotenuse side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>ada9bfef7076f97eff969bb308aedd650</Anchor>
    <Abstract>Returns the length of the requested side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEquilateral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a7c392d9fe5506e4299bca0f219efe63a</Anchor>
    <Abstract>Returns true if all three sides are the same length.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIsosceles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a6bda7bd6686bbdd8c8ff87774a119fcf</Anchor>
    <Abstract>Returns true if two sides have the same length.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScalene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a1fd4b423090b1889131e9218f6f9e2fe</Anchor>
    <Abstract>Returns true if no two sides are the same length.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a3d8a1f8d71e78ded2f95ad48fc54e057</Anchor>
    <Abstract>Returns true if one of the angles is a right angle.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAcute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a7f60a5c5abcb56aa40900bf39425fe7b</Anchor>
    <Abstract>Returns true if all three angles are acute.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObtuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a81d3d1ef9405abd378780d6fdebd18ad</Anchor>
    <Abstract>Returns true if one angle is obtuse.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a44c95026b10bc127bc5f04c48af24bcb</Anchor>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a1b2c7d622885a7ee47a8938005aec0ff</Anchor>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBaseAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a9a07a709034f5d967d24353a958f5e6b</Anchor>
    <Abstract>Returns the angle opposite the base side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeightAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a92ff5c413570d481e23755a5838e8a70</Anchor>
    <Abstract>Returns the angle opposite the height side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHypotenuseAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a542bbe3c55f07be90f2791f778070bb4</Anchor>
    <Abstract>Returns the angle opposite the hypotenuse side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>a52707af596d110eac4fc60296f29f537</Anchor>
    <Abstract>Returns the angle opposite the requested side.</Abstract>
    <DeclaredIn>triangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>acecb461fd2ad8660cfcacc697de6bbe8a593616de15330c0fb2d55e55410bf994</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>acecb461fd2ad8660cfcacc697de6bbe8ab435e227d5dd201e1768b2bcb2e0aa81</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hypotenuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>math::geometry::Triangle</Scope>
    </TokenIdentifier>
    <Path>dc/da1/classmath_1_1geometry_1_1_triangle.html</Path>
    <Anchor>acecb461fd2ad8660cfcacc697de6bbe8ab7cea6b154b83972205d04d8b849065b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::TriangularPrism</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Abstract>This class represents a triangular prism.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a5bf11abd115120cf40bd9611cd69528f</Anchor>
    <Abstract>TriangularPrism is default copyable at compile time.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a07820810fba6fbb799949288cb5cd520</Anchor>
    <Abstract>TriangularPrism is default movable at compile time.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a1d72085e82ebc2805dfa910dea5be744</Anchor>
    <Abstract>Returns a Triangle object representing a face of this prism.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>aae98c861f936e7e3eae26c56e6f45418</Anchor>
    <Abstract>Returns the length of the prism.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a9ae8cb35330139e13e106928fd093459</Anchor>
    <Abstract>TriangularPrism is default copyable at compile time.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>ad1a63b54c2913237e8fccb3e76d7cb04</Anchor>
    <Abstract>TriangularPrism is default movable at compile time.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>adfea1b75516b66b78b151025c8fb077b</Anchor>
    <Abstract>Returns the surface area of the prism.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>a2a9bc5a504181687ffaa907fb2b6ac38</Anchor>
    <Abstract>Returns the surface area of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a25865bbe6cbb82cb052e3457d5937070</Anchor>
    <Abstract>Returns the volume of the prism.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::ThreeDShape</Scope>
    </TokenIdentifier>
    <Path>dc/d32/classmath_1_1geometry_1_1_three_d_shape.html</Path>
    <Anchor>ad2e9b9b7de82333a816a7e7880e1919f</Anchor>
    <Abstract>Returns the volume of the shape.</Abstract>
    <DeclaredIn>3Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>abac55e8f7839a375a7b11167d5142387</Anchor>
    <Abstract>Creates a triangular prism with the given face and length.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularPrism</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a074e0811ab80d762a82d69a2ca0d43ce</Anchor>
    <Abstract>Creates a triangular prism with the given dimensions.</Abstract>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a274f7749734818f4e4cc7d6bfc66d2d4</Anchor>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TriangularPrism</Scope>
    </TokenIdentifier>
    <Path>dd/d2c/classmath_1_1geometry_1_1_triangular_prism.html</Path>
    <Anchor>a67fc88522b0d8188c8e2fb666da3fa42</Anchor>
    <DeclaredIn>triangular_prism.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::geometry::TwoDShape</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>math::geometry::TwoDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d47/classmath_1_1geometry_1_1_two_d_shape.html</Path>
    <Abstract>A base class for any kind of 2-dimensional shape.</Abstract>
    <DeclaredIn>2Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TwoDShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TwoDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d47/classmath_1_1geometry_1_1_two_d_shape.html</Path>
    <Anchor>ae640b04d52c025f25c541062df950177</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>2Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TwoDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d47/classmath_1_1geometry_1_1_two_d_shape.html</Path>
    <Anchor>a50c6bec0ea940e4121beaea9a0a482db</Anchor>
    <Abstract>Returns the area of the shape.</Abstract>
    <DeclaredIn>2Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::geometry::TwoDShape</Scope>
    </TokenIdentifier>
    <Path>d7/d47/classmath_1_1geometry_1_1_two_d_shape.html</Path>
    <Anchor>aee84170522fdabeb5548afc4915321a9</Anchor>
    <Abstract>Returns the perimeter of the shape.</Abstract>
    <DeclaredIn>2Dshape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Abstract>This namespace contains utilities for working with memory allocation and management.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga898974242418e2b20981a737c5e82410</Anchor>
    <Abstract>Allocates the desired number of objects with the desired alignment.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Anchor>ac5870c91fc3ffdf022b7714afb4e4d63</Anchor>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate_aligned</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga5a001535fbebdaa7499f0d95e2a5cec7</Anchor>
    <Abstract>Deallocates a pointer that was previously allocated with allocate_aligned() .</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStaticObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>ga6379140bdddcd776d5f4ab92eb64e1bc</Anchor>
    <Abstract>This function retrieves a static object of a specified type.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_static</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d7/ded/group__memory.html</Path>
    <Anchor>gaf83c9457a4906ef4e3d67963fb18418b</Anchor>
    <Abstract>This function forces some data to be evaluated at compile time.</Abstract>
    <DeclaredIn>StaticObjects.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Anchor>ad584035846c172918892caa9250985a2</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Anchor>a0fe0e90915fab76ee5dcec18711ceb22</Anchor>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Anchor>a8e55766b0cfedf720d471ab0f659bb13</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>memory</Scope>
    </TokenIdentifier>
    <Path>d4/daf/namespacememory.html</Path>
    <Anchor>aecfd625bb829beed62531a5ee2437253</Anchor>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory::aligned_pointer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Abstract>An RAII object that calls allocate_aligned() on construction and deallocate_aligned() on destruction.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OwnedType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>aff39c3fe41222c7ed1026d8b578a602e</Anchor>
    <Abstract>You can access the type of the owned object using this typdef.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aligned_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>a1a31813fc9d3aa560e59293eb44797e9</Anchor>
    <Abstract>aligned_pointer is default movable.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aligned_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>a8daaff2a63e982b8e88f3491761899d1</Anchor>
    <Abstract>aligned_pointer is not copyable.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aligned_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>aa537f3eb1ce16ce6e66db8280d16e2ab</Anchor>
    <Abstract>Creates an aligned_pointer.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~aligned_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>aaeac6c3ce8c6043064214b9c2bf18c46</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>a2dae8158e8e167b6548e0d03e62d6200</Anchor>
    <Abstract>Returns a reference to the owned object.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>a3aae0e9cc6663f344291568160bb373a</Anchor>
    <Abstract>aligned_pointer is default movable.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>a5cc6cdf8629bb5b439847a4b88883bf0</Anchor>
    <Abstract>aligned_pointer is not copyable.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>ae2dbeb1fb7171d43e3253e3d85854d9d</Anchor>
    <Abstract>Indexes into the pointer like a C-style array.</Abstract>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>acb4c425d36258fbab48339f988e0c433</Anchor>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>a0e39ebcc68c4edad1152becd010ff18e</Anchor>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator T*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>a08921458737dbca5abefa7692fcb36c3</Anchor>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::aligned_pointer</Scope>
    </TokenIdentifier>
    <Path>d8/dc8/classmemory_1_1aligned__pointer.html</Path>
    <Anchor>ad098b9b903e23f0cca8b22f376ea4c9e</Anchor>
    <DeclaredIn>alignment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory::AlignedAllocator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Abstract>An STL-style allocator that allocates aligned pointers.</Abstract>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>ae624283bb042d93c67fc6db71baece21</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_reference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a2f8bcb70926ea1fb1ed1bd7841be1002</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>difference_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>ac7b3b4ca669608c9b689db4b8493cf4f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a771e6435302455ea831bf499e8542256</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a96ba19f5c7e90e461d404d34e62cdf1c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a09c58de29127cfec14bed185defa1952</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a8e36d3c15ce5cf077797e2817558b186</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AlignedAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a602383d13c114e48e46837a08bb7127c</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AlignedAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>af388ba7c4dcfd59d10b72ff7e41fa9db</Anchor>
    <Abstract>AlignedAllocator is default movable at compile time.</Abstract>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AlignedAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a98466b02e3c087f9770682fad9ed1d75</Anchor>
    <Abstract>AlignedAllocator is default copyable at compile time.</Abstract>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AlignedAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a66259c9eeb7f6bfd75541aec4d8eb1ab</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>address</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a572e491493a898675c40cbf9112bb00e</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>address</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>ad87af84c3c33c848c5dabd82960e15ed</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a7853794976205409de6960b0df5502a2</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a7c3b954c43dd5196f12f1bbc1aafce5d</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>construct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>aa1722542d43324a828fae2cc5700b0e9</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>construct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a024636a00d1b45fbbff08c169107c3ac</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>ae9ea71231ee0d64f26a106cba7aab6de</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>ad12d41fbbd286ce6a9476924ea574a61</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>abb1d8257c3526d06fd15d95831053216</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a272c76e80d43c3d25f61cc8c6b1bcc82</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a7847538e78482abaee24d0a2dc9e654f</Anchor>
    <Abstract>AlignedAllocator is default movable at compile time.</Abstract>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a526046463790d495029f103407a0e148</Anchor>
    <Abstract>AlignedAllocator is default copyable at compile time.</Abstract>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>aef068abd394efb8ad0e3f4bc1369be8a</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a3a345077c14d5fe0f6ff5246e392efea</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAlignment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>a5340f2f6ae3f9ce1129662ee6d102442</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>memory::AlignedAllocator</Scope>
    </TokenIdentifier>
    <Path>dd/d1c/classmemory_1_1_aligned_allocator.html</Path>
    <Anchor>afa7aa86fa4aa81471d2442e5cde90457</Anchor>
    <DeclaredIn>AlignedAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory::MemoryPool</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Abstract>This class is a pool of preallocated memory that can be doled out in smaller chunks,...</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a971767b6016b113644a3fe8edab1a9ae</Anchor>
    <Abstract>MemoryPool is not copyable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>aa604bedbd9c422e8ea4fbd8433246cf1</Anchor>
    <Abstract>MemoryPool is not movable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a3a3c7c524288c119cdef6acd4d7b2ae9</Anchor>
    <Abstract>Creates a MemoryPool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MemoryPool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>aa58ea253ac53368ec2c4fb0dc34a61e5</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>ab2ab3edcb57848218c05ba581a1838eb</Anchor>
    <Abstract>Returns true if the memory pool&apos;s preallocated memory contains the passed memory location.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChunkSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>ad6aa8dd28a44fe2acef9f1f2a0d2a0fe</Anchor>
    <Abstract>Returns the pool&apos;s internal chunk size, in bytes.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemoryRootLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a9ca2f8e0d574cef5c19bca3f39b77819</Anchor>
    <Abstract>Returns the start location of the pool&apos;s preallocated memory block.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemainingCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>ac02613d5e2036a45bd671adb9f70fc33</Anchor>
    <Abstract>Returns the remaining space in the pool, expressed as the number of additional ObjectType objects it ...</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemainingSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>aa8d1bf99fb491b8553f10b410304cade</Anchor>
    <Abstract>Returns the total remaining free space in the memory pool, in bytes.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>ac09a5fe672f16fa5bfdd36065527406f</Anchor>
    <Abstract>Returns the total size of this memory pool, expressed as the number of ObjectType objects it can hold...</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>ad13c784390a47af9849fa84649f723ac</Anchor>
    <Abstract>Returns the total size, in bytes, of the memory pool&apos;s preallocated memory.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a4a210c90c4aaaec80a2fc9b8988957ea</Anchor>
    <Abstract>MemoryPool is not copyable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a27a98abdd319c29600a3bdfc8f473f74</Anchor>
    <Abstract>MemoryPool is not movable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>owns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>abe7fbdd937281bd039d1c4f8dc471c88</Anchor>
    <Abstract>Returns true if the pool owns the specified object – ie, if the pointer to the object is within the p...</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a154b4dab932dc354cd517ac5a09938f9</Anchor>
    <Abstract>Allocates the desired number of bytes from the pool&apos;s preallocated memory.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>ac0a943d119043abd0fc464718c76e89f</Anchor>
    <Abstract>Allocates sizeof(ObjectType) bytes, and returns a typed pointer to the allocated memory location.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>construct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a0aaf924c949ad00dcb39475ebd8d685e</Anchor>
    <Abstract>Allocates space for an object and constructs it in the allocated memory space.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constructOrBust</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a738e23812da135ce40163168ba3320ce</Anchor>
    <Abstract>Similar to construct(), but if allocation from the memory pool fails, falls back to a regular new cal...</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a2b753c3731bc2c4d428617dfc2d4980a</Anchor>
    <Abstract>Deallocates a certain number of bytes at a specific location within the pool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a27186b1031fe082a1348870960cb5677</Anchor>
    <Abstract>Deallocates the passed object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destruct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>abc038159ca0b33b93e7eb2fe07fc0f39</Anchor>
    <Abstract>Calls an object&apos;s destructor and frees its memory from the pool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>memory::MemoryPool</Scope>
    </TokenIdentifier>
    <Path>d7/db7/classmemory_1_1_memory_pool.html</Path>
    <Anchor>a85e6246e9a3189d98b89359c0a198aa7</Anchor>
    <Abstract>Creates a MemoryPool that can hold a specified number of objects of a certain type.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory::MemoryPoolAllocator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Abstract>An STL-style allocator that uses an internal MemoryPool to allocate objects.</Abstract>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>aece42e1e0758d034f8f0a6df6fcaf38b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_reference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a0f6bbb244030a87cf9f5336167f54231</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>difference_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>ab91e85d627cc37a0b908efb5be2e13c9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a51bdbc4d319b9af147030d8b47198512</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a279dd42ea1c16f9ac08f13395206fc96</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>ae309fee5fec6adf7e00b8f982e06dbf5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>ae8446653e730021d337ea30d88440b88</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a17d942a61eb211c447917ea46a4e53ae</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a59f80b31527b054ab72150e5692aeb71</Anchor>
    <Abstract>MemoryPoolAllocator is not copyable.</Abstract>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>abb2121923539f285a24044610d668f43</Anchor>
    <Abstract>MemoryPoolAllocator is not movable.</Abstract>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>address</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a3472135c39e9c601cf2c2b88f4205492</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>address</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a1224acca9f62182fd1fc7a99e02a0fce</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a848da3374f7a82be79662d1f100403c0</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a7dc0233f4c9f8a2c674f93d32d3c9aef</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>construct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>ad57789f5a20b4c83ab5b6538d75f9da2</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>construct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a1f79e8ab64f758a98bc848aa9347dab8</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>aca4849d072b23a02a5694e86e16fd8a2</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a2272af12104212c790f95bf2887a16b0</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a75297049fb54277850c32ba79fd15b57</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>ac9faf8b29d9840ef941beef5a522b8de</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a70a73af08b3aaa04d0d4efb5475c3fbb</Anchor>
    <Abstract>MemoryPoolAllocator is not copyable.</Abstract>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a3974e24758023dbdcd4ce2490defeec4</Anchor>
    <Abstract>MemoryPoolAllocator is not movable.</Abstract>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolAllocator</Scope>
    </TokenIdentifier>
    <Path>db/db8/classmemory_1_1_memory_pool_allocator.html</Path>
    <Anchor>a33508cd3b7bf351ebe4bda81a7bde26d</Anchor>
    <DeclaredIn>MemoryPoolAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory::MemoryPoolPointer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Abstract>A smart pointer to an object that lives within a MemoryPool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OwnedType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>ad806f766437d35af1ba0bb28cc409c75</Anchor>
    <Abstract>You can access the type of the owned object via this typedef.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>aafa2560429bed2ea462e07c1d189fd60</Anchor>
    <Abstract>MemoryPoolPointer is not copyable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>aff8a522538b6f21bb8ea06b4a4b5d6e7</Anchor>
    <Abstract>Creates the owned object by allocating its memory from the passed memory pool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryPoolPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a13ce95a64934a90d1b15b363f9827858</Anchor>
    <Abstract>MemoryPoolPointer is default movable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MemoryPoolPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a18ddd0204a55637168502311e08ad8a3</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOwnedByPool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>ac12877ca81ae44676e120319acf16703</Anchor>
    <Abstract>Returns true if the object exists and was allocated from the memory pool.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a6239bb0dbec6bb9bf1ca94311dcfe5bc</Anchor>
    <Abstract>Returns a reference to the owned object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a3124fecd9a6de9a278cd2dc935c29e0a</Anchor>
    <Abstract>MemoryPoolPointer is not copyable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>aed1fd4a657ff1b51efd2c0ba0228b9bd</Anchor>
    <Abstract>MemoryPoolPointer is default movable.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>af87c683762c785e04c85919ee336740b</Anchor>
    <Abstract>Accessors Returns a pointer to the owned object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>ada07e57a5229bfd54dedff83c53f5ac6</Anchor>
    <Abstract>Accessors Returns a pointer to the owned object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator ObjectType *</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a3f38d6bc52a88689221298adc80b22f2</Anchor>
    <Abstract>Accessors Returns a pointer to the owned object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::MemoryPoolPointer</Scope>
    </TokenIdentifier>
    <Path>d1/d17/classmemory_1_1_memory_pool_pointer.html</Path>
    <Anchor>a6b829d136efa2c08b0160f920c085e06</Anchor>
    <Abstract>Accessors Returns a pointer to the owned object.</Abstract>
    <DeclaredIn>MemoryPool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory::OptionalObject</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Abstract>An object that retains its allocated memory, but can be dynamically constructed and destroyed (withou...</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>a7a2425befdfe0797767d29d13c39bc8b</Anchor>
    <Abstract>You can access the type of the owned object with this typedef.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>a9fafb76891ef2eb7dd1c38bbd300075f</Anchor>
    <Abstract>Constructs the object with the given arguments.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>aaf4f2edf40902cbb0aaf8d864e4fa283</Anchor>
    <Abstract>Calls the object&apos;s destructor, but does not deallocate its memory.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>a75dd2ddd3c27010c75d647e44528542b</Anchor>
    <Abstract>Returns true if the object currently exists.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>a0f014c44b88c898d59d61e9b94d37424</Anchor>
    <Abstract>Returns a reference to the owned object.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OptionalObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>a7b7bf0f69c703aa1313f1381fe0bb741</Anchor>
    <Abstract>Creates an uninitialized, null object.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OptionalObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>a231a4aa5f8fa327d4067e4e7cf762412</Anchor>
    <Abstract>Constructs the object with the given arguments.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OptionalObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>a19ac2bf896e9b2519e04033c8da17561</Anchor>
    <Abstract>Copy constructor.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OptionalObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>a8f82d128c4c9a5e91bdfe6e7b1ccdf28</Anchor>
    <Abstract>Move constructor.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>a4304be7b1698afa72cbf2bd7b1395b9f</Anchor>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>a48ea40a952f9763cba7204c0fe167cde</Anchor>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>af715ccd87f00ad50ebee42b4cdcc2e4a</Anchor>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>ae6aa90a16e2aab2e0d5def79a17f4bba</Anchor>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>memory::OptionalObject</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classmemory_1_1_optional_object.html</Path>
    <Anchor>aba540126cf53fde553e9842c14ed2d04</Anchor>
    <Abstract>Returns the size of the owned object (and thus, the preallocated memory), in bytes.</Abstract>
    <DeclaredIn>OptionalObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory::RawData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Abstract>This class is a wrapper around a pointer to some raw data on the heap.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a4b870978fac14183a60a2acad2fa02b9</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>ad5fb5ab0df1348d8cd9e3b912de14607</Anchor>
    <Abstract>Allocates new memory for this object.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a43af81207071490e4c75eda48492390d</Anchor>
    <Abstract>Writes the specified value to every byte in this object&apos;s owned memory.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>free</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a60d729ca22f4a9d7f5bffc5e5f5fc562</Anchor>
    <Abstract>Frees all of this object&apos;s internal memory.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>afaf5c9433a64c64e2c1868a42d29af63</Anchor>
    <Abstract>Returns the size (in bytes) of the data that this object owns.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a10a8e1aac97c8409cab5e1330c8867b7</Anchor>
    <Abstract>Computes a hash value for this object&apos;s data, based on the specified hash type.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a20412dc90007f831b6517c32e9f7a2ce</Anchor>
    <Abstract>Returns true if this data object is empty.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a29ec54677e762b6e3c1e9f72e385e4d5</Anchor>
    <Abstract>Returns this object&apos;s memory pointer and releases ownership of it.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a851b3ecd6d3382f7c145e77797e712a9</Anchor>
    <Abstract>Returns a string representation of the data this object contains.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>ac54cb0ef701dbeb13d0a314e50fe2071</Anchor>
    <Abstract>Writes this object&apos;s data to the passed output stream.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>af7fbd020e90abb82b2338b2651c677fc</Anchor>
    <Abstract>Fills this object&apos;s owned memory with zeroes.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>ada1573497222029e51f630d3b152cd9e</Anchor>
    <Abstract>Constructs an empty RawData object that owns no memory.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a19c66ea7bc6d8cc72ded7222e8dbc0c6</Anchor>
    <Abstract>Constructs a RawData objects that is allocated some initial memory, optionally initialized to zeroes.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a89ab16653ea67be0f77eeda868eeba98</Anchor>
    <Abstract>Constructs a RawData object that refers to the specified data.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a0932ace4894665bb0786e6919cb8cbbd</Anchor>
    <Abstract>Constructs a RawData object whose memory is initialized by reading the entire contents of the input s...</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a2787a563724c633437cc5638103b9d9b</Anchor>
    <Abstract>Constructs a RawData object whose memory is initialized with the contents of the string.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a8d927db40cdb0f8e26deb987fbbbfdf7</Anchor>
    <Abstract>Copy constructor.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RawData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>acd8fa3c17ff6b8ca50ae02fd3f4928ff</Anchor>
    <Abstract>Move constructor.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>ad9284e2c16a6b12f459bbb80ee28b76a</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a8e08d1e4fec54d4ab4f223571e2e70e4</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>ac722aca10f99ea2e25ac11317f34a9dd</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a9e45b41fcf5317ae95a35b6ef9ee2d58</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>ade07441396473112c016081ca0d8aa9e</Anchor>
    <Abstract>Appends some data to the end of this object&apos;s data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a65573b3b9799ea544ff78b6c6054d203</Anchor>
    <Abstract>Appends some data to the end of this object&apos;s data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a46fedf38d2ce15b989b5e16075078d3e</Anchor>
    <Abstract>Prepends some data to the beginning of this object&apos;s data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a9b400c433333f288de56869b38598253</Anchor>
    <Abstract>Prepends some data to the beginning of this object&apos;s data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>abe5e24bf036a38edda1a088704fdf415</Anchor>
    <Abstract>Overwrites this object&apos;s data with the input data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a62965d82eff008b31a2ff736cd92953a</Anchor>
    <Abstract>Overwrites this object&apos;s data with the input data, reallocating memory if necessary.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a2e0bf06d57896ee9529f4b0a5739deae</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>acbbdcb4d960dc4d07f1ebd765c4ee8d4</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a8c67ee2079ccb3bcf56b5c6ef71b3c78</Anchor>
    <Abstract>Returns a new RawData object that contains a copy of this object&apos;s data.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a267c4a7eeb88bf05ea7da0c3cd8f83b2</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a09bf929ea26bf80586d5422195e0e9ce</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>ac720afe9abfaf5ad737c60e66f1f2165</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::RawData</Scope>
    </TokenIdentifier>
    <Path>d1/db0/classmemory_1_1_raw_data.html</Path>
    <Anchor>a8aec7688eca0691d04ac20576a587145</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory::ReferenceCountedObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Abstract>An object that is reference-counted, and garbage collected once the reference count reaches 0.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Anchor>a2ba97995dd88c16cf283fce3d6d53902</Anchor>
    <Abstract>Decrements the object&apos;s reference count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decRefCountWithoutDeleting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Anchor>a7243679968d6a41bee91ab40a1c8ebd3</Anchor>
    <Abstract>Decrements the object&apos;s reference count, but doesn&apos;t delete the object if the ref count reaches 0.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Anchor>a40a5b355c562aa5c235ab48fc3e993ab</Anchor>
    <Abstract>Returns the object&apos;s current reference count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Anchor>a03e6249927e599af13a7d241a5dc4867</Anchor>
    <Abstract>Increments the object&apos;s reference count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Anchor>ac09f52626220dcde7b3b58c98fba6a41</Anchor>
    <Abstract>Creates the reference-counted object (with an initial ref count of zero).</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Anchor>af70f2ef92e7f33affe49e2fdd1529f48</Anchor>
    <Abstract>Copying from another object does not affect this one&apos;s reference-count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Anchor>a57ec6a8071fc140b600f2b9e151e60e8</Anchor>
    <Abstract>Copying from another object does not affect this one&apos;s reference-count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ReferenceCountedObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Anchor>a69faf28ca58c46b5483e450cb765d078</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Anchor>ab5da5cb59cddcc55dd4f29de84f3aa8b</Anchor>
    <Abstract>Copying from another object does not affect this one&apos;s reference-count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObject</Scope>
    </TokenIdentifier>
    <Path>da/d8c/classmemory_1_1_reference_counted_object.html</Path>
    <Anchor>a58d7e0f019bb97e193a5d43c98ef1f4c</Anchor>
    <Abstract>Copying from another object does not affect this one&apos;s reference-count.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory::ReferenceCountedObjectPtr</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferencedType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a4ef3977d138964fb21ac812e9632bd51</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a303c9d427965d2201169ca1f8dd9c38f</Anchor>
    <Abstract>Creates a pointer to a null object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a41b8b05088cc6b58d0971256a0589e37</Anchor>
    <Abstract>Copies another pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a70a6011e8bec4eb778aaad15ad3667ae</Anchor>
    <Abstract>Copies another pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>af69e302138d198ad24ad8a2068ba6798</Anchor>
    <Abstract>Takes-over the object from another pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>aafe3f223e066e0736c91a7106b42c242</Anchor>
    <Abstract>Creates a pointer to an object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a0b0bf7a2a5f27fa21d0c4a148aa25855</Anchor>
    <Abstract>Creates a pointer to an object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ReferenceCountedObjectPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>ab4281f14ff205fa180030b58f8b67797</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>ab7dda19f15e8f0a1713db608b767523d</Anchor>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a7a2976a523d882b6eefef0a260b2bb89</Anchor>
    <Abstract>Returns the object that this pointer references.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a1b4e9e8520cb4d0e072c9d6dce6a5046</Anchor>
    <Abstract>Checks whether this pointer is null.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a59a920439f7f7500bfdcafbc45d2eef5</Anchor>
    <Abstract>Compares two ReferenceCountedObjectPtrs.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>acda6010704c54d49016512c741b9f531</Anchor>
    <Abstract>Compares two ReferenceCountedObjectPtrs.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a1ac60b82e9a99113a3bd4117d35f7b4c</Anchor>
    <Abstract>Checks whether this pointer is null.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>aa7ec64aeec618d967b25cfc18f8df463</Anchor>
    <Abstract>Dereferences the object that this pointer references.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a077d8fdb0c5ea705b1d6925d1375228c</Anchor>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>ab07338f699cb1679c161ab0e6b03e5e3</Anchor>
    <Abstract>Changes this pointer to point at a different object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>ae61b8cec896dce44005df3de8c571f0c</Anchor>
    <Abstract>Changes this pointer to point at a different object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>af2e48c8f81dd8a83da9f71ec6aafe149</Anchor>
    <Abstract>Resets this pointer to a null pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a35c76ac938e5cdcbae104b3cfd60d36e</Anchor>
    <Abstract>Takes-over the object from another pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>ac4da794e9ff05e03c3a77ab8869477ae</Anchor>
    <Abstract>Changes this pointer to point at a different object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a79cc9cd88de7cc13c2f2a41433834792</Anchor>
    <Abstract>Changes this pointer to point at a different object.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>afa3e327e7a5d2e3269a38c5202335465</Anchor>
    <Abstract>Compares two ReferenceCountedObjectPtrs.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>aa573953258b5937df6ea5dcd1d0a50e6</Anchor>
    <Abstract>Compares two ReferenceCountedObjectPtrs.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a804ca4e17d5271e4c87166f6254c794e</Anchor>
    <Abstract>Checks whether this pointer is null.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::ReferenceCountedObjectPtr</Scope>
    </TokenIdentifier>
    <Path>d6/d26/classmemory_1_1_reference_counted_object_ptr.html</Path>
    <Anchor>a6ce6e3ed918c854a0d5c7a6912c0a5bc</Anchor>
    <Abstract>Resets this object to a null pointer.</Abstract>
    <DeclaredIn>ReferenceCountedObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memory::StackAllocator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Abstract>An STL-style allocator that uses stack space to allocate objects.</Abstract>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>a302ceb3b4a59ff7b1a9185c1ba364ed0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_reference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>a0eaa9f9dc501a64f38b3d8d3a6562797</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>difference_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>a74177d34ad84e4f83bd5df2dab1bc5de</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>af8b4595e15b00bb4f15c4eeba13e5e57</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>a60a0b08cc9a694eea83a74cbfed9b2fb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>a5e1574b79f57afe522d79944562561f7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>aec4f7ff39ad939a0f6604bd9e93feec6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>a7d773b1da0b968ac377f91072101d455</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>a5197a81bee071bf2ce265dd860eb4dd8</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>ae498f6adebe3303440f85078133e19aa</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>ac726af64ae9ea0e2471e5a29bc904bb7</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>a0c26fd4453b75dbbf899e54bd0702f3a</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>aacee795efda1b6324b21ef553f6397e4</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackAllocator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>affacd3179ff0a5a62862d4a5cf3cde1a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>memory::StackAllocator</Scope>
    </TokenIdentifier>
    <Path>d1/d2b/classmemory_1_1_stack_allocator.html</Path>
    <Anchor>a5d2a05c9a04f539e3cdf0eb2d801bf0c</Anchor>
    <DeclaredIn>stack_allocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d8/db6/namespacemeta.html</Path>
    <Abstract>This namespace contains utilities for template metaprogramming.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gae9137d0122fa88934aef2a4634925854</Anchor>
    <Abstract>A utility typedef for an empty TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_type_list_from_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga115a8d3a6dd7fd06dfb451e18dc7a82c</Anchor>
    <Abstract>Creates a typelist from the template arguments of a template type.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_typelist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gab6aec098859f26d48fdae64b7721ef3d</Anchor>
    <Abstract>True if the specified type is a specialization of TypeList.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_type_list_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d8/db6/namespacemeta.html</Path>
    <Anchor>a2ea10f17ade21c08af8c3cadc0dcac9b</Anchor>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type_list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga1970162982459d4ff86837ef09bf2c3a</Anchor>
    <Abstract>@concept type_list</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta::covariance_check</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>meta::covariance_check</Scope>
    </TokenIdentifier>
    <Path>d3/df7/structmeta_1_1covariance__check.html</Path>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta::covariance_check&lt; T&lt; Ds... &gt;, T&lt; Bs... &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>meta::covariance_check&lt; T&lt; Ds... &gt;, T&lt; Bs... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>df/d6e/structmeta_1_1covariance__check_3_01_t_3_01_ds_8_8_8_01_4_00_01_t_3_01_bs_8_8_8_01_4_01_4.html</Path>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta::is_none_of</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>meta::is_none_of</Scope>
    </TokenIdentifier>
    <Path>d5/d72/structmeta_1_1is__none__of.html</Path>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta::is_one_of</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>meta::is_one_of</Scope>
    </TokenIdentifier>
    <Path>d1/d59/structmeta_1_1is__one__of.html</Path>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta::is_specialization</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>meta::is_specialization</Scope>
    </TokenIdentifier>
    <Path>d0/d9a/structmeta_1_1is__specialization.html</Path>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta::is_specialization&lt; Template&lt; Args... &gt;, Template &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>meta::is_specialization&lt; Template&lt; Args... &gt;, Template &gt;</Scope>
    </TokenIdentifier>
    <Path>dd/d9f/structmeta_1_1is__specialization_3_01_template_3_01_args_8_8_8_01_4_00_01_template_01_4.html</Path>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta::TypeList</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Abstract>A compile-time list of types that can be manipulated.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a497620ac6e35976d49a8dc897a43c728</Anchor>
    <Abstract>The type of a new TypeList with the given types appended to the end.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>aaa7aed2a8915342ded7f77d1d4332718</Anchor>
    <Abstract>The type of a new TypeList with types added from another TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIfAbsent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>afda7e9eb484975a96ac7650e2ea4a110</Anchor>
    <Abstract>For each type in the passed list of types, adds it to the TypeList if it was not already in the list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>ae3c811cbb96e424939618e06824bd514</Anchor>
    <Abstract>Appends a type to the end of the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_to</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a0d0c46f8256995053c560cbf549192a2</Anchor>
    <Abstract>Applies the types in this TypeList to a class template, as its template arguments.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a3937cad484c565e75f456d1fcee73784</Anchor>
    <Abstract>Gets the type of an element of the list at the specified index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>ab26a020d3c96a0838431334afb15cf3d</Anchor>
    <Abstract>The type of the last element in the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a665752851436124da071d3aa67c997d6</Anchor>
    <Abstract>Creates an empty TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>common_with</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a1cde21ab3769005ac8f1b0163c970218</Anchor>
    <Abstract>The type of a new TypeList that contains only types that were present in the original list and the pa...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>front</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a3461bc7c00934b6b80dcfaeee9a329ac</Anchor>
    <Abstract>The type of the first element in the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a28862d6c3bb64250c2c4f12347c84d88</Anchor>
    <Abstract>Inserts a type in the TypeList at the given Index .</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>not_in</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a4f923abd9d31f45679cdfe766601bd4b</Anchor>
    <Abstract>The type of a new TypeList that contains only types that were present in the original list and not in...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>ac3107b564759c17110c888f516c4b893</Anchor>
    <Abstract>Prepends a type to the beginning of the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a96fe33567c0c519098b0a70c42d7d0fd</Anchor>
    <Abstract>The type of a new TypeList with all occurrences of the passed types removed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a11f8c1cd75d74466a6bcbde4e68dd5cb</Anchor>
    <Abstract>The type of a new TypeList with the type at the specified index removed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_duplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>ae091b28f06dbd9a2c340ce7c7033f4d8</Anchor>
    <Abstract>The type of a new TypeList with all duplicates removed – if a type appeared in the original list mult...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_first</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a51ed45ad6fba302a0521c40f850a6fa9</Anchor>
    <Abstract>Removes the first element of the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a0ff6fdc23539c764e1718a91e5a5072f</Anchor>
    <Abstract>Evaluates the predicate for each type in the list, and removes it if the predicate is met.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if_not</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>ab01b40f367f1bfe0d384b4355ea4351c</Anchor>
    <Abstract>Evaluates the predicate for each type in the list, and removes it if the predicate is not met.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_last</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>ae9da1e6d4d6b90f7b9b08463c0553cfa</Anchor>
    <Abstract>Removes the last element of the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_null_types</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>ae2e483efb883df412e1aa30c3fc4f944</Anchor>
    <Abstract>If any NullType elements are present in this TypeList, removes them.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>afa399e60f7699a3c402cdec27cff9e42</Anchor>
    <Abstract>Replaces all occurrences of Replace in the list with With.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>ad97e8449cd5e24f4d23c26d77d98a63d</Anchor>
    <Abstract>Replaces the type at the specified Index with the new type ReplaceWith.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a54c2c46b73b85991d04cd8559076379e</Anchor>
    <Abstract>The type of a new TypeList with the same types as this one, but in reverse order.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a832ccde8c6ff4e3732f389ea3fd9891e</Anchor>
    <Abstract>Swaps two types in the list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a34d3035d4fbdba44d98614dc011e4063</Anchor>
    <Abstract>Swaps the types at two indices in the list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TypeID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a836ab68533e989626020433ec834a7e3</Anchor>
    <Abstract>You can get the fully specialized type of this TypeList using this alias.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TypeList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a467e671b2bc31135d30f1de3f593c8b6</Anchor>
    <Abstract>You can&apos;t actually create an instance of one, TypeLists are only static objects.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>construct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>abc86b04d569e8b251e0f6dd66571f9ab</Anchor>
    <Abstract>Constructs an object of the type at the given index in the list.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>for_all</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a498e13cb5e889527e82ca3a8743fcd06</Anchor>
    <Abstract>Calls a templated function once, with the template arguments being the types contained in the list.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>for_each</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>ac15390945a1c28ee8d6da0a243d00276</Anchor>
    <Abstract>Calls a templated function for each type in the list.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_unique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a569f01767a80822500e7274346552fa2</Anchor>
    <Abstract>The same as construct() , except it returns a unique_ptr to the new object.</Abstract>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>aec710093f4b29129508715a40c9b7416</Anchor>
    <Abstract>True if all the passed types are contained in this TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_duplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>acb221491c37c27717d16a7f739d337e8</Anchor>
    <Abstract>True if any type appears in the list more than once.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>abe3f0625c8839c9df920a9e41d80bfd0</Anchor>
    <Abstract>True if this TypeList contains at least one of the passed types.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a08ed2ea9451f121ce4f9d5bd4b8fa3ce</Anchor>
    <Abstract>The number of types in the TypeList that satisfy the predicate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if_not</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a99a45020f0aca462845094c8f8e79458</Anchor>
    <Abstract>The number of types in the TypeList that do not satisfy the predicate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>adba36040537372525b1e5460b42db570</Anchor>
    <Abstract>True if the TypeList is empty; false otherwise.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>aeafea4ab27d9d66bdf44edd373f8745b</Anchor>
    <Abstract>True if the other TypeList holds the same types in the same order as this one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equal_ignore_order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a57a5fe6d6cc9a1b09a436bb18a907532</Anchor>
    <Abstract>True if the other TypeList holds the same types as this one, regardless of their order.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>index_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>abdd4d01eb3e616d06d128239da0d353e</Anchor>
    <Abstract>The index of the first occurrence of the specified type in the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>a9203351b53902bf7c988751d61474f53</Anchor>
    <Abstract>The number of times the given type appears in this TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList</Scope>
    </TokenIdentifier>
    <Path>d4/d06/classmeta_1_1_type_list.html</Path>
    <Anchor>ab787551fd9dab3277cb8f9b0a374b547</Anchor>
    <Abstract>The total size of the TypeList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meta::TypeList&lt;&gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a6d2670076010b1252f494ca2452d8717</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a4e80edd83a8abcc672d69ce052dd38c7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIfAbsent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a6315dbfb799cd4aa6e5cf53ac25ab70c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>accb9a3de42c91551128a7c6e84fba730</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_to</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>acf58c84c7b35fc6ad1735f5496968f9a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>ae43ef5137572fea070a409ec888708f9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>ace909e7664887cfa8aa83026bb960fbe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a506ed53a505d3832eb453ea34a862f13</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>common_with</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a47b67613340b5810479eb6ab567d4eda</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>front</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>ad8732490cc76134fa3bb75f3069e232e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>ac58bbf474a40b871814b0de1fb950e64</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>not_in</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a00151e0096a3d2c28b0e4200dddb6e48</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a0ca8b41efcceecdbec25585e75f1aa34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a9f42f13e87e67f84f27d94e9bd63c685</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>aeb4d1544867a23ee10a669d5a7193bf9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_duplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a8890be4a660109e5cac7ae15a0d693d3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_first</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a3f6586c294004c1ea45d5298bd9bfee8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>abe7f93298324dc0de94969d9453b8600</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if_not</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>ac82e677767bba9230a732136d87eed8a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_last</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a0b6b988e90f2a340626be0970be9a8aa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_null_types</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>aa7de554a31d6de36d88b0548eab3b46e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a4a5214662d76f5363cdd83ce15f6659e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a8e4893f082dde6bf09cf68d707113735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>ad5b3a7c47a042bd432d3bef822372ddd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a8741885fd91a99dbdaebb148f19f33d3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>aa4fb1da3ae3f41bdbf0922c27d852568</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TypeID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a499a14227959614a24a85ee7e7eb1fd6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TypeList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>ab9d2cf99bd692a77bf6a0a50cceb6996</Anchor>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>construct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a9ef64b2376cf9baee4313cd287856618</Anchor>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>for_all</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a3ac378bb886709e2cfecab2f9f7271fe</Anchor>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>for_each</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a3236bcacb1d3267b7fa4adf740df26ed</Anchor>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_unique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>abd43b9c3fed4f94bcfe4f0619d36a5ba</Anchor>
    <DeclaredIn>TypeList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a7c8cf56113085839de16cfe3a069a8d6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_duplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a3188742d2697f5d19bc919654532fd13</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>ad94445190cb71d6e515fa88667061fe1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a79c0652ade982ec78dbe380ad652234e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if_not</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a37396b630b97df664be881aacdaef605</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a3de2e973a452c0772e1206f3a6a18f95</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>aef0ce074627ca8233e523b049740aa65</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equal_ignore_order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a4b6848d23e5e2ff8de1f19004881a7b3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>index_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a68e5689f114053da972b1a054cf299fa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_of</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a7958fa9fe37d753f435cdc049d61544d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>meta::TypeList&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>dc/de3/classmeta_1_1_type_list_3_4.html</Path>
    <Anchor>a4fb552e7542d3e6681e4fba4ec7a0b1d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midi</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>midi</Scope>
    </TokenIdentifier>
    <Path>da/d3d/namespacemidi.html</Path>
    <Abstract>This namespace contains utilities for working with MIDI.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midi::MtsClient</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>midi::MtsClient</Scope>
    </TokenIdentifier>
    <Path>d6/dc9/classmidi_1_1_mts_client.html</Path>
    <DeclaredIn>mts_client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frequencyToMidi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::MtsClient</Scope>
    </TokenIdentifier>
    <Path>d6/dc9/classmidi_1_1_mts_client.html</Path>
    <Anchor>a9384e01133ed828e1d0af9dfe3d7bb14</Anchor>
    <Abstract>Converts a given frequency in Hz to a MIDI note, using the master tuning table.</Abstract>
    <DeclaredIn>mts_client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScaleName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::MtsClient</Scope>
    </TokenIdentifier>
    <Path>d6/dc9/classmidi_1_1_mts_client.html</Path>
    <Anchor>acb42bb4f972602c030bec1d6065b78a0</Anchor>
    <Abstract>Returns the scale name specified by the MTS-ESP session master.</Abstract>
    <DeclaredIn>mts_client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::MtsClient</Scope>
    </TokenIdentifier>
    <Path>d6/dc9/classmidi_1_1_mts_client.html</Path>
    <Anchor>ad4ac26b01136851ab130c4d2975d5294</Anchor>
    <Abstract>Returns true if this client is currently connected to an MTS-ESP session master.</Abstract>
    <DeclaredIn>mts_client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midiToFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::MtsClient</Scope>
    </TokenIdentifier>
    <Path>d6/dc9/classmidi_1_1_mts_client.html</Path>
    <Anchor>adfff0e968cfd66baf02fe49402d857c5</Anchor>
    <Abstract>Converts a given MIDI note to a frequency in Hz, using the master tuning table.</Abstract>
    <DeclaredIn>mts_client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retuneAmountInSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::MtsClient</Scope>
    </TokenIdentifier>
    <Path>d6/dc9/classmidi_1_1_mts_client.html</Path>
    <Anchor>ab3764f85625ace9a041f1e2b1416b4d2</Anchor>
    <Abstract>Returns the retune amount in semitones for a given MIDI pitch.</Abstract>
    <DeclaredIn>mts_client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldFilterNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::MtsClient</Scope>
    </TokenIdentifier>
    <Path>d6/dc9/classmidi_1_1_mts_client.html</Path>
    <Anchor>af23d534b51a503b98e727ed037296e8d</Anchor>
    <Abstract>MTS-ESP supports &quot;filtering&quot; some notes out of tuning tables.</Abstract>
    <DeclaredIn>mts_client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midi::PitchbendMapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d7/d01/classmidi_1_1_pitchbend_mapper.html</Path>
    <Abstract>This class maps MIDI pitchbend values and note numbers to fractional MIDI note numbers.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAdjustedMidiPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d7/d01/classmidi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a52dc5e73f5f0f9e8339ad3203fa4304a</Anchor>
    <Abstract>Returns an adjusted MIDI pitch for an incoming MIDI pitch.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastReceivedPitchbend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d7/d01/classmidi_1_1_pitchbend_mapper.html</Path>
    <Anchor>ad1447b242182800e32f6f5573eb32472</Anchor>
    <Abstract>Returns the last pitchbend value that was set via newPitchbendReceived() .</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRangeDown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d7/d01/classmidi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a4ed4d28880f235f533b573d42aabb5d4</Anchor>
    <Abstract>Returns the pitchbend range down in semitones.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRangeUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d7/d01/classmidi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a245352756e26c01251e19597c99d4c70</Anchor>
    <Abstract>Returns the pitchbend range up in semitones.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newPitchbendReceived</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d7/d01/classmidi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a872f4612445b7b9766e35324257b5534</Anchor>
    <Abstract>Each incoming pitchbend value from the pitch wheel should be sent to this function.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPitchbend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d7/d01/classmidi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a87bf8debfc8b05b957d5e591d4140f0d</Anchor>
    <Abstract>Resets the state of the internal pitchbend to 64 (neutral).</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::PitchbendMapper</Scope>
    </TokenIdentifier>
    <Path>d7/d01/classmidi_1_1_pitchbend_mapper.html</Path>
    <Anchor>a4f2e4c9661cdd382f7f707c61c4af4c3</Anchor>
    <Abstract>Sets the range up and down in semitones.</Abstract>
    <DeclaredIn>PitchbendMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midi::VelocityMapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>midi::VelocityMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d01/classmidi_1_1_velocity_mapper.html</Path>
    <Abstract>This class allows you to impose a &quot;sensitivity&quot; parameter on MIDI messages velocities.</Abstract>
    <DeclaredIn>VelocityMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSensitivity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::VelocityMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d01/classmidi_1_1_velocity_mapper.html</Path>
    <Anchor>aa6640ebeb15f862e50ca71ec93bf7ce6</Anchor>
    <Abstract>Returns the sensitivity that was set.</Abstract>
    <DeclaredIn>VelocityMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSensitivity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::VelocityMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d01/classmidi_1_1_velocity_mapper.html</Path>
    <Anchor>aaadefc5e81e6f9bbe41684c51c6146ae</Anchor>
    <Abstract>Sets the sensitivity of incoming velocity messages.</Abstract>
    <DeclaredIn>VelocityMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGainForVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::VelocityMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d01/classmidi_1_1_velocity_mapper.html</Path>
    <Anchor>a25d823c6d2c515c6a7fa5bff9f6f77fd</Anchor>
    <DeclaredIn>VelocityMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGainForVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>midi::VelocityMapper</Scope>
    </TokenIdentifier>
    <Path>d3/d01/classmidi_1_1_velocity_mapper.html</Path>
    <Anchor>a0168d7d5199435b33d352219920313cb</Anchor>
    <DeclaredIn>VelocityMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>misc</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>misc</Scope>
    </TokenIdentifier>
    <Path>d9/d37/namespacemisc.html</Path>
    <Abstract>This namespace contains miscellaneous things.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>ga68eeb3d3bbba66a9432a45a4c775ec9f</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemangledTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gaf540d4bebc4621fa4b3e745a3dae3408</Anchor>
    <Abstract>Returns the demangled name of the type of the passed object, ending with &quot; pointer&quot;.</Abstract>
    <DeclaredIn>TypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignore_unused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc</Scope>
    </TokenIdentifier>
    <Path>d1/ded/group__misc.html</Path>
    <Anchor>ga4048d6d752c40052344526e820f1d8fc</Anchor>
    <Abstract>A utility function to silence unused variable warnings.</Abstract>
    <DeclaredIn>IgnoreUnused.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>misc::Dimensions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>ac1edcede1cc07e9a95c0baadaec39972</Anchor>
    <Abstract>Creates an invalid Dimensions object.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>acfc69f032708dcda51ca170502b50728</Anchor>
    <Abstract>Creates a valid Dimensions object with a specified width and height.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Dimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>ac30730827b7ad7b4c9c7fe684dc8a662</Anchor>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>a99b9d0fe2b001343f87491b103c60b5b</Anchor>
    <Abstract>Returns the aspect ratio of the represented dimensions, calculated as width / height.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>ab9d09ebc6d7e97a237777c8013bdece7</Anchor>
    <Abstract>Returns the height of these dimensions.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>ab80014765d43e65b278fecce6bc3e104</Anchor>
    <Abstract>Returns the width of these dimensions.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSameAspectRatioAs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>ab9507054592b1e64da8204a47f8fedb4</Anchor>
    <Abstract>Returns true if the passed Dimensions object has the same aspect ratio as this one.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>ace8a159f381d6ded3ccdffa9018c7d56</Anchor>
    <Abstract>Returns true if the width and height are both greater than 0.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>a9d360c7c53470346436f9e3d50a46cdf</Anchor>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>af7b831cd88829f8409cdc179af257adc</Anchor>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>a20c45ad43a4124e8449cf1a7ba40c3ca</Anchor>
    <Abstract>Returns true if the passed Dimensions object is equal to this one.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>ac1389fa43534c6dc8e672a6d604d03bc</Anchor>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>a41198f5f3f470109568a2916dfe246af</Anchor>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Dimensions</Scope>
    </TokenIdentifier>
    <Path>dd/db0/structmisc_1_1_dimensions.html</Path>
    <Anchor>a93d5321c09614269f4dd2258d6306983</Anchor>
    <Abstract>Returns a string representation of these dimensions, eg &apos;400x600&apos;.</Abstract>
    <DeclaredIn>Dimensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>misc::ScopedStreamFlags</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>dc/d2a/structmisc_1_1_scoped_stream_flags.html</Path>
    <Abstract>A simple RAII class to save and restore the state of a standard stream&apos;s flags.</Abstract>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedStreamFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>dc/d2a/structmisc_1_1_scoped_stream_flags.html</Path>
    <Anchor>afb1d564ee8512f9cbf4e8cec3899aa9d</Anchor>
    <Abstract>ScopedStreamFlags is not copyable.</Abstract>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedStreamFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>dc/d2a/structmisc_1_1_scoped_stream_flags.html</Path>
    <Anchor>a601db6489229d6f6bcefa219f43708b6</Anchor>
    <Abstract>ScopedStreamFlags is not movable.</Abstract>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedStreamFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>dc/d2a/structmisc_1_1_scoped_stream_flags.html</Path>
    <Anchor>a53150372bee73ff5d15ce63c7c8c9ed0</Anchor>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ScopedStreamFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>dc/d2a/structmisc_1_1_scoped_stream_flags.html</Path>
    <Anchor>a3140d7a560f6f897f6a20b61d678051b</Anchor>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>dc/d2a/structmisc_1_1_scoped_stream_flags.html</Path>
    <Anchor>a8bd4a95973b1773c8fb922f09b2a8318</Anchor>
    <Abstract>ScopedStreamFlags is not copyable.</Abstract>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::ScopedStreamFlags</Scope>
    </TokenIdentifier>
    <Path>dc/d2a/structmisc_1_1_scoped_stream_flags.html</Path>
    <Anchor>aed3cc22037db099c70fde9a733404e23</Anchor>
    <Abstract>ScopedStreamFlags is not movable.</Abstract>
    <DeclaredIn>streams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>misc::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Abstract>A class that represents a version of something, with major, minor, and patch numbers.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a840e1cea63526ddbf0c5ce8ef1252340</Anchor>
    <Abstract>Version is default copyable at compile time.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>aeb7b2f3d1afcfee454eff92dcd861ad5</Anchor>
    <Abstract>Version is default movable at compile time.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bumpMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>afe9f34e1a0164f81a0dac5c45477c5fd</Anchor>
    <Abstract>Increments the major value and sets minor and patch to 0.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bumpMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a51aaeddaba7ec8eecd5a104fdad189dc</Anchor>
    <Abstract>Increments the minor value and sets patch to 0.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bumpPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a41704b043608029d2b34644adafaa62f</Anchor>
    <Abstract>Increments the patch value.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a6db7b229b8fec8255184f4f568d4b9ff</Anchor>
    <Abstract>Returns the major version number.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a3d7d033a895bda0bda7cc4e35e5838c0</Anchor>
    <Abstract>Returns the minor version number.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a6f2e9f739f14b9a1bd5a7227a8eea0c2</Anchor>
    <Abstract>Returns the patch version number.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSameMajorVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a026965800c2a42acfffea8df5e8e43ea</Anchor>
    <Abstract>Returns true if this version has the same major release number as the other one.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>ab975636db90993495f7356e4b98ca72f</Anchor>
    <Abstract>Version is default copyable at compile time.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a5c3c9753d5ff10972a71f1eb53df9fdd</Anchor>
    <Abstract>Version is default movable at compile time.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a78b81002ae2d53bc8967e11014704d8e</Anchor>
    <Abstract>Returns a string representation of this Version.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withMajorBump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a77e016812717f605ca2d52008dddb0b7</Anchor>
    <Abstract>Returns a new Version object with bumpMajor() applied.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withMinorBump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a1a41842bebc4cd83a37746af871841e7</Anchor>
    <Abstract>Returns a new Version object with bumpMinor() applied.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withPatchBump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>aba6df1c94908a540c4c7406b5358121d</Anchor>
    <Abstract>Returns a new Version object with bumpPatch() applied.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a60937ea064675daab17b3d5de9bbfd57</Anchor>
    <Abstract>Creates a default Version object with the value 0.0.1.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a6df61c1bc8897522a5309998e2e28fed</Anchor>
    <Abstract>Creates a Version object with a specified value.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a615a0dc52397a0ce4aba77abfa967820</Anchor>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a480a0b9ece83754361041f24341506c3</Anchor>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>aba75d348e15f92c048b877a05d0c1bd2</Anchor>
    <Abstract>Returns true if this version is newer than the other one.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a47de28f966e09b66f9da0e08c3be2ddb</Anchor>
    <Abstract>Returns true if this version is older than the other one.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewerThan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>a50a585dfabfd25d8d9a0ea3af6941a06</Anchor>
    <Abstract>Returns true if this version is newer than the other one.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOlderThan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>misc::Version</Scope>
    </TokenIdentifier>
    <Path>d0/dec/structmisc_1_1_version.html</Path>
    <Anchor>aa5d742733039f440ab91533ce90f6937</Anchor>
    <Abstract>Returns true if this version is older than the other one.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d3/d28/namespacemusic.html</Path>
    <Abstract>This namespace contains music theory utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga50eed5c23df17b2d8a0278bf5510c874</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>gae475ee52bf8520cc51cf51b561b5de77</Anchor>
    <Abstract>Adds an interval to the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga19945e87ea06553681a3dee33bbdb848</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d8/d49/group__music__intervals.html</Path>
    <Anchor>ga240a833f0d12f505e8151aa992c585a1</Anchor>
    <Abstract>Subtracts an interval from the given pitch and returns a new pitch object at the resulting pitch.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>semitonesInOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga60d2e8ced34b19c13665a49cd035eddc</Anchor>
    <Abstract>Integer constant representing the number of semitones in an octave (12).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>octaveNumberOfMidiNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga7df13e0376b2c52f138dc4b30e4ce96a</Anchor>
    <Abstract>Returns the octave number of a given MIDI pitch.</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lowestNoteOfMidiOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gaa75a87e33982f923a3b683fdd6cfcee1</Anchor>
    <Abstract>Returns the lowest note of a given MIDI octave number (that octave&apos;s C key).</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharpsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>gac7f752b25b12b2bed6e646272fd73f37</Anchor>
    <Abstract>Returns an array of PitchClass objects representing each sharp in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFlatsOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music</Scope>
    </TokenIdentifier>
    <Path>d1/de7/group__music__harmony.html</Path>
    <Anchor>ga4467500c108afad942d618190665c4c3</Anchor>
    <Abstract>Returns an array of pitch class objects representing each flat in the order they appear in key signat...</Abstract>
    <DeclaredIn>PitchUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::Chord</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Abstract>This class represents a musical chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>a99fa08e17dac5af03277f2d4f7aa784c</Anchor>
    <Abstract>Returns a new chord with each pitch shifted by a given interval.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fitsInScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>af1967e6ef5db8a4c278ab432224afc8d</Anchor>
    <Abstract>Returns true if all of this chord&apos;s pitches are present in the given scale without using accidentals.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHighestPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>a242c630e2d8c79e054a2a506d96e5cdd</Anchor>
    <Abstract>Returns the highest pitch in the chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>a9c5737a83529c59be35ea6ba22b4bb1b</Anchor>
    <Abstract>Returns a list of intervals between each consecutive pair of notes in this chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLowestPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>afadfeef3ae16ddd726f288724ae6d41e</Anchor>
    <Abstract>Returns the lowest pitch in the chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>ae74f5fad8e35d05c41b31ab125c271ab</Anchor>
    <Abstract>Returns the number of unique pitches in this chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumUniquePitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>ad58f6fe3e080486a35ea73881db8e15e</Anchor>
    <Abstract>Returns the number of unique pitch classes present in this chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>a5bd5dfcda5f339335fc880f0e6d4178b</Anchor>
    <Abstract>Returns a list of pitch classes present in this chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>aef7a5dc24d60d19cdf10e1bd28082cb2</Anchor>
    <Abstract>Returns a copy of the list of pitches present in this chord.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>a4b7fc918b45a1095a0bfbf6b376a439e</Anchor>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>a5f804cd312f01f35670475853ad9da80</Anchor>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Chord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>af82c403038c3a1f70a1318577fcb5fb8</Anchor>
    <Abstract>Creates a chord from a list of pitches.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Chord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>a40b52d496e631a79c6c020e6828f2d2d</Anchor>
    <Abstract>Creates a chord from a list of pitches.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>af2b8f14c3eb1c0cff5d7dcc9ceb50a90</Anchor>
    <Abstract>Returns true if this chord contains the given pitch or pitch class.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>a9e123e8f8ecd09d27ff2f062eba687a8</Anchor>
    <Abstract>Returns true if this chord contains the given pitch or pitch class.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Chord</Scope>
    </TokenIdentifier>
    <Path>d6/d44/classmusic_1_1_chord.html</Path>
    <Anchor>a83ffa040e6fd483d3150c9471796b4d0</Anchor>
    <Abstract>Returns true if this chord contains the given pitch or pitch class.</Abstract>
    <DeclaredIn>Chord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::CompoundInterval</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Abstract>A class for representing intervals larger than an octave.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyToPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ae2d901feb2a5e90047121c4179f354fc</Anchor>
    <Abstract>Returns a new pitch object that represents the note this interval&apos;s distance above or below the passe...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCents_JustIntonation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>ac9203191220a07459781d62226419136</Anchor>
    <Abstract>Returns an array of possible cents values this interval can represent in just intonation,...</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a2efb29f5c38eae8a382b876f19c65463</Anchor>
    <Abstract>Returns the interval that is the inverse of this one, taking enharmonic spellings into account.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a3b24be0ffaf266cac95c976a35855c4c</Anchor>
    <Abstract>Returns the kind of this compound interval as an integer, eg, 9, 10, etc.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumOctaves</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>acce776dfb760172191ec281156cf9a5d</Anchor>
    <Abstract>Returns the number of whole octaves contained in this compound interval.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a7df11fff76fc6b8df8a1e60bb2e9b6e3</Anchor>
    <Abstract>Returns the number of semitones this compound interval represents.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>ae2c237270db6a55c7f9ab614e3a1cb25</Anchor>
    <Abstract>Returns the quality of this compound interval.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimpleInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>aa9652b173a716abab80a0678b3c6416a</Anchor>
    <Abstract>Returns the simple interval component of this compound interval.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSameSimpleInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>aec609ecd34cf832581b09066b8d9d7c3</Anchor>
    <Abstract>Returns true if the two compound intervals have the same sub-octave component, regardless of how many...</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a67f47f12c151abeda82716af0b8da170</Anchor>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a6676f19408b2271a63002fb59c278624</Anchor>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a379a9129203621374ec2efb7c92a885c</Anchor>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ad7c6a3bdd6516e2752c060f5cdb6bc9a</Anchor>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a5a19b159db826efc2dc086955a223822</Anchor>
    <Abstract>Returns true if the two intervals are not exactly equal.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a0d5034102b5f9ff56f6ebebb66d8531a</Anchor>
    <Abstract>Returns true if this interval is semantically smaller than the other one, taking enharmonic spellings...</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>aa52c31a7d60b30c01014253a58ef9856</Anchor>
    <Abstract>Returns true if this interval is semantically smaller than the other one, taking enharmonic spellings...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a669310c4d44f141bf2e30c6c308d95db</Anchor>
    <Abstract>Returns true if the two compound intervals are exactly equal; that is, have the same number of octave...</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>ab5ee33d966b9741705fffdef2d6f5033</Anchor>
    <Abstract>Returns true if this interval is semantically larger than the other one, taking enharmonic spellings ...</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a37e98836f2ed8d928f8911a8730dd7f6</Anchor>
    <Abstract>Returns true if this interval is semantically larger than the other one, taking enharmonic spellings ...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a950742e2fbe9d4625d38cec62776e630</Anchor>
    <Abstract>Creates a compound interval with the given number of octaves and the given simple interval component.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a478127490f7ac7f1f7fe7d1a3c7b0119</Anchor>
    <Abstract>Creates a compound interval from a given kind and quality, eg, major ninth, etc.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompoundInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a4ecc82227a8ad47ab15dc6ab74c4d7d8</Anchor>
    <Abstract>Constructs a compound interval with the given number of semitones.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>aaa485a56ac6b3b614d01ceb7bd660254</Anchor>
    <Abstract>Returns true if the two intervals are exactly equal – that is, have the same kind and quality.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a29c002ce9cee7ed5961c0039951035d9</Anchor>
    <Abstract>Returns true if the two intervals are not exactly equal.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEnharmonicTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a8d31e50c9df29f04a789cdcbc4df8869</Anchor>
    <Abstract>Returns true if the two intervals represent the same number of semitones, regardless of their enharmo...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a2bd4dccaee78cf59e108f61f65526716</Anchor>
    <Abstract>Adds another interval object to this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a4a6d20033eb954b8de344bc805cbbe71</Anchor>
    <Abstract>Adds a number of semitones to this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a3a6e92108500f3ab06ff610be65349dd</Anchor>
    <Abstract>Adds another interval object to this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a40ce78d836b6710a94d15539bcdf1f82</Anchor>
    <Abstract>Adds a number of semitones to this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a34b5577256bf7858a76e015138d8afad</Anchor>
    <Abstract>Increments this interval by one semitone, preserving the kind by manipulating the quality where possi...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a787963dee6d17bc5f376d4dd25067fa7</Anchor>
    <Abstract>Subtracts another interval object from this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a3a73651a0867f9c3a06ae664b46bbbae</Anchor>
    <Abstract>Subtracts a number of semitones from this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a42a0d7605225b90a3cc1d4ce63b8ebaf</Anchor>
    <Abstract>Subtracts another interval object from this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a7d92fd1a13a3dfe8457a1979bb881de3</Anchor>
    <Abstract>Subtracts a number of semitones from this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>aabfb13eb5acbfb5a8c2eb1e55420cac6</Anchor>
    <Abstract>Decrements this interval by one semitone, preserving the kind by manipulating the quality where possi...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJustRatios</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ae430f8a03a14521d0848b91d4ac6f9b0</Anchor>
    <Abstract>Returns an array of fraction objects representing possible just intervals for this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCents_EqualTemperament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ae7ff6e9ce26f7c98ced262cd41335246</Anchor>
    <Abstract>Returns the number of cents this interval represents in equal temperament.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>aaa485a56ac6b3b614d01ceb7bd660254</Anchor>
    <Abstract>Returns true if the two intervals are exactly equal – that is, have the same kind and quality.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a29c002ce9cee7ed5961c0039951035d9</Anchor>
    <Abstract>Returns true if the two intervals are not exactly equal.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEnharmonicTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a8d31e50c9df29f04a789cdcbc4df8869</Anchor>
    <Abstract>Returns true if the two intervals represent the same number of semitones, regardless of their enharmo...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a2bd4dccaee78cf59e108f61f65526716</Anchor>
    <Abstract>Adds another interval object to this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a4a6d20033eb954b8de344bc805cbbe71</Anchor>
    <Abstract>Adds a number of semitones to this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a3a6e92108500f3ab06ff610be65349dd</Anchor>
    <Abstract>Adds another interval object to this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a40ce78d836b6710a94d15539bcdf1f82</Anchor>
    <Abstract>Adds a number of semitones to this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a34b5577256bf7858a76e015138d8afad</Anchor>
    <Abstract>Increments this interval by one semitone, preserving the kind by manipulating the quality where possi...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a787963dee6d17bc5f376d4dd25067fa7</Anchor>
    <Abstract>Subtracts another interval object from this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a3a73651a0867f9c3a06ae664b46bbbae</Anchor>
    <Abstract>Subtracts a number of semitones from this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a42a0d7605225b90a3cc1d4ce63b8ebaf</Anchor>
    <Abstract>Subtracts another interval object from this one.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a7d92fd1a13a3dfe8457a1979bb881de3</Anchor>
    <Abstract>Subtracts a number of semitones from this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>aabfb13eb5acbfb5a8c2eb1e55420cac6</Anchor>
    <Abstract>Decrements this interval by one semitone, preserving the kind by manipulating the quality where possi...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidQualityForKind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a401b1c3dae9a3b36ce89f201490dba10</Anchor>
    <Abstract>Returns true if the quality is valid for the given kind of interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>aee969607c98a8a2d5c3ba67e82ced8d7</Anchor>
    <Abstract>Returns a compound interval object representing the distance between two MIDI notes.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>music::CompoundInterval</Scope>
    </TokenIdentifier>
    <Path>df/d3b/classmusic_1_1_compound_interval.html</Path>
    <Anchor>a4b8a1749dc9bab8a33386bdce079cca1</Anchor>
    <Abstract>Returns a compound interval object representing the distance between two pitch objects.</Abstract>
    <DeclaredIn>CompoundInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromNumSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ad4c67fe62d51e3e6d0502e27cc58a242</Anchor>
    <Abstract>Creates an interval from a number of semitones.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Diminished</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a92dfb9d078d6e96c0a56351a0455258ca539ef79c5675bdcd6fead7bc93643d98</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Minor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a92dfb9d078d6e96c0a56351a0455258ca6fed0c378a4b4e8c1e7dc5c16dabb388</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Major</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a92dfb9d078d6e96c0a56351a0455258ca3b329734e45b57e60f3df64c2cf412a9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Augmented</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a92dfb9d078d6e96c0a56351a0455258cab45f39670f767b2c62c8d6b211cbcb1a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Perfect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a92dfb9d078d6e96c0a56351a0455258ca56cdd7e9e3cef1974f4075c03a80332d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::Interval</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Abstract>A class that represents a musical interval between two pitches.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Interval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>add55dc18e599b663288dcc1513fc6fbf</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyToPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ae2d901feb2a5e90047121c4179f354fc</Anchor>
    <Abstract>Returns a new pitch object that represents the note this interval&apos;s distance above or below the passe...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a2efb29f5c38eae8a382b876f19c65463</Anchor>
    <Abstract>Returns the interval that is the inverse of this one, taking enharmonic spellings into account.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a31acc3fe9ca01937b1d447e1d394f220</Anchor>
    <Abstract>Returns the kind of this interval as an integer.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ab1cd1e4b63ea69b6499f02657e011416</Anchor>
    <Abstract>Returns the number of semitones that this interval represents.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a4e14d8c68e53ce93f7c4e5047286df35</Anchor>
    <Abstract>Returns the quality of this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a6676f19408b2271a63002fb59c278624</Anchor>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ad7c6a3bdd6516e2752c060f5cdb6bc9a</Anchor>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>aa52c31a7d60b30c01014253a58ef9856</Anchor>
    <Abstract>Returns true if this interval is semantically smaller than the other one, taking enharmonic spellings...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a37e98836f2ed8d928f8911a8730dd7f6</Anchor>
    <Abstract>Returns true if this interval is semantically larger than the other one, taking enharmonic spellings ...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Interval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a255e90522abd8d76f7fa6a7e3895d939</Anchor>
    <Abstract>Creates an interval representing a perfect unison.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Interval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>aeefb2b150dbdcc1d3d1aef0d7a8cfaa7</Anchor>
    <Abstract>Creates an interval with a specified kind and quality.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValidQualityForKind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a401b1c3dae9a3b36ce89f201490dba10</Anchor>
    <Abstract>Returns true if the quality is valid for the given kind of interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromNumSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ad4c67fe62d51e3e6d0502e27cc58a242</Anchor>
    <Abstract>Creates an interval from a number of semitones.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>af635a4764913c0dc869b12cb1cd586e6</Anchor>
    <Abstract>Creates an interval from the distance between two pitch objects.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a7e8cbe1bff5506cd9b7f1e582ce62595</Anchor>
    <Abstract>Creates an interval from the distance between two MIDI pitches.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCents_JustIntonation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a1ff7811dab05d2c5809b44c0ad2778f8</Anchor>
    <Abstract>Returns an array of possible cents values this interval can represent in just intonation,...</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJustRatios</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ae430f8a03a14521d0848b91d4ac6f9b0</Anchor>
    <Abstract>Returns an array of fraction objects representing possible just intervals for this interval.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCents_EqualTemperament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>ae7ff6e9ce26f7c98ced262cd41335246</Anchor>
    <Abstract>Returns the number of cents this interval represents in equal temperament.</Abstract>
    <DeclaredIn>Interval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Diminished</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a92dfb9d078d6e96c0a56351a0455258ca539ef79c5675bdcd6fead7bc93643d98</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Minor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a92dfb9d078d6e96c0a56351a0455258ca6fed0c378a4b4e8c1e7dc5c16dabb388</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Major</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a92dfb9d078d6e96c0a56351a0455258ca3b329734e45b57e60f3df64c2cf412a9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Augmented</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a92dfb9d078d6e96c0a56351a0455258cab45f39670f767b2c62c8d6b211cbcb1a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Perfect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::Interval</Scope>
    </TokenIdentifier>
    <Path>d6/d89/classmusic_1_1_interval.html</Path>
    <Anchor>a92dfb9d078d6e96c0a56351a0455258ca56cdd7e9e3cef1974f4075c03a80332d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::MicrotonalInterval</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Abstract>A class that can represent intervals that are not whole numbers of semitones.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyToPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>a680f4edc160dae31e898fb61bf3baeb1</Anchor>
    <Abstract>Returns a new pitch object that represents the note this interval&apos;s distance above or below the passe...</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>afaa58b20f0bbacce181e5cb4911330e5</Anchor>
    <Abstract>Returns the number of cents this microtonal interval would represent in equal temperament.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>ad78d4948b854480cd8f9ef637d23a7ff</Anchor>
    <Abstract>Returns the number of semitones this microtonal interval represents.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>a004d68072cab95493c65ae6ae0da1b01</Anchor>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>a13d460f7280d20d858c19bc052414727</Anchor>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>a60fa3498b7ecb5449b0116b8fbc1ceb5</Anchor>
    <Abstract>Returns true if these two microtonal intervals do not represent the same fractional amount of semiton...</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>a5cd0445fc236e2ab9cef29d62619309a</Anchor>
    <Abstract>Returns true if this microtonal interval is smaller than the other one.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>a9c47c14ad2df81ae939982351dec445c</Anchor>
    <Abstract>Returns true if these two microtonal intervals represent the same fractional amount of semitones.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>a0b23dbcad6d3f8fc4fb65003f38a8ad5</Anchor>
    <Abstract>Returns true if this microtonal interval is larger than the other one.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MicrotonalInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>a11c3086f92504cdb61b481cd8bea06d1</Anchor>
    <Abstract>Creates a MicrotonalInterval representing a specified number of semitones.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MicrotonalInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::MicrotonalInterval</Scope>
    </TokenIdentifier>
    <Path>d3/d7a/classmusic_1_1_microtonal_interval.html</Path>
    <Anchor>ad4ccae957c0d9686d2685b2a848352a1</Anchor>
    <Abstract>Creates a MicrotonalInterval representing the number of semitones specified by the Fraction object.</Abstract>
    <DeclaredIn>MicrotonalInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::NoteDuration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Abstract>This class represents the duration of a kind of written musical note – eighth, quarter,...</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NoteDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>a7aef4d2fa584a0d9d0bc4ca2a8d472ef</Anchor>
    <Abstract>Creates a NoteDuration of the desired kind.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>ac5a3e5c5f403ed9f9970d951e6f84d44</Anchor>
    <Abstract>Returns the percentage of a whole note represented by this object.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumDots</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>a9f8db171f44898df52ab7a26a891415e</Anchor>
    <Abstract>Returns the number of dots this note duration has.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRatioToOtherDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>ae6b6019391022160272790352c849f1c</Anchor>
    <Abstract>Returns the ratio of this duration to the other one.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>a77fc8dd5d575c89fe9fabc20e241acd2</Anchor>
    <Abstract>Returns true if the notehead representing this duration has a stem.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>a1bbca68cb7e644dc1cbf850492a32508</Anchor>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>a63c63cce2167e4b0776c53e2f53b2a91</Anchor>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>noteHeadIsFilled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>add0fdb4cd2b46aa1047b035fb8d29bcf</Anchor>
    <Abstract>Returns true if the notehead representing this duration is filled.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>a3c140ec42801bfd7d13a6efe122bcb46</Anchor>
    <Abstract>Returns true if the two note durations are not equal.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>a42fafae274474b132c4499bf74dda8aa</Anchor>
    <Abstract>Increments the duration value to the next shortest notehead kind.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>aa4b76e267b815ef394c942e091653bf2</Anchor>
    <Abstract>Decrements the duration value to the next longest notehead kind.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>a96bdccb65ef7664b24c36098081150a4</Anchor>
    <Abstract>Returns true if this duration is shorter than the other one.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>a4b39076b00e9e14eaa575e23fb751fc0</Anchor>
    <Abstract>Returns true if the two note durations are equal.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteDuration</Scope>
    </TokenIdentifier>
    <Path>dd/df8/structmusic_1_1_note_duration.html</Path>
    <Anchor>a164201393e17dbc83ee5e852efd5ecc4</Anchor>
    <Abstract>Returns true if this duration is longer than the other one.</Abstract>
    <DeclaredIn>NoteDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::NoteLength</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NoteLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>aaee093fa8f3848f47c6b8903c3730b92</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a1e358c68ced882b7fd6353e71b8ded6d</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstNoteInTie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a7a653c0e62fb1aa7fde7138deaea4471</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastNoteInTie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>acf4316118368f42afe26a08f28cddb6f</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumDots</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a02f1309db59c3711be69d121b9b99cc3</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNotesOfDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>affa8d4b561a3f96409da79763e62daea</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNotesOfDurationForWholeTie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>af9def8422a673b40999b20646cf6523e</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRelativeValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>ad9d67f2984466bbf2981e373b99b80da</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRelativeValueForWholeTie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>ad37d255a5dc80cf814c2e0446bffd85c</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a2c83e0878a43e97c5d8609e16f303e98</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDotted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a1ea083fd335ef042b65fa63582cefba9</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFirstNoteInTie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a8fcab4dd67d684f97fb8e913e4d50fcf</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGraceNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>aabb684634e002ea527592cd518247764</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLastNoteInTie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a787c3992d4826104d3be14c3e40855d1</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTied</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a2b4cd2ecb9ff7433b3a2432a98f1e1df</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a630996c7a97a1ae3d95ac3100cf3b8c6</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>ade7057207913a5cc1a428ca2df7b23eb</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>noteHeadIsFilled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a3812fcf3d01ac01182b17d02a9b3614d</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>abfa84024abe7f07bd157e52668470442</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a2723a362985fd2788a9aafbcd93e36a7</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a6ce14ff2ec9c0f11b511c1e7c94fa31b</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a1d0995dd136749ce2eeeccc93d833e0d</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>ab323958cffeae82434b132f1f4d4c4d0</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tieToNotes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::NoteLength</Scope>
    </TokenIdentifier>
    <Path>db/d92/structmusic_1_1_note_length.html</Path>
    <Anchor>a9210bff4a13025d88a9e44e0534216bb</Anchor>
    <DeclaredIn>NoteLength.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::Pitch</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Abstract>This class represents a specific pitch, with a specific octave and enharmonic spelling.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFreqHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>ad9c4d6e0509788c3bb4ab809d325e692</Anchor>
    <Abstract>Returns this pitch as a frequency in Hz.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMidiPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a565309cdb18708d5a40c76cefc09ec8d</Anchor>
    <Abstract>Returns the MIDI pitch that this pitch object represents.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOctaveNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a821f0e8902b17d8e67103245af2aa243</Anchor>
    <Abstract>Returns this pitch object&apos;s MIDI octave number.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a7429699ec38340a77047240211686da7</Anchor>
    <Abstract>Returns this pitch object&apos;s pitch class as an integer from 0 to 11, with 0 being C and 11 being B.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoundedFreqHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a0ab36b1d4f9d6493a228678077081065</Anchor>
    <Abstract>Returns this pitch as a frequency in Hz, rounded to the nearest integer.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoundedMidiPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a94b70e437a17d4aca6baba6d6797b1b9</Anchor>
    <Abstract>Returns this pitch object&apos;s MIDI pitch, rounded to the nearest integer MIDI note.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a4b9ffa6c7a2b5121b945f1b254542ca8</Anchor>
    <Abstract>Returns the pitch class of this pitch, in the desired MIDI octave.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBlackKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a83f1ef0dfe1808f9588a95eac066decd</Anchor>
    <Abstract>Returns true if this pitch&apos;s nearest integer MIDI note is a black key on a standard keyboard.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMicrotone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a492f8df510f057c4bdd42fc5fdd76a18</Anchor>
    <Abstract>Returns true if this pitch does not correspond exactly with any of the keys on a piano tuned to equal...</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWhiteKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>adffd9bb36e8e28826982d66e00cb77c4</Anchor>
    <Abstract>Returns true if this pitch&apos;s nearest integer MIDI note is a white key on a standard keyboard.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a9777ae543113f4eabbac6ec64ca167c4</Anchor>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a61d3db09074e8e1255831e5af5be4c5a</Anchor>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>af3d34dfb05252911ce4c02da7fff4cd8</Anchor>
    <Abstract>Returns the difference between this and another pitch as an Interval object.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>ae1ee5fec2708afa72f6efc21c5113189</Anchor>
    <Abstract>Returns true if this pitch is lower than the other one.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a97f2726ea580784fc92dc8a358320f1e</Anchor>
    <Abstract>Returns true if this pitch is higher than the other one.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a70cd93359d20ea3b454624db8f9117b2</Anchor>
    <Abstract>Creates a pitch object from a MIDI pitch, which can be passed to the constructor as any scalar arithm...</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>ae00233872ebfc8c0da98956b5b026707</Anchor>
    <Abstract>Creates a pitch object from a pitch class and a MIDI octave number.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>aa93953c51d5e18b77393753df26d2db1</Anchor>
    <Abstract>Returns true if the two pitch objects are exactly equal.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>a9031875ce602dd5008c32ba981160bd9</Anchor>
    <Abstract>Returns true if the two pitch objects are not exactly equal.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>approximatelyEqual</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::Pitch</Scope>
    </TokenIdentifier>
    <Path>de/d6d/classmusic_1_1_pitch.html</Path>
    <Anchor>abdbd23f6b2d2efe36b44772c197eea39</Anchor>
    <Abstract>Returns true if the two pitch objects round to the same nearest MIDI note.</Abstract>
    <DeclaredIn>Pitch.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::PitchClass</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Abstract>A struct that represents a pitch class.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Anchor>af247fe5b1fc315396c67f3cd503d1115</Anchor>
    <Abstract>Creates a pitch class from an integer, where 0 is C, 1 is C#/Db, and 11 is B.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAsInt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Anchor>a5417428ca0ba91e3e785ecc88a4dfbcc</Anchor>
    <Abstract>Returns this pitch class as an integer between 0 and 11, where 0 is C and 11 is B.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBlackKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Anchor>ac01297a516b74277b62b766941c6aaac</Anchor>
    <Abstract>Returns true if this pitch class represents a black key on a standard keyboard.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWhiteKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Anchor>a8a0e14166641d3a4311ea4c06e043972</Anchor>
    <Abstract>Returns true if this pitch class represents a white key on a standard keyboard.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Anchor>a12277274d0648ecc8518f9a85c8e928e</Anchor>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_CONSTEXPR_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Anchor>a947953a9af049951aa98f2ce634583b1</Anchor>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator int</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Anchor>a8efa2d4c99eec10ebeba7229c6b2ce8e</Anchor>
    <Abstract>Returns this pitch class as an integer between 0 and 11, where 0 is C and 11 is B.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Anchor>ab836eb1c7504b55533b3d205514ff898</Anchor>
    <Abstract>Returns true if the two pitch classes are not equal.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Anchor>a078c9824d990d6107ce3733ae1e738a8</Anchor>
    <Abstract>Returns true if the two pitch classes are equal.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::PitchClass</Scope>
    </TokenIdentifier>
    <Path>d4/d8c/structmusic_1_1_pitch_class.html</Path>
    <Anchor>a423e03d5256f7859c8a73809e35a2994</Anchor>
    <Abstract>Returns an iterable list of all the pitch classes, starting from 0 and ending with 11.</Abstract>
    <DeclaredIn>PitchClass.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::scales</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>music::scales</Scope>
    </TokenIdentifier>
    <Path>d3/d88/namespacemusic_1_1scales.html</Path>
    <Abstract>This namespace contains utilities for working with musical scales.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::scales::Chromatic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>d8/da2/classmusic_1_1scales_1_1_chromatic.html</Path>
    <Abstract>A class representing a chromatic scale.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a1601a80abe457022043486acc275a170</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8a6d8521a8ded5be37c24aa366dde11c</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac9f0ab4433af31a09865f1e42760058f</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a06e0f538703b06c6330145cf54e70d56</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>d8/da2/classmusic_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a847de27892cfc134f4b38493e5c40e89</Anchor>
    <Abstract>Returns an array of 12 1&apos;s, since every interval in a chromatic scale is a half step.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a8d3a6ed910dda15b9442bd59bc1c92</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>d8/da2/classmusic_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a1486c5b4e951b22885bff44494c7921c</Anchor>
    <Abstract>Returns the pitch class that this chromatic scale starts on.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac1b9aa7ad9c3568d755bce52cf4ff731</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8de4c6a22393ccbf78b5c690d7252586</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a164667f2eb1b1706806819a48500d1e0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a71fb8ccd2bd9defb856c2c6e1f4fb361</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>d8/da2/classmusic_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a47401838313b1073b8a72682c29e7580</Anchor>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>d8/da2/classmusic_1_1scales_1_1_chromatic.html</Path>
    <Anchor>ae3fd4ebad47274cebb02711ef5942a53</Anchor>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>d8/da2/classmusic_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a47b2fe576d8a0192e06105a1451b3379</Anchor>
    <Abstract>Returns 12.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>d8/da2/classmusic_1_1scales_1_1_chromatic.html</Path>
    <Anchor>ab6d9031632e24f06195598060367fb6b</Anchor>
    <Abstract>Returns true if the other chromatic scale does not start on the same pitch class as this one.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a237ac3c6c63475899aed39a9311dceda</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>d8/da2/classmusic_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a408a3fada82dae60023cf2c4ad74aaa1</Anchor>
    <Abstract>Returns true if the other chromatic scale starts on the same pitch class as this one.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac2980ae89fa968f5b577b6d47739fe66</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Chromatic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>d8/da2/classmusic_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a746ee2d31497e7d95ae3acac37c876a4</Anchor>
    <Abstract>Creates a chromatic scale that starts on the specified MIDI pitch.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Chromatic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Chromatic</Scope>
    </TokenIdentifier>
    <Path>d8/da2/classmusic_1_1scales_1_1_chromatic.html</Path>
    <Anchor>a11f0c882c037f710546245f02921f384</Anchor>
    <Abstract>Creates a chromatic scale that starts on the specified pitch class.</Abstract>
    <DeclaredIn>Chromatic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::scales::KeySignature</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Abstract>This class represents any traditional Western key signature (eg, major, natural minor,...</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a1601a80abe457022043486acc275a170</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8a6d8521a8ded5be37c24aa366dde11c</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac9f0ab4433af31a09865f1e42760058f</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDominantKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a3d2035618b44999bb9f118c1be860dcb</Anchor>
    <Abstract>Returns the major key whose root is a perfect fifth above this key&apos;s root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEnharmonicKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>abb945bf1a63d9845dd8364b32284c7f9</Anchor>
    <Abstract>If this key has an enharmonic, this function returns it.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a06e0f538703b06c6330145cf54e70d56</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a16d1b53f55d379ab4a61370e2543ea8d</Anchor>
    <Abstract>Returns the set of intervals that make up this key signature.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a7d7cce1248b519a2fb3f9981e8affde2</Anchor>
    <Abstract>Returns the type of this key signature.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumFlats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>adb519d36df3a60b5214cf13b70a0e825</Anchor>
    <Abstract>If this key is spelled with flats, this returns the number of flats in the key.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSharps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a40eb63e357b73ebb17797d61ceb18c7d</Anchor>
    <Abstract>If this key is spelled with sharps, this returns the number of sharps in the key.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParallelKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a8c3b944772b000e10a35c35589169954</Anchor>
    <Abstract>Returns a key signature object representing the parallel key of this key.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a8d3a6ed910dda15b9442bd59bc1c92</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a6b1295571b442e7ac340221c3404f06a</Anchor>
    <Abstract>Returns the pitch class of this scale&apos;s root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac1b9aa7ad9c3568d755bce52cf4ff731</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8de4c6a22393ccbf78b5c690d7252586</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a164667f2eb1b1706806819a48500d1e0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRelativeKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a865ed547fff0f853cf5c6b04471bcfca</Anchor>
    <Abstract>Returns a key signature object representing the relative key of this key.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a71fb8ccd2bd9defb856c2c6e1f4fb361</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEnharmonicKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>acc4e32bb5636774d7b898b9cfcafa2e0</Anchor>
    <Abstract>Returns true if this key has an enharmonic equivalent that can be spelled using 7 or less flats or sh...</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDominantKeyOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a3a3de656d1b0b72c11b2e7bb34d32755</Anchor>
    <Abstract>Returns true if this key signature object represents the dominant key of the other one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEnharmonicKeyOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>aee117836471d2aa4be6d13054a2f8531</Anchor>
    <Abstract>Returns true if this key signature object represents the enharmonic key of the other one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFlatKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>af9cabeb6d5a224cfcf6e0f86eb05c358</Anchor>
    <Abstract>Returns true if this key is spelled using flats.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMajorKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a8f17c1a27946788fb80d1a2fb3859471</Anchor>
    <Abstract>Returns true if this key is major.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMinorKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a23fce283d1dc19cef350a7c91069db53</Anchor>
    <Abstract>Returns true if this key is minor.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isParallelKeyOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a1f12f464a6db721a9fc6c9df194e7058</Anchor>
    <Abstract>Returns true if this key signature object represents the parallel key of the other one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRelativeKeyOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a1cf3dd70f60a36660070df5870ea597d</Anchor>
    <Abstract>Returns true if this key signature object represents the relative key of the other one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSharpKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a25448b840a9e9a748a8fd8ef2175a0f1</Anchor>
    <Abstract>Returns true if this key is spelled using sharps.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>af9164b99f623772fe472fb45797b815f</Anchor>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>aa56a2cb24f75b5fcb84b058062f90d42</Anchor>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a1929ec1c9a396bdc63e7f21d81040ba7</Anchor>
    <Abstract>Returns 8.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a0dc8590507c6b3f7a7f967f0b3877910</Anchor>
    <Abstract>Returns true if the other key signature is not semantically equivalent to this one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a237ac3c6c63475899aed39a9311dceda</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a82b3702a195e2b136b56fad94b6cbbf5</Anchor>
    <Abstract>Returns true if the other key signature is semantically equivalent to this one.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac2980ae89fa968f5b577b6d47739fe66</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>ac27613c296b88fa8d8eba6f1d9f780f0</Anchor>
    <Abstract>Creates a key signature object representing C major.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a42823ea97ebb7acd7ae3fe3f6ff227ad</Anchor>
    <Abstract>Creates a key signature with a given root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>aaed24654cd2e5d801a284650ed99313a</Anchor>
    <Abstract>Creates a key signature with a given root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a32f2502bb00e4ac23947eeb7e88450cd</Anchor>
    <Abstract>Creates a key signature with a given root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>ad5b077e834e9a0ffae2ba0639d2fccd9</Anchor>
    <Abstract>Creates a key signature with a given root.</Abstract>
    <DeclaredIn>KeySignature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a5541490d150e6fd99cda579a8d4cd43a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Major</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a86c125eacdf13feff21a88a3cab6d321a3b329734e45b57e60f3df64c2cf412a9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NaturalMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a86c125eacdf13feff21a88a3cab6d321a39fb9f61a41734dda0898ce1e7d8d54f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HarmonicMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::scales::KeySignature</Scope>
    </TokenIdentifier>
    <Path>de/d99/classmusic_1_1scales_1_1_key_signature.html</Path>
    <Anchor>a86c125eacdf13feff21a88a3cab6d321ae61508e9a3d1f13ff47ad5b65b34de32</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::scales::Mode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Abstract>This class represents a church mode scale.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a1601a80abe457022043486acc275a170</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8a6d8521a8ded5be37c24aa366dde11c</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac9f0ab4433af31a09865f1e42760058f</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a06e0f538703b06c6330145cf54e70d56</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a2eea6d041b02f95a0abb429fe6332193</Anchor>
    <Abstract>Returns the set of intervals that make up this mode.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeySignature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>acf55d269aa5be04d2e660f1aefd35d12</Anchor>
    <Abstract>Returns an equivalent key signature for this mode.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumFlats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a7fa42dad5e9b99cf407171f4d558cb09</Anchor>
    <Abstract>Returns the number of flats that make up the key signature for this mode.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSharps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>ac992936fbff84e794aca594147b9425d</Anchor>
    <Abstract>Returns the number of sharps that make up the key signature for this mode.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a8d3a6ed910dda15b9442bd59bc1c92</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a2181cb1044b1c7772572656548db2138</Anchor>
    <Abstract>Returns the pitch class of the root of this mode.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac1b9aa7ad9c3568d755bce52cf4ff731</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8de4c6a22393ccbf78b5c690d7252586</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a164667f2eb1b1706806819a48500d1e0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a71fb8ccd2bd9defb856c2c6e1f4fb361</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a4b786ecabbc12366880dedbf3f126b4b</Anchor>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a617f7b7e8c0d9a7b5aaf687acd945c55</Anchor>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a521631907a23229879e5e99fb7a6b228</Anchor>
    <Abstract>Returns 8.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>ac165e0d0c6759df88e2c20fd9c091f71</Anchor>
    <Abstract>Returns true if the other modal scale does not have the same type and root as this one.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a237ac3c6c63475899aed39a9311dceda</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a306f621b1a2e5632ff5e61bfddc8a0de</Anchor>
    <Abstract>Returns true if the other modal scale has the same type and root as this one.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac2980ae89fa968f5b577b6d47739fe66</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a844d71fb0920b63d2ed5a4ea1a4eac73</Anchor>
    <Abstract>Creates a modal scale object with the given type and root.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a2677484cdd96cffc32a0f1d7d098b29c</Anchor>
    <Abstract>Creates a modal scale of the given type, starting on the given MIDI note.</Abstract>
    <DeclaredIn>Mode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Ionian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a21d99d5c4373dcf7cd222335cf32bfada2dfbe3d304372906c238010701613654</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dorian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a21d99d5c4373dcf7cd222335cf32bfadab8dd79e4a88047dee0f3bf56dcb37ca8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Phrygian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a21d99d5c4373dcf7cd222335cf32bfada805db0fe201d84ac80b9572cb7d262ea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lydian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a21d99d5c4373dcf7cd222335cf32bfadab1cfb8d73516579a3d9e11d16377205a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mixolydian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a21d99d5c4373dcf7cd222335cf32bfadac1992ab744a3d5a14cb387c34a42c7ed</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Aeolian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a21d99d5c4373dcf7cd222335cf32bfada71c7913b150c35a82ad53ae6b3be4d21</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Locrian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>music::scales::Mode</Scope>
    </TokenIdentifier>
    <Path>d1/d0e/classmusic_1_1scales_1_1_mode.html</Path>
    <Anchor>a21d99d5c4373dcf7cd222335cf32bfada957b71824981a76ee8367e6684065f5d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::scales::Octatonic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Abstract>Represents an octatonic scale.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a1601a80abe457022043486acc275a170</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8a6d8521a8ded5be37c24aa366dde11c</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac9f0ab4433af31a09865f1e42760058f</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a06e0f538703b06c6330145cf54e70d56</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Anchor>aa0938172fe795c08d7707ca60e4343fc</Anchor>
    <Abstract>Returns a sequence of alternating 2&apos;s and 1&apos;s.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a8d3a6ed910dda15b9442bd59bc1c92</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a40b37961796499077fb23615d9ebb74b</Anchor>
    <Abstract>Returns the pitch class of the root of this scale.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac1b9aa7ad9c3568d755bce52cf4ff731</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8de4c6a22393ccbf78b5c690d7252586</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a164667f2eb1b1706806819a48500d1e0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a71fb8ccd2bd9defb856c2c6e1f4fb361</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Anchor>af453418576a9ce989c4bdb27a449d360</Anchor>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Anchor>ad93cbba81141c202d50e62f548bd4b3b</Anchor>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a12c7ac79bb8fb7c1e016725b11228118</Anchor>
    <Abstract>Returns 8.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a75df71f60a944b2c85d621d715c72f0f</Anchor>
    <Abstract>Returns true if the other octatonic scale is not equal to this one.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a237ac3c6c63475899aed39a9311dceda</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a77a3d35d6e579868e8a42d0e67817c97</Anchor>
    <Abstract>Returns true if the other octatonic scale is equal to this one.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac2980ae89fa968f5b577b6d47739fe66</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startsWithHalfStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a2fde749d2de52d708ec2423b6de77105</Anchor>
    <Abstract>Returns true if this octatonic scale starts with a half step.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Octatonic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a94d30898f844b1498db45cbc828be9ce</Anchor>
    <Abstract>Creates an octatonic scale object.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Octatonic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::Octatonic</Scope>
    </TokenIdentifier>
    <Path>de/d0a/classmusic_1_1scales_1_1_octatonic.html</Path>
    <Anchor>a7604ec00e67af4cc5fa2c4b878f46627</Anchor>
    <Abstract>Creates an octatonic scale object.</Abstract>
    <DeclaredIn>Octatonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::scales::Scale</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Abstract>A base class for any kind of musical scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac9e5b1d465057124f70839c7ec538f72</Anchor>
    <Abstract>Default constructor.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac522ae9260b873d9722fd447b66b8c30</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a1601a80abe457022043486acc275a170</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8a6d8521a8ded5be37c24aa366dde11c</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac9f0ab4433af31a09865f1e42760058f</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a06e0f538703b06c6330145cf54e70d56</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a4948ba4b242b520e2d58ab6c79f1c15a</Anchor>
    <Abstract>Subclasses must implement this to return an array of integers representing the intervals in this scal...</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a8d3a6ed910dda15b9442bd59bc1c92</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac5ade06890850caf9e0c23d951588623</Anchor>
    <Abstract>Subclasses must implement this to return the pitch class of the root (or tonic) note of the scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac1b9aa7ad9c3568d755bce52cf4ff731</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8de4c6a22393ccbf78b5c690d7252586</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a164667f2eb1b1706806819a48500d1e0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a71fb8ccd2bd9defb856c2c6e1f4fb361</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a546828875f47c985f7d017de2899218a</Anchor>
    <Abstract>Subclasses must implement this to return the number of notes per octave in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a237ac3c6c63475899aed39a9311dceda</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac2980ae89fa968f5b577b6d47739fe66</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>music::scales::WholeTone</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d5/d24/classmusic_1_1scales_1_1_whole_tone.html</Path>
    <Abstract>A class that represents a whole tone scale.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a1601a80abe457022043486acc275a170</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8a6d8521a8ded5be37c24aa366dde11c</Anchor>
    <Abstract>Returns true if this scale contains the passed MIDI note number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsPitchClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac9f0ab4433af31a09865f1e42760058f</Anchor>
    <Abstract>Returns true if this scale contains the passed pitch class.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a06e0f538703b06c6330145cf54e70d56</Anchor>
    <Abstract>Returns an array of Interval objects that represent the intervals in this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntervalsAsSemitones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d5/d24/classmusic_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a9967c02dbe4dbb840b5a3e01dbeff147</Anchor>
    <Abstract>Returns an array of 6 2&apos;s, since every interval in this scale is a whole step.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClasses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a6a8d3a6ed910dda15b9442bd59bc1c92</Anchor>
    <Abstract>Returns the pitch classes present in one octave of this scale.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d5/d24/classmusic_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a225880d126caaa1fb28782ffa1a73413</Anchor>
    <Abstract>Returns the pitch class of the root of this scale.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchClassOfScaleDegree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac1b9aa7ad9c3568d755bce52cf4ff731</Anchor>
    <Abstract>Returns the pitch class of a given scale degree.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a8de4c6a22393ccbf78b5c690d7252586</Anchor>
    <Abstract>Returns an array of pitch objects representing this scale between a lowest and highest MIDI pitch.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitches</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a164667f2eb1b1706806819a48500d1e0</Anchor>
    <Abstract>Returns an array of pitch objects representing one octave of this scale, at the given octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a71fb8ccd2bd9defb856c2c6e1f4fb361</Anchor>
    <Abstract>Returns a pitch object representing the root of this scale in the specified MIDI octave number.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d5/d24/classmusic_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a9b9153cd95ee49acda8ff9644fa4603c</Anchor>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d5/d24/classmusic_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a578c1a298e9f9cab3c31b407af92ab8c</Anchor>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notesPerOctave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d5/d24/classmusic_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a00b7a635fdb2d54c1aa8683790ba276d</Anchor>
    <Abstract>Returns 6.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>a237ac3c6c63475899aed39a9311dceda</Anchor>
    <Abstract>Returns true if the other scale&apos;s root pitch class or interval set are different than this one&apos;s.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d5/d24/classmusic_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a5216fe0f7d5b50852b27e06376763ad5</Anchor>
    <Abstract>Returns true if the other whole tone scale does not have the same root as this one.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>music::scales::Scale</Scope>
    </TokenIdentifier>
    <Path>d3/d66/structmusic_1_1scales_1_1_scale.html</Path>
    <Anchor>ac2980ae89fa968f5b577b6d47739fe66</Anchor>
    <Abstract>Returns true if the other scale has the same root pitch class and interval set as this one.</Abstract>
    <DeclaredIn>Scale.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d5/d24/classmusic_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>ab5a2079a781bf92031b1eec14ac06a35</Anchor>
    <Abstract>Returns true if the other whole tone scale has the same root as this one.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WholeTone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d5/d24/classmusic_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>aad36186891318c6edc1fc4e89bcbe273</Anchor>
    <Abstract>Creates a whole tone scale object with the given pitch class as its root.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WholeTone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>music::scales::WholeTone</Scope>
    </TokenIdentifier>
    <Path>d5/d24/classmusic_1_1scales_1_1_whole_tone.html</Path>
    <Anchor>a536f2340a32f1ee9d8854702837a5e11</Anchor>
    <Abstract>Creates a whole tone scale starting on the given MIDI note.</Abstract>
    <DeclaredIn>WholeTone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pommier</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Abstract>This namespace contains the implementations of the Pommier SIMD extension functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>v2si</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>af3b06fdb15d0a1c9d04c64ec66bd4b11</Anchor>
    <DeclaredIn>sse_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>v4sf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>af4c9241aa2bcf285c894c58b26dde657</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>v4si</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a7929bd98d4b4a6252dd3a315fb9f2261</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>v4su</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>acb6d2cbc874da232bcc4028f436ac2fe</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a7111e52cd95baaa0b4ea1fc8778ef279</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exp_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a2a08007af13e7ac302c6d1d873e84320</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>log_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>ac6f37f6557759031e393285acecc9a66</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sin_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a437458949f05f83f70c795536f079027</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sincos_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pommier</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/namespacepommier.html</Path>
    <Anchor>a66ab536242d413ada93611c0129fb2dd</Anchor>
    <DeclaredIn>neon_mathfun.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; limes::files::DynamicLibrary &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Abstract>A specialization of std::hash for dynamic libraries.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Anchor>aaafa34ace88fb8f9f0efee778ab4f403</Anchor>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Anchor>ab83cc3ec626e7d43cd622b1449329bfe</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Anchor>a649464b4a14323ab5700a44fd6565535</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Anchor>a19e4b64db8fcf84b7b296ede8269bec2</Anchor>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Anchor>a24ee59073ecaa22d8cb6398b4fbce699</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::DynamicLibrary &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d91/structstd_1_1hash_3_01limes_1_1files_1_1_dynamic_library_01_4.html</Path>
    <Anchor>a391d9493c83e9e14935282b43fed91fa</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>DynamicLibrary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; limes::files::File &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Abstract>A specialization of std::hash for File objects.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Anchor>a5dfa4be57fe0c68cbf76e2378e15de19</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Anchor>af0f66b68b780c04500c79d5de997d923</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Anchor>aa28c5a2d4425463056ea5fda3b83d34e</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Anchor>ad8bab4a58463458d672906cf06e018ce</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Anchor>acd9ed7bd24470be91396a4454d66ca52</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::File &gt;</Scope>
    </TokenIdentifier>
    <Path>de/dac/structstd_1_1hash_3_01limes_1_1files_1_1_file_01_4.html</Path>
    <Anchor>a82d9998e8c695020a705d315818b1af1</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; limes::files::FilesystemEntry &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Abstract>A specialization of std::hash for filesystem entries.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Anchor>a79e6aa94a93c8f7caf8a7dba356e8d4b</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Anchor>aed2db2a5e962089b9308c7e2a76cb030</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Anchor>a6702339ad8824a5ec8f7190e3c29373b</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Anchor>a4768fca69a6f6d7a9bd0051e1a8109a0</Anchor>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Anchor>a10933b5ad11d0a82359e02347a7667a4</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::files::FilesystemEntry &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/dc6/structstd_1_1hash_3_01limes_1_1files_1_1_filesystem_entry_01_4.html</Path>
    <Anchor>abdb54948cf957f34ed075678ec69e084</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>FilesystemEntry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; limes::memory::RawData &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Abstract>A specialization of std::hash for RawData objects.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Anchor>a412c52e6413a37c2a47bacbce997c377</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Anchor>abcc6d5dc8e41047b1853877034aeb94c</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Anchor>a9e95f802bdf78844c87b8c7350e84c68</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Anchor>a25c4dc099a729fb5dab6fc3798d9cfae</Anchor>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Anchor>af21f5735d3aebdff6c5191eb1db3a3c9</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::memory::RawData &gt;</Scope>
    </TokenIdentifier>
    <Path>df/de4/structstd_1_1hash_3_01limes_1_1memory_1_1_raw_data_01_4.html</Path>
    <Anchor>a8d2f6c741567de57add1a1359e0aec99</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>RawData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; limes::misc::Version &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Abstract>A specialization of std::hash for Version objects.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Anchor>ad5691c58ec524bea0a460e9d615e8a41</Anchor>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Anchor>ab2038bcda14c12b41fbf2bd0d08609b6</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Anchor>a39d44b8423a21c06af973ca348850c45</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Anchor>aede4c609886c714290dae815deeb2524</Anchor>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Anchor>a96695b62a3790946390bb8da533f95b0</Anchor>
    <Abstract>hash is default copyable.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std::hash&lt; limes::misc::Version &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d13/structstd_1_1hash_3_01limes_1_1misc_1_1_version_01_4.html</Path>
    <Anchor>ad27625758751511cf7921e8c272ff022</Anchor>
    <Abstract>hash is default movable.</Abstract>
    <DeclaredIn>Version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>strings</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Abstract>This namespace contains some text manipulation utilities for working with both C++ and C-style string...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropFirstChars</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a91ded74a12444e6e18c9b0720251fa61</Anchor>
    <Abstract>Removes a specified number of characters from the beginning of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dropLastChars</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a8158cf75c9842b20d6b8727c4184663e</Anchor>
    <Abstract>Removes a specified number of characters from the end of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromFirstOccurrenceOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a978efbcde4c3c58ace812c788841ddf6</Anchor>
    <Abstract>Returns a copy of the passed string, beginning at the first occurrence of stringToFind .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLimesASCII</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a5c4847f86fcb8d4796c802653764509f</Anchor>
    <Abstract>Returns the Limes library ASCII logo as a string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNewline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>adca9725130e0ee777d8c0b82962b221d</Anchor>
    <Abstract>Returns the platform&apos;s preferred newline separator: \r\n on Windows, \n everywhere else.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>join</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a3d0abc87d5388e777a455d0bd7eaeb80</Anchor>
    <Abstract>Joins the input strings into one string, placing delimiter between each input string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinWithNewlines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>ace077e9ab71ba1ae1d291050ec98268a</Anchor>
    <Abstract>Joins the strings together, using the platform&apos;s preferred newline character as the token delimiter.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinWithWhitespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a944b447caa14ef2daa41c856a8b7caa5</Anchor>
    <Abstract>Joins the strings together, using a space character as the token delimiter.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a06f15b073d051461804970c0570b83e4</Anchor>
    <Abstract>Returns the length of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printLimesASCII</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>af6bd4c9f670460dac73a6e8fd017fb0f</Anchor>
    <Abstract>Prints the Limes library ASCII logo to std::cout.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quoted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a97d1b1e05002b566f1e7149385b40262</Anchor>
    <Abstract>Adds &quot; characters to the beginning and end of the string, if they aren&apos;t already there.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>split</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a502c1c0d50a8b5fd842edfce3308be33</Anchor>
    <Abstract>Takes an input string and splits it into a series of smaller strings.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitAtNewlines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a18a3031f1edaf1917cb8c694ad55537c</Anchor>
    <Abstract>Splits the input string into lines.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>splitAtWhitespace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>aef16f0d3bd8e33e85680969dc50e22ed</Anchor>
    <Abstract>Splits the input string using whitespace characters as the delimiter, not including the whitespace in...</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toLower</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a7b43a1bc909986f23418a796a0d7c345</Anchor>
    <Abstract>Returns a copy of the string, with all its characters converted to lower case.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toUpper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>ac81b66aca13491f69a0c0a4014244887</Anchor>
    <Abstract>Returns a copy of the string, with all its characters converted to upper case.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a1670eabe3d3dbe930eeab693ad5a61ba</Anchor>
    <Abstract>Removes any whitespace characters from the beginning and end of the string.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unquoted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>a6af9fb7a1cc053fed006ca09dff9f8d9</Anchor>
    <Abstract>Removes &quot; characters from the beginning and end of the string, if they were there.</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upToFirstOccurrenceOf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>aa0e28328b54ff88954f6b25e8e77d382</Anchor>
    <Abstract>Returns a copy of the passed string, ending at the first occurrence of stringToFind .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>new_line</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>strings</Scope>
    </TokenIdentifier>
    <Path>df/dcb/namespacestrings.html</Path>
    <Anchor>aebbfe58099474e9a4fb0f90f78ad2dff</Anchor>
    <Abstract>A static variable that can be referenced for convenience, instead of needing to call getNewline() .</Abstract>
    <DeclaredIn>StringUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>strings::TextTable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d6/d58/classstrings_1_1_text_table.html</Path>
    <Abstract>A class that creates a table of strings, laid out in rows and columns, and can pretty-print them with...</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addColumnToCurrentRow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d6/d58/classstrings_1_1_text_table.html</Path>
    <Anchor>a0579ba0490c26bf93b6827820e06a7b2</Anchor>
    <Abstract>Appends text to the current row.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d6/d58/classstrings_1_1_text_table.html</Path>
    <Anchor>aecc30d98637592cdb375e0a7d61d241c</Anchor>
    <Abstract>Clears and resets the table.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d6/d58/classstrings_1_1_text_table.html</Path>
    <Anchor>a7fe75af856f28e1c99edaf5aeeeb7e8f</Anchor>
    <Abstract>Finds the total number of columns, by looking for the row with the greatest number of columns.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumRows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d6/d58/classstrings_1_1_text_table.html</Path>
    <Anchor>a720d30b7e7a2678cb55f64cb3b7b9e3f</Anchor>
    <Abstract>Returns the current number of rows in the table.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d6/d58/classstrings_1_1_text_table.html</Path>
    <Anchor>a6a08b32e07b7de9275888ac3024e2080</Anchor>
    <Abstract>Returns a vector with a string for each row.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d6/d58/classstrings_1_1_text_table.html</Path>
    <Anchor>ae5f2fcc32d4cba21d403058f5f399698</Anchor>
    <Abstract>Starts a new row.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d6/d58/classstrings_1_1_text_table.html</Path>
    <Anchor>a63f180f81d430bb1ad995d90d8c1e329</Anchor>
    <Abstract>Appends text to the current row.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startNewRow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d6/d58/classstrings_1_1_text_table.html</Path>
    <Anchor>a854cd55cebf02ff5d6513745def89e5e</Anchor>
    <Abstract>Starts a new row; subsequent calls to addTextToCurrentRow() will be added to the next row.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>strings::TextTable</Scope>
    </TokenIdentifier>
    <Path>d6/d58/classstrings_1_1_text_table.html</Path>
    <Anchor>aa7b0e7eba2b38e84c4b4e6058ceedd36</Anchor>
    <Abstract>Returns a string containing all the rows in the table.</Abstract>
    <DeclaredIn>TextTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Abstract>This namespace contains threading utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callAndBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>ga251c922a2477a65a5ded648c4ce53e6f</Anchor>
    <Abstract>Calls a function on a background thread, blocks until the function finishes executing,...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callInBackground</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>ga94a8bdf0e635ade7c85f672ee7423c1a</Anchor>
    <Abstract>Launches a function on a background thread and returns immediately.</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumThreads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d2/db9/group__threads.html</Path>
    <Anchor>gad36ea8a69391a84e28749452d0528c07</Anchor>
    <Abstract>Tries to detect the number of concurrent threads supported by the current hardware and implementation...</Abstract>
    <DeclaredIn>Threading.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_realtime_copy_safe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Anchor>aeb10caeeea2e556947271f79cec45918</Anchor>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe copy constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_realtime_move_safe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Anchor>adc41f441b0140baa937620d5910c241f</Anchor>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe move constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeCopySafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Anchor>ade3995431ab6016d4053cffddd0d2c65</Anchor>
    <Abstract>@concept RealtimeCopySafe This concept requires that a type is realtime-safe copy constructable and c...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeMoveSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Anchor>af598c41f0e03238805ceccf7da53aee4</Anchor>
    <Abstract>This concept requires that a type is realtime-safe move constructable and move assignable.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RealtimeSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads</Scope>
    </TokenIdentifier>
    <Path>d5/d58/namespacethreads.html</Path>
    <Anchor>adb15c7e72fd6eee6d9cbbadf02048743</Anchor>
    <Abstract>This concept requires that a type is realtime-safe copy constructable, copy assignable,...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::is_realtime_copy_assignable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::is_realtime_copy_assignable</Scope>
    </TokenIdentifier>
    <Path>da/d0a/structthreads_1_1is__realtime__copy__assignable.html</Path>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe copy assignable...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::is_realtime_copy_constructable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::is_realtime_copy_constructable</Scope>
    </TokenIdentifier>
    <Path>d9/dcb/structthreads_1_1is__realtime__copy__constructable.html</Path>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe copy constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::is_realtime_move_assignable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::is_realtime_move_assignable</Scope>
    </TokenIdentifier>
    <Path>d4/d56/structthreads_1_1is__realtime__move__assignable.html</Path>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe move assignable...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::is_realtime_move_constructable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::is_realtime_move_constructable</Scope>
    </TokenIdentifier>
    <Path>d4/d18/structthreads_1_1is__realtime__move__constructable.html</Path>
    <Abstract>A compile-time boolean constant that evaluates to true if the type T is realtime-safe move constructa...</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::ThreadedObjectReader</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d4f/structthreads_1_1_threaded_object_reader.html</Path>
    <Abstract>An object that holds a const reference to another object.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedObjectReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d4f/structthreads_1_1_threaded_object_reader.html</Path>
    <Anchor>a684e7c532c5320480a416a49f00405c7</Anchor>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedObjectReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d4f/structthreads_1_1_threaded_object_reader.html</Path>
    <Anchor>a3ecbfb3b57f574e397da1e4b7b9a19cc</Anchor>
    <Abstract>ThreadedObjectReader is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedObjectReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d4f/structthreads_1_1_threaded_object_reader.html</Path>
    <Anchor>a730618ab470d4eaa9e1c48be5bcaeaf8</Anchor>
    <Abstract>ThreadedObjectReader is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThreadedObjectReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d4f/structthreads_1_1_threaded_object_reader.html</Path>
    <Anchor>a7ad43700393003f74f365d57c684ba06</Anchor>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d4f/structthreads_1_1_threaded_object_reader.html</Path>
    <Anchor>a07d973d0d3a9b11c0881f573106c2991</Anchor>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d4f/structthreads_1_1_threaded_object_reader.html</Path>
    <Anchor>a142586b7a74e6aef526749e36a442ac1</Anchor>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d4f/structthreads_1_1_threaded_object_reader.html</Path>
    <Anchor>ac4186174282c0cdd516cedb6b7d903a0</Anchor>
    <Abstract>ThreadedObjectReader is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d4f/structthreads_1_1_threaded_object_reader.html</Path>
    <Anchor>adedbd6ea81df2edd93ac2feb314144f4</Anchor>
    <Abstract>ThreadedObjectReader is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::ThreadedObjectReader</Scope>
    </TokenIdentifier>
    <Path>dc/d4f/structthreads_1_1_threaded_object_reader.html</Path>
    <Anchor>acbd78b4835e5541baeeb9b6a71731cce</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::ThreadedObjectWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>de/d1a/structthreads_1_1_threaded_object_writer.html</Path>
    <Abstract>An object that holds a non-const reference to another object.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedObjectWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>de/d1a/structthreads_1_1_threaded_object_writer.html</Path>
    <Anchor>a1080b31d22aaa086aedf2ed9c0fb349e</Anchor>
    <Abstract>ThreadedObjectWriter is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedObjectWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>de/d1a/structthreads_1_1_threaded_object_writer.html</Path>
    <Anchor>ab730998420af8cdb823b33ebed58f5ad</Anchor>
    <Abstract>ThreadedObjectWriter is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThreadedObjectWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>de/d1a/structthreads_1_1_threaded_object_writer.html</Path>
    <Anchor>afc55c7ee01003498027bd133bad7f9ce</Anchor>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>de/d1a/structthreads_1_1_threaded_object_writer.html</Path>
    <Anchor>aa299c1037c01cd381d8a4a4077d7c126</Anchor>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>de/d1a/structthreads_1_1_threaded_object_writer.html</Path>
    <Anchor>a277429734c9c6671ee0a76494153993a</Anchor>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>de/d1a/structthreads_1_1_threaded_object_writer.html</Path>
    <Anchor>a194e7ff2c8f0644e2671c7c4666e9d26</Anchor>
    <Abstract>ThreadedObjectWriter is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>de/d1a/structthreads_1_1_threaded_object_writer.html</Path>
    <Anchor>a7cf2169f198aeabcedcb316c591a5878</Anchor>
    <Abstract>ThreadedObjectWriter is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>de/d1a/structthreads_1_1_threaded_object_writer.html</Path>
    <Anchor>a90c00f8c8bb7b37ffafb960af1268fe0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedObjectWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>threads::ThreadedObjectWriter</Scope>
    </TokenIdentifier>
    <Path>de/d1a/structthreads_1_1_threaded_object_writer.html</Path>
    <Anchor>a7b200c120bf2cfaf438d33a6f8e2c8d7</Anchor>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::ThreadSafeObject</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Abstract>A wrapper class that makes an object thread safe.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>a446bd21c5862a798d1ee079f2e4a13c3</Anchor>
    <Abstract>The type of a reader accessor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Writer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>afebfd13d1623b7ae198ca5112d532d8a</Anchor>
    <Abstract>The type of a writer accessor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadSafeObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>ac0ce28c408c0219549ff2f43ed4c4061</Anchor>
    <Abstract>Constructor.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadSafeObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>a8a6ca29ab61fd73337f496e131dc7963</Anchor>
    <Abstract>ThreadSafeObject is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadSafeObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>ab7c85b93c4f0e6e47892a4043236e20e</Anchor>
    <Abstract>ThreadSafeObject is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLockFree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>a74587d3c9495a947d13b687188eda25e</Anchor>
    <Abstract>Returns true if acquiring read and write accessors for the owned object is lock-free.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>a1c2be8c98ac1f4b153f00910f03276bd</Anchor>
    <Abstract>ThreadSafeObject is not copyable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>a5c7b26f44d8584e0c2682fafb481ca8b</Anchor>
    <Abstract>ThreadSafeObject is not movable.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>a61c873b6f7e987e2dcd99ebf2ea9543f</Anchor>
    <Abstract>Acquires a read-only copy of the owned object.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>a6276a775bf66e90b592f9632c83d925c</Anchor>
    <Abstract>Acquires a writable copy of the owned object.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlwaysLockFree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>threads::ThreadSafeObject</Scope>
    </TokenIdentifier>
    <Path>dc/da7/classthreads_1_1_thread_safe_object.html</Path>
    <Anchor>a85e0203e049c6eac19506baa52afabec</Anchor>
    <Abstract>Returns true if acquiring read and write accessors for the owned object is always lock-free.</Abstract>
    <DeclaredIn>ThreadSafeObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>threads::detail</Scope>
    </TokenIdentifier>
    <Path>d4/d6d/namespacethreads_1_1detail.html</Path>
    <Abstract>This namespace contains implementation details for the realtime safety metaprogramming utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail::is_rt_safe</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::detail::is_rt_safe</Scope>
    </TokenIdentifier>
    <Path>da/d8b/structthreads_1_1detail_1_1is__rt__safe.html</Path>
    <Abstract>Represents a query for realtime safety of the operation represented by Tag1 and Tag2 on the type T .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail::is_rt_safe&lt; std::map&lt; T, U &gt;, move_tag, Tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::detail::is_rt_safe&lt; std::map&lt; T, U &gt;, move_tag, Tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d3/da9/structthreads_1_1detail_1_1is__rt__safe_3_01std_1_1map_3_01_t_00_01_u_01_4_00_01move__tag_00_01_tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move operations within a std::map .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail::is_rt_safe&lt; std::set&lt; T &gt;, move_tag, Tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::detail::is_rt_safe&lt; std::set&lt; T &gt;, move_tag, Tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d2/d1b/structthreads_1_1detail_1_1is__rt__safe_3_01std_1_1set_3_01_t_01_4_00_01move__tag_00_01_tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move operations within a std::set .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail::is_rt_safe&lt; std::unordered_map&lt; T, U &gt;, move_tag, Tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::detail::is_rt_safe&lt; std::unordered_map&lt; T, U &gt;, move_tag, Tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d7/d89/structthreads_1_1detail_1_1is__rt__safe_3_01std_1_1unordered__map_3_01_t_00_01_u_01_4_00_01move__tag_00_01_tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move operations within a std::unordered_map .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail::is_rt_safe&lt; std::unordered_set&lt; T &gt;, move_tag, Tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::detail::is_rt_safe&lt; std::unordered_set&lt; T &gt;, move_tag, Tag &gt;</Scope>
    </TokenIdentifier>
    <Path>de/d3c/structthreads_1_1detail_1_1is__rt__safe_3_01std_1_1unordered__set_3_01_t_01_4_00_01move__tag_00_01_tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move operations within a std::unordered_set .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail::is_rt_safe&lt; std::vector&lt; T &gt;, move_tag, Tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::detail::is_rt_safe&lt; std::vector&lt; T &gt;, move_tag, Tag &gt;</Scope>
    </TokenIdentifier>
    <Path>db/d71/structthreads_1_1detail_1_1is__rt__safe_3_01std_1_1vector_3_01_t_01_4_00_01move__tag_00_01_tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move operations within a std::vector .</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail::is_rt_safe&lt; T, copy_tag, assignable_tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::detail::is_rt_safe&lt; T, copy_tag, assignable_tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d3/d04/structthreads_1_1detail_1_1is__rt__safe_3_01_t_00_01copy__tag_00_01assignable__tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for copy assignment operations.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail::is_rt_safe&lt; T, copy_tag, constructible_tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::detail::is_rt_safe&lt; T, copy_tag, constructible_tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d4/da9/structthreads_1_1detail_1_1is__rt__safe_3_01_t_00_01copy__tag_00_01constructible__tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for copy construction operations.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail::is_rt_safe&lt; T, move_tag, assignable_tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::detail::is_rt_safe&lt; T, move_tag, assignable_tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d7/ddb/structthreads_1_1detail_1_1is__rt__safe_3_01_t_00_01move__tag_00_01assignable__tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move assignment operations.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threads::detail::is_rt_safe&lt; T, move_tag, constructible_tag &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>threads::detail::is_rt_safe&lt; T, move_tag, constructible_tag &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/d2d/structthreads_1_1detail_1_1is__rt__safe_3_01_t_00_01move__tag_00_01constructible__tag_01_4.html</Path>
    <Abstract>Specialization of the is_rt_safe class template for move construction operations.</Abstract>
    <DeclaredIn>RealtimeTypeTraits.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Abstract>This namespace contains utilities for working with time measurements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Point</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>ade0327197a2b5a9a6cec5bf4a64426bc</Anchor>
    <Abstract>Convenience typedef for a time point.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>a0e90e4ba487985ed0263ee88f594bd8d</Anchor>
    <Abstract>Convenience typedef for the system clock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertClockTimePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>a5afe949cfbd908ea08a81491b5f88997</Anchor>
    <Abstract>Converts a time point on one clock to a time point on another clock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>a7859c167538c8ab37cc0736214b0c660</Anchor>
    <Abstract>Converts a std::time_t object to a time point on the given Clock type.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>aabe108664765a936b376d4d324f68f5e</Anchor>
    <Abstract>Converts a std::tm object to a time point on the given Clock type.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toSystemTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>a6bca95a102f58cf7c9fd1b393c368c79</Anchor>
    <Abstract>Converts a time point on any Clock type to a time point on the SystemClock.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toTimeObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>ac979c7ad7b70f0f4a29229d891fc466a</Anchor>
    <Abstract>Converts a time point on any Clock type to a std::tm object.</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>time</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/namespacetime.html</Path>
    <Anchor>a4b0bf40dc380c9a5f65d90e15a8471cf</Anchor>
    <Abstract>@concept Clock The same as std::is_clock_v, only implemented here because the standard library concep...</Abstract>
    <DeclaredIn>time_utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time::Date</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Abstract>This class represents a date on the Gregorian calendar.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a53f3da2753f8f7f293ea16b54880aa73</Anchor>
    <Abstract>Date is default copyable at compile time.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a86ac8eef17f2b6631bbb128064c1aaf6</Anchor>
    <Abstract>Date is default movable at compile time.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDayOfMonth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a98cde46cf0c937e37351e6c4369bf8b6</Anchor>
    <Abstract>Returns the day of the month of this date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDayOfYear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a77f6dc132cf80795e5879dbb8f9030a3</Anchor>
    <Abstract>Returns the day of the year this date represents.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMonth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>af19c5cfd2b8a6488864e9c2ba75445f6</Anchor>
    <Abstract>Returns the month of this date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWeekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a2cffaaaa7eb226be868032fb1f2a71e6</Anchor>
    <Abstract>Returns a Weekday object representing this date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWeekNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a4efd97eb56aeabddadde07b25fa8aafb</Anchor>
    <Abstract>Returns the week number of the year that this date represents.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getYear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a4045514507598aa810a7593a5c4b0ba0</Anchor>
    <Abstract>Returns the year of this date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFuture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a09d4e6994484fefa5d23a5b6d2e456dc</Anchor>
    <Abstract>Returns true if this date is in the future.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInPast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>ad42e019647d6b94310e571f9e7f6a228</Anchor>
    <Abstract>Returns true if this date is in the past.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a58dd7930a39796de953c4590c4a8e612</Anchor>
    <Abstract>Date is default copyable at compile time.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a92955aa6a546d44a5e584bcd03e1dfd9</Anchor>
    <Abstract>Date is default movable at compile time.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>af438812b19f659cb3bddbeaf528b2d8f</Anchor>
    <Abstract>Returns a string representing this date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a3006e420a9b999c9f9030cc892ff2884</Anchor>
    <Abstract>Creates a Date object representing January 1, year 0.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a72074c188c3e1d658a1c46d1f96b0e04</Anchor>
    <Abstract>Creates a Date object.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a684b30951630f4e3a06f7e0152cd0232</Anchor>
    <Abstract>Creates a Date object.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a0aeae2d351cbd7a741aba3caeb3233a8</Anchor>
    <Abstract>Creates a Date object from the given std::tm object.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a2c266ed2d8c193ec65b0d7544e46f45a</Anchor>
    <Abstract>Creates a Date object from the given std::time_t object.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>ac8cdc86c4402e1a201573cb70dfdcb2f</Anchor>
    <Abstract>Creates a Date object from a std::chrono::time_point of any Clock type.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a85a40eb09b03347789ede2d14a3fc44c</Anchor>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>afd71b87c39abcd2054a6607be074b33a</Anchor>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a0e0db6785b799a75cbf545b7b28b0736</Anchor>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a859ddb6d3e2ed84d99667cb0d198e5de</Anchor>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>ad913c0e3a2b3dc73c179df86a0845603</Anchor>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a7cea63851323f1570c6532b1805d8ff9</Anchor>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationDate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>ac5e12d452d56c34b3498caa493931c61</Anchor>
    <Abstract>Returns a Date object representing the date this code was compiled.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Date</Scope>
    </TokenIdentifier>
    <Path>dd/d49/classtime_1_1_date.html</Path>
    <Anchor>a60e8ccfb44fc6178bba054ddd5fc6349</Anchor>
    <Abstract>Returns a Date object representing the current date.</Abstract>
    <DeclaredIn>date.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time::DateTime</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Abstract>This class represents both a Date and a Time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>ae1b5ae167bb9ccc46693ee59bf0141c3</Anchor>
    <Abstract>DateTime is default copyable at compile time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a67e025d1c1563f6888d83460156559ec</Anchor>
    <Abstract>DateTime is default movable at compile time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStdTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>ab9ac12b2d0c9fbf1f62791967ffaf32f</Anchor>
    <Abstract>Converts this DateTime to a std::tm object.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimePoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>aa08b76c2d5431ab319b768fca0d9be63</Anchor>
    <Abstract>Converts this DateTime to a std::chrono::time_point object for the given Clock type.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a37965a352d3e8373504e6319e6ddff4b</Anchor>
    <Abstract>Converts this DateTime to a std::time_t object.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFuture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a3d530a71226b834865efbbd84cacdb6c</Anchor>
    <Abstract>Returns true if this date and time is in the future.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInPast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>aa727daf650a6601906a56daeb05a60b7</Anchor>
    <Abstract>Returns true if this date and time is in the past.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a51a0ca54983dec19902e634759632f9d</Anchor>
    <Abstract>DateTime is default copyable at compile time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>afbf2fdc8d85524aafd8f923d30e94f26</Anchor>
    <Abstract>DateTime is default movable at compile time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a080d28fd1b0805f526f826f62089a903</Anchor>
    <Abstract>Returns a string representation of this date and time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>aea64f57ef5c83a51aa47d13fc14c91ca</Anchor>
    <Abstract>Creates a DateTime object representing midnight on January 1, year 0.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>acddbc3547ca940dffe7d17bb20466887</Anchor>
    <Abstract>Creates a DateTime object from a Date and Time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a785071334d0f0c8e611fc361c7997c4d</Anchor>
    <Abstract>Creates a DateTime object from the given std::tm object.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>aba60092f46fc2d03e29acb98a8287250</Anchor>
    <Abstract>Creates a DateTime object from the given std::time_t object.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a146f72ce0b6cd751d0e46ade821c993b</Anchor>
    <Abstract>Creates a DateTime object from a std::chrono::time_point of any Clock type.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>ad67a596fed0453e1ad66b1bd413aba19</Anchor>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a434427796c2e899dea3751c2c409e013</Anchor>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>af05f1e6f661308e662eec651634bc5aa</Anchor>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a0eb17d7cded1319bdc31ea2d5c0879fb</Anchor>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a41a8d0b90e1811c245e1962fd46eb14c</Anchor>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>ad45b040a985d139c5b3fe70f0438ffc9</Anchor>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a7263f11521ac92f31599e97397990f43</Anchor>
    <Abstract>Returns a DateTime object representing the date and time this code was compiled.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::DateTime</Scope>
    </TokenIdentifier>
    <Path>dd/d74/classtime_1_1_date_time.html</Path>
    <Anchor>a6bc364cd38d2562915b6d9bbfac32a5b</Anchor>
    <Abstract>Returns a DateTime object representing the current date and time.</Abstract>
    <DeclaredIn>DateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time::Hour</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Abstract>This class represents an hour of the day.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a2dcf2b2fea265f61fc628113a7cdb2f5</Anchor>
    <Abstract>Hour is default copyable at compile time.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a1434a944d85ce0641c760c858ed350af</Anchor>
    <Abstract>Hour is default movable at compile time.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIn12HourFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>aeab9975794f16728b7787eb0d52b9f93</Anchor>
    <Abstract>Returns this Hour represented as an integer between 1 and 12.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hoursSinceMidnight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a5b55985860bbffac0e66a5f4fd1aa9ae</Anchor>
    <Abstract>Returns the number of hours since midnight that this Hour represents.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a2eb20ad60f2f5e195d24a2f2e8ecd39f</Anchor>
    <Abstract>Returns true if this hour is between midnight and noon.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMidnight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a7b2dcf1d4d379b13a9f5e137522f1584</Anchor>
    <Abstract>Returns true if this hour is exactly midnight.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNoon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>aee3a668f93e46ddd39542ceab9a55144</Anchor>
    <Abstract>Returns true if this hour is exactly noon.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a9d61cbe7c95a2e80ec8988b09beeb8ed</Anchor>
    <Abstract>Returns true if this hour is between noon and midnight.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>acf2f3e590f6671344675f7e735c901c9</Anchor>
    <Abstract>Hour is default copyable at compile time.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>ae0f3214d9ce61a1fb0823d49e5a85d60</Anchor>
    <Abstract>Hour is default movable at compile time.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>aef073b1be9a4a2ac6d9c9577380f063b</Anchor>
    <Abstract>Creates an Hour object representing midnight.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a7ee84244a213ddd1e7d79f6d5ebe0b7f</Anchor>
    <Abstract>Creates an Hour object representing the given number of hours since midnight.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>aa1853321385ebd01f5805fcda44f07bc</Anchor>
    <Abstract>Creates an Hour object.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>acf2bf1d3f850f61619c2a9f4d10854fa</Anchor>
    <Abstract>Creates an Hour object from the given std::tm object.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Hour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a91ab0eae5637ce64e2ed4a3f345c9e7f</Anchor>
    <Abstract>Creates an Hour object from the given std::time_t object.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>ace934ac4cc5a3761f1b146b459b67e13</Anchor>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a006eb246111237856348ba722d7f4acb</Anchor>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>ae791037123ccc68f09dd84ad03ee80e5</Anchor>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a24ce4bc3070e6159cad85833bf90f0ba</Anchor>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a28060bdf164eb5075115abd23e5bd16f</Anchor>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a89cc8b64c3694a1d2d32edc1b2237cf5</Anchor>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a70ca23f961bbea51b4c2553a6beebba8</Anchor>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a8704851576f340ff0b434c00d773290b</Anchor>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>aa44f2b370a364a6b44715ca3eadc72bc</Anchor>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a5695a75554923ce71dd6e1ccb3928ab8</Anchor>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationHour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a2cc042c78504986028e47291f7fb1911</Anchor>
    <Abstract>Returns an Hour object representing the hour this code was compiled.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a22ec56a7d71269808b991a1d4deb28b4</Anchor>
    <Abstract>Returns an Hour object representing the current hour.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>midnight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>a7e0cd7b8fa8f8a50021747871d4edb12</Anchor>
    <Abstract>Utility function for creating an Hour representing midnight.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>noon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Hour</Scope>
    </TokenIdentifier>
    <Path>d3/d71/classtime_1_1_hour.html</Path>
    <Anchor>ac1e58c1df8dceed29adfd51b2e4f93f4</Anchor>
    <Abstract>Utility function for creating an Hour representing noon.</Abstract>
    <DeclaredIn>hour.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time::Month</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Abstract>This class represents a month of the Gregorian calendar.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>ad322eb85c563cf0880ea8921b3fb99dd</Anchor>
    <Abstract>Month is default copyable at compile time.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>ab2092be230620ff1a229286ea905c78a</Anchor>
    <Abstract>Month is default movable at compile time.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMonthName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a025b5ab6c9f23608e340df5d8ac2fe62</Anchor>
    <Abstract>Returns the Name of this month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMonthNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>aedca0f5f940a8617587331a11445747a</Anchor>
    <Abstract>Returns the number of this month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumDays</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>af01c132a2d984df48ddccd8d36a8016d</Anchor>
    <Abstract>Returns the number of days in this month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumWeeks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>ae26b7c0f35a8b236cdb34f056ac623aa</Anchor>
    <Abstract>Returns the number of full weeks in this month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a8b85cd5f363e8455a000412914f38e3f</Anchor>
    <Abstract>Returns a string containing the name of this month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>acb5b8bfe88180b9e5fa2e58f94907a67</Anchor>
    <Abstract>Month is default copyable at compile time.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a3b35f5a69c5baa812e09e5091f010bc4</Anchor>
    <Abstract>Month is default movable at compile time.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a57557db9a54323f48e8a25ba0062a56d</Anchor>
    <Abstract>Creates a Month object representing January.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a3ff96c027bfcb996d6fdea5cf13896a9</Anchor>
    <Abstract>Creates a Month object representing the given month of the year, with January being 1 and December be...</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a71501c6133498dbc2a21ea27b50da34f</Anchor>
    <Abstract>Creates a Month object representing the given named month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>ae782854a51f6827ce9bc99bc08c2f437</Anchor>
    <Abstract>Creates a Month object from the std::tm object.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Month</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a2fbd6655c245d862f36378d13b6f52f0</Anchor>
    <Abstract>Creates a Month object from the std::time_t object.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>ad9cd668ad9e7bab7666d9bd1ca3ca8de</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a58f67b582db87152b59a19d9d2ee78bd</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a519fff138045329b316bdc4ce9c19232</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>adcc18f93f05385d6e3652496e08fe67f</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a8d6d5bff368c6edfc0acb537a8fb74ca</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a362135c6ded53d878ec5e44c02c1553a</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a0a43cd746c34f7ca0618b88bfb73c9a1</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>adb46406a5c990f7488c11a86403f3540</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a0facf665e377cd7e41dfcd19d26a7078</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a5acf24fb76e9524ae174dee824cb76f1</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a88bb00e98574c226e4c4ae167550c88f</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a39f446efec3726787622d8d22d1aeb09</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a0f7ac45af1145218ce4bb20dc5d5557a</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a5d081419e953149e836148c2c34b6191</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>aa756a4e3a743900ee7bf128f043a7763</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a74b60a9ed4c328607b5b117497a9a806</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>acf995167c96b10b7a11d0ac1a4cc9ea8</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a2803b34ed0c6891a1d01896d812d7d33</Anchor>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationMonth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a0d3b7d1e908bec899e251681c2ccfc38</Anchor>
    <Abstract>Returns a Month object representing the month this code was compiled.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>ac8030c7cfb3b5913006c71e5e34b7aff</Anchor>
    <Abstract>Returns a Month object representing the current month.</Abstract>
    <DeclaredIn>month.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>January</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9a86f5978d9b80124f509bdb71786e929e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>February</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9a659e59f062c75f81259d22786d6c44aa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>March</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9afa3e5edac607a88d8fd7ecb9d6d67424</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>April</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9a3fcf026bbfffb63fb24b8de9d0446949</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>May</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9a195fbb57ffe7449796d23466085ce6d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>June</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9a688937ccaf2a2b0c45a1c9bbba09698d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>July</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9a1b539f6f34e8503c97f6d3421346b63c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>August</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9a41ba70891fb6f39327d8ccb9b1dafb84</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>September</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9acc5d90569e1c8313c2b1c2aab1401174</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>October</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9aeca60ae8611369fe28a02e2ab8c5d12e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>November</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9a7e823b37564da492ca1629b4732289a8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>December</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Month</Scope>
    </TokenIdentifier>
    <Path>dc/dc1/classtime_1_1_month.html</Path>
    <Anchor>a9b8014e3f80cf7f161260a1e2f4590c9a82331503174acbae012b2004f6431fa5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time::Time</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Abstract>This class represents a time of day, with a specific Hour, minute, and second.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>adc70a5bda4ab3f61cdd2a8978616df6a</Anchor>
    <Abstract>Time is default copyable at compile time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>aca1b28c168bb109c0711d81a012721f8</Anchor>
    <Abstract>Time is default movable at compile time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a8fc3c722e069f7df1038697f589c5ebf</Anchor>
    <Abstract>Returns the Hour of this time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>ab7cb02262b1483107f4e4b003ff73ea9</Anchor>
    <Abstract>Returns the minute of the hour of this time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a39bcc3c97ea857e31011261e5fa66fdc</Anchor>
    <Abstract>Returns the second of the minute of this time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>ac1f67a3425806134e75b8f61cb0f7daf</Anchor>
    <Abstract>Returns true if this time is between midnight and noon.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFuture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>ad4cdfa000ce6389a014c14696bc522ef</Anchor>
    <Abstract>Returns true if this time is after the current time (agnostic of the date).</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInPast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a93178b90d58233928a64e115174d7536</Anchor>
    <Abstract>Returns true if this time is before the current time (agnostic of the date).</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOnTheHour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>afe839a57d079037dda1e609c4f6e8d44</Anchor>
    <Abstract>Returns true if this time is exactly on the hour.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a84d90b8762c16344101efc5dfea86fe9</Anchor>
    <Abstract>Returns true if this time is between noon and midnight.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>ab759bf7c94409fda810508731cad382d</Anchor>
    <Abstract>Time is default copyable at compile time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a3139d25845ba60a076dca626e4311d24</Anchor>
    <Abstract>Time is default movable at compile time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>af1d519185cc65ad7f5ac7279afcd62c0</Anchor>
    <Abstract>Returns this Time represented as a string.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>ad50d26ad40f7620b1ad1ca4ca54599a7</Anchor>
    <Abstract>Creates a Time object representing midnight on the hour.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a946557615023df7229c357b15e6f78ad</Anchor>
    <Abstract>Creates a Time object.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a54109cf8217f47c4ead0fb886d3d4594</Anchor>
    <Abstract>Creates a Time object.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a19835d46d7949c73acfc67b83edf2a42</Anchor>
    <Abstract>Creates a Time object from the given std::tm object.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>abcee840e28464c2f6a9a7e37c18ce262</Anchor>
    <Abstract>Creates a Time object from the given std::time_t object.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a36c6b0f0119aeab4299a8dc7c3e1f966</Anchor>
    <Abstract>Creates a Time object from a std::chrono::time_point of any Clock type.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a64f45b2507821d28d57d77b22fe676be</Anchor>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>ae683b055638d7914c0c4f7331fbcb6d1</Anchor>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a2a05edd1693275d20e3f1fdbf6a53d76</Anchor>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a137e2ca547a9d093901a40de144a7ad4</Anchor>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a6ae85946bc10d083669fb43d7939ca9a</Anchor>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>ae1d533129ecabde03298e465d8376f19</Anchor>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a2980f80be4e69b363d38105e1eff47e2</Anchor>
    <Abstract>Returns a Time object representing the time this code was compiled.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Time</Scope>
    </TokenIdentifier>
    <Path>d1/dea/classtime_1_1_time.html</Path>
    <Anchor>a9d302cb8f5ef13a8c1ae152d977bcf57</Anchor>
    <Abstract>Returns a Time object representing the current time.</Abstract>
    <DeclaredIn>time.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time::Weekday</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Abstract>This class represents a day of the week in the Gregorian calendar.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OtherWeekdayType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>aab9b905f48c1e6ea68cb6371dc7a478a</Anchor>
    <Abstract>Convenience typdef for the other template specialization of Weekday.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a79b2e85fba0e24129edc8caf14b15a84</Anchor>
    <Abstract>Weekday is default copyable at compile time.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>ac83927473de94a6e0331dafbd7ea0088</Anchor>
    <Abstract>Weekday is default movable at compile time.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>daysSinceStartOfWeek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a524dfcbf9bcc78b6f8def31e5300db5e</Anchor>
    <Abstract>Returns the number of days since the first day of the week that this Weekday represents.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a45727144c3119eec305e7f4f5b0eb8e6</Anchor>
    <Abstract>Returns a string containing the name of this weekday.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWeekdayName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a42da396f60ad59f58a89662410e6c273</Anchor>
    <Abstract>Returns the name of the day this object represents.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWeekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a1f3c5f6e6e0578846163d0309014ac62</Anchor>
    <Abstract>Returns true if this Weekday is not Saturday or Sunday.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWeekend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>ab46d100c229910315276b0597fda98d8</Anchor>
    <Abstract>Returns true if this Weekday represents Saturday or Sunday.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a5cb3bbf58228291e2b89f14aded5ca6a</Anchor>
    <Abstract>Weekday is default copyable at compile time.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a063dcedc040c6953997ed5a735e5c556</Anchor>
    <Abstract>Weekday is default movable at compile time.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toOtherWeekdayType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a9a0891c00eb2a9ecdfc7c1153258354c</Anchor>
    <Abstract>Converts this Weekday into a Weekday object of the opposite type.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a2645f1320ffad77aa80a17e948757336</Anchor>
    <Abstract>Creates a Weekday object representing the first day of the week (Sunday or Monday,...</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a43911931f2268cf84eac305bb0ba25b2</Anchor>
    <Abstract>Creates a Weekday object representing the day that is the specified number of days after the first da...</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a7d3ad737b360d8b6f8c119212595a8b1</Anchor>
    <Abstract>Creates a Weekday object representing a specific date.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a4d6c17ec8c3c6cbbc2941fa153990160</Anchor>
    <Abstract>Creates a Weekday object representing a specific date.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a2373d900da7ed26f180946feaf8f43be</Anchor>
    <Abstract>Creates a Weekday object representing the day with the given name.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>abb33bd9e98450275a2d9f55e567a4636</Anchor>
    <Abstract>Creates a Weekday object from the given std::tm object.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a1ce94a5cbd1cab6e1f00df6bd9766b75</Anchor>
    <Abstract>Creates a Weekday object from the given std::time_t object.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Weekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a797eb651813f915e7e71c1210e457ffe</Anchor>
    <Abstract>Creates a Weekday object from another Weekday object with the opposite StartWeekOnSunday value.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a265a00dbac378ec18fefd64807a5b016</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>afc0eeeb3b690c35f3f77613ffa66f2d4</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a3785c16bc741f879feac06f10ba4ee69</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>ae07bc9c9493ad6155dfc8660fee65ef3</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a39b87143a42a5aba08abd09fda77a98a</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a627a9ac7b8170b08fc98d1309ffabfa9</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a0dad5352b580e415cf787dd604071f88</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>ae01d390921d6e2fc19379a950964ad63</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a878c6179495fcbed649a95da92718761</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a425c83658b31ee760b3caec68a1fb241</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a7399a41e7cd9a6e6927d5db8c9550a7e</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a7b3b3c59abce222282f6d923bb3a7524</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a5e26b13983491066edaf322d51456158</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a60bdddce3f3f3a29ec54cfb018418918</Anchor>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationWeekday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a0b84883ab9d858fffabba911eb0d228d</Anchor>
    <Abstract>Returns a Weekday object representing the day this code was compiled.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a030c30fcfe0a252a03ab3cd2de31553a</Anchor>
    <Abstract>Returns a Weekday object representing the current day of the week.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startsWeekOnSunday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>aaf886e2c36e3d19e71cff3fecbf72f2d</Anchor>
    <Abstract>Returns true if this template specialization is starting the week on Sunday.</Abstract>
    <DeclaredIn>weekday.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sunday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a61e3d5d06fa34f271c0051e51a001272a9d1a0949c39e66a0cd65240bc0ac9177</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a61e3d5d06fa34f271c0051e51a001272a6f8522e0610541f1ef215a22ffa66ff6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tuesday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a61e3d5d06fa34f271c0051e51a001272a5792315f09a5d54fb7e3d066672b507f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Wednesday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a61e3d5d06fa34f271c0051e51a001272a796c163589f295373e171842f37265d5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Thursday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a61e3d5d06fa34f271c0051e51a001272a78ae6f0cd191d25147e252dc54768238</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Friday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a61e3d5d06fa34f271c0051e51a001272ac33b138a163847cdb6caeeb7c9a126b4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Saturday</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>time::Weekday</Scope>
    </TokenIdentifier>
    <Path>d3/d61/classtime_1_1_weekday.html</Path>
    <Anchor>a61e3d5d06fa34f271c0051e51a001272a8b7051187b9191cdcdae6ed5a10e5adc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time::Year</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Abstract>This class represents a calendar year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a5fad9c0390b06c13103a655bc701cf04</Anchor>
    <Abstract>Year is default copyable at compile time.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>abec1c0e5757ffe21b19cd397fb41c0c8</Anchor>
    <Abstract>Year is default movable at compile time.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumDays</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a51437665f42e961d7387778d236f1faf</Anchor>
    <Abstract>Returns the number of days in this year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumWeeks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a3efc3acee011c404ba4d3b3cad11f56b</Anchor>
    <Abstract>Returns the number of ISO weeks in this year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getYear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a0973d672d59559e0117a1169ffe549dd</Anchor>
    <Abstract>Returns the number of this year as an integer.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a38c79e24e8b70bf36e9daf90ac036c00</Anchor>
    <Abstract>Returns true if this year is before the year 0.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFuture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>ab91460b93e7f92871a57d205e5496728</Anchor>
    <Abstract>Returns true if this year is greater than the current year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInPast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a28b929e61759a791f96970ea8c79bab0</Anchor>
    <Abstract>Returns true if this year is less than the current year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLeap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>aa9239ddbab6643abe7c8c897ed2392e6</Anchor>
    <Abstract>Returns true if this year is a leap year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator int</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a198c896d31461b04dc2c03aea343deff</Anchor>
    <Abstract>Returns the number of this year as an integer.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>adfdfdda494212419579b4d03562cdcf3</Anchor>
    <Abstract>Year is default copyable at compile time.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a857369e62275a12336d17357f60f0756</Anchor>
    <Abstract>Assigns this year object to a new year number.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>ac718514ffb3ddad8dd764e3274c9b97b</Anchor>
    <Abstract>Year is default movable at compile time.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a08dd45ac3ee89d55940da4db36c8c409</Anchor>
    <Abstract>Creates a Year object representing the year 0.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>ae9b56410fb907fb777fd394a870dd886</Anchor>
    <Abstract>Creates a Year object representing the given year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a2265042a435182d9531ceb4b83f20536</Anchor>
    <Abstract>Creates a Year object from the given std::tm object.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Year</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a31e986779d9443c631228d1849f47c62</Anchor>
    <Abstract>Creates a Year object from the given std::time_t object.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a0403e0268f696581dfa284938ba7179c</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a42ac392f94534456b042f6451bdecd15</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a995007430839a6045051b10c45db7db4</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a2138cdbf58800a02b2e9939f2a720339</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>ac8c7e5028f7a52cd089fd269bd463c31</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>ad7cf3430a61470f73ac0599dff7c68b8</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>afe31bfcaf34383b532048f8c27147445</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a7fc701ecd7f5df47e318f7dfb631185b</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>ae2b754229fd5d99a8df9650c5801d52c</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a09f9877f601cb470c6095880d5fd3ee4</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a95520dfc2ac3d221eaeca95eaa4e48b5</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a9ac69b3d2a21f4b8935b2cc6fd3553a2</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a7de037fde3381571819ac49964457053</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>ac753cf1cab9379f27ad1a20f7ad0f448</Anchor>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompilationYear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>a1da6dc47e6254a8fba91b829a120a00d</Anchor>
    <Abstract>Returns a Year object representing the year this code was compiled.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>time::Year</Scope>
    </TokenIdentifier>
    <Path>dc/da4/classtime_1_1_year.html</Path>
    <Anchor>ad7d08911a9df60ebead2ef9ac1be1a01</Anchor>
    <Abstract>Returns a Year object representing the current year.</Abstract>
    <DeclaredIn>year.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Abstract>This namespace contains implementation details for the TypeList class.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_from_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a3057d87f2af05b7be9837a274bd6143d</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a3e3690b617525f94f0dc0f60ef1d664f</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIfAbsent_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>adfb3e14124bdf47f747f776dd04f8a37</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>aac035a339a1dc7061c6d9fc466a28ddd</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>common_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ae153376f3b013aa49521f6ba7f3f5b5d</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_first_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a63a4448ac0ecb85b13cf04e39d3f7d88</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_last_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ac3f307a6566248037e12ed3f791d3c59</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>aa160203bcf1a3723d15a6da6d945fe96</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_at_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a201bf723f4b50b7568cf11eedd0da2c7</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>not_in_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>af5ccc3dd87e82647b88028d44d0371f7</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepend_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a217abe0bd33ddaffdd251c94c480b915</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_at_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a9ee0f2d6f565cc3b17fda3c8c2a6575a</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_duplicates_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a97ec2f9326d31756d059529ce3c2c31e</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if_not_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a8fdc46f17a2b0a4c938d2eb02d88fc81</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a63d3451c4670f41205d777107cd1a864</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_null_types_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a4cdef6ab418bd7972b6c01146894fc1b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a6eaa8a9b28e9788cc5468611461017f2</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace_at_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a94bd21a4358d822199aeb5547236fff1</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a79872e66a5120c6598b2580c2b3e9d1e</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>afad5c039d525d26ef1cd52fa9bd5718b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SizeConstant</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a497001114206df535fa717ca7cc8f55c</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_at_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ae47d638837f0a66f71a12e3d5c599d1f</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>aff4a9912702617e3d8472023c6f5298f</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a0671c219e500d1241baebb5862f4cb3b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_from</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a3c2d6aedb9899e5582b8cc429c05b88b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIfAbsent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a46df99eea489b4916b43f6a451fc1700</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>are_same_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a52470c14cec4309b4d9bd622d5d31336</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>common_with</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>afc3c2b6ff403f65f06bd45da1f737071</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_duplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a31f892dfd6c05b822c92902680f0d72c</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_duplicates_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a83e4ea9747553b878eabd093d2576589</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_or_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>aac4adf0724e816aa91cd4672a3c01397</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a94f83d653fdbfa8e2399e2f8b9d91def</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a99b7520dc5370f7ea4bfab7e37d94050</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a47946d4ad7f3822ea85a8b119d06022b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if_not_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a184a1e76bf6b2f42a908780fc3a579c4</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_if_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a9a01e7736cd8b63e7ea6fdea42e35667</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a93810c3e164eb5635dac0478aad72bd3</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>af0361816ccc45567fb665bd4ec5ecced</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>afe883be906e0d8fae84e5c8545428f07</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ac0d5d67704d5ae1b86f03eb4c0b566df</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a4a144100ba281020aa8049e9df98e3e6</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalid_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>af4b5ac8a2ff0c19b06b0f6a7176912d6</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ab8700ce8a7fb7d1363e38deb97f4405c</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_null_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>d6/db2/group__meta.html</Path>
    <Anchor>gafd018480f3762b41345e04b87f360f57</Anchor>
    <Abstract>Returns true if T is a NullType .</Abstract>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>not_in</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ae228a280dc62f1becda725d2ce77710a</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>af5bb5766219457d195d8a84cebcfa953</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a48591930388cb1116b98f4d444a7e306</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_duplicates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ac097c461ac96b7d6e20ee11799535c5f</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ab7b0497d5573846cb9d5109b20dbfe2b</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_if_not</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a516e49676025f1987dbe8f1dde97cbaa</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>adb588e4338d17e720aea492d4aa68dc8</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a35e00df5d9ca812a2ad6409e14b69711</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>adccff6a219135425c9ddcd40cd76ae9f</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>same_ignoring_order_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a3d2abcd629ccb8b019e22712fae28cc0</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size_v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a10cd7f4b3899c32f53798c2c25f9585d</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>ae3e3bb0906a4cb3c32c4c9cb55f240a9</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist</Scope>
    </TokenIdentifier>
    <Path>dd/d4b/namespacetypelist.html</Path>
    <Anchor>a355ed2d2a493252587bcaf8bbe920836</Anchor>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::addIfAbsent&lt; Typelist&lt; Args... &gt;, TypesToAdd... &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::addIfAbsent&lt; Typelist&lt; Args... &gt;, TypesToAdd... &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/dcb/structtypelist_1_1add_if_absent_3_01_typelist_3_01_args_8_8_8_01_4_00_01_types_to_add_8_8_8_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::addIfAbsent&lt; Typelist&lt; Args... &gt;, TypesToAdd... &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/dcb/structtypelist_1_1add_if_absent_3_01_typelist_3_01_args_8_8_8_01_4_00_01_types_to_add_8_8_8_01_4.html</Path>
    <Anchor>ac6e08c20bb8e06163b14f80d1a49f09c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::are_same</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::are_same</Scope>
    </TokenIdentifier>
    <Path>d4/dba/structtypelist_1_1are__same.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::are_same&lt; LHS&lt; Args... &gt;, RHS&lt; Args... &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::are_same&lt; LHS&lt; Args... &gt;, RHS&lt; Args... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d67/structtypelist_1_1are__same_3_01_l_h_s_3_01_args_8_8_8_01_4_00_01_r_h_s_3_01_args_8_8_8_01_4_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::common_with&lt; List1&lt; List1Types... &gt;, List2&lt; List2Types... &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::common_with&lt; List1&lt; List1Types... &gt;, List2&lt; List2Types... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>d2/db2/structtypelist_1_1common__with_3_01_list1_3_01_list1_types_8_8_8_01_4_00_01_list2_3_01_list2_types_8_8_8_01_4_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::common_with&lt; List1&lt; List1Types... &gt;, List2&lt; List2Types... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>d2/db2/structtypelist_1_1common__with_3_01_list1_3_01_list1_types_8_8_8_01_4_00_01_list2_3_01_list2_types_8_8_8_01_4_01_4.html</Path>
    <Anchor>a58b4aca32d868f1ae8ae6b6c88bfbc9b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::contains</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::contains</Scope>
    </TokenIdentifier>
    <Path>d4/dea/structtypelist_1_1contains.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist::contains</Scope>
    </TokenIdentifier>
    <Path>d4/dea/structtypelist_1_1contains.html</Path>
    <Anchor>af2a9f14aa8d0c0ea2b021e4ac6762a6e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::contains_duplicates&lt; Typelist&lt; Args... &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::contains_duplicates&lt; Typelist&lt; Args... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>dd/d22/structtypelist_1_1contains__duplicates_3_01_typelist_3_01_args_8_8_8_01_4_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::contains_or</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::contains_or</Scope>
    </TokenIdentifier>
    <Path>d6/d73/structtypelist_1_1contains__or.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::count&lt; Typelist&lt; Args... &gt;, ToCount &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::count&lt; Typelist&lt; Args... &gt;, ToCount &gt;</Scope>
    </TokenIdentifier>
    <Path>dc/d17/structtypelist_1_1count_3_01_typelist_3_01_args_8_8_8_01_4_00_01_to_count_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist::count&lt; Typelist&lt; Args... &gt;, ToCount &gt;</Scope>
    </TokenIdentifier>
    <Path>dc/d17/structtypelist_1_1count_3_01_typelist_3_01_args_8_8_8_01_4_00_01_to_count_01_4.html</Path>
    <Anchor>a92e555d120c27aaaacb2ceca9a8dc9b8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::count_if&lt; Typelist&lt; Args... &gt;, UnaryPredicate &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::count_if&lt; Typelist&lt; Args... &gt;, UnaryPredicate &gt;</Scope>
    </TokenIdentifier>
    <Path>d2/dc2/structtypelist_1_1count__if_3_01_typelist_3_01_args_8_8_8_01_4_00_01_unary_predicate_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist::count_if&lt; Typelist&lt; Args... &gt;, UnaryPredicate &gt;</Scope>
    </TokenIdentifier>
    <Path>d2/dc2/structtypelist_1_1count__if_3_01_typelist_3_01_args_8_8_8_01_4_00_01_unary_predicate_01_4.html</Path>
    <Anchor>aa3ebf6db6e197e0077da9a9de70625e6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::count_if_not</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::count_if_not</Scope>
    </TokenIdentifier>
    <Path>d1/d75/structtypelist_1_1count__if__not.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::find&lt; Typelist&lt; Args... &gt;, TypeToFind &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::find&lt; Typelist&lt; Args... &gt;, TypeToFind &gt;</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/structtypelist_1_1find_3_01_typelist_3_01_args_8_8_8_01_4_00_01_type_to_find_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist::find&lt; Typelist&lt; Args... &gt;, TypeToFind &gt;</Scope>
    </TokenIdentifier>
    <Path>dc/dd2/structtypelist_1_1find_3_01_typelist_3_01_args_8_8_8_01_4_00_01_type_to_find_01_4.html</Path>
    <Anchor>a0e5265b3493b45f87d1b46ee4c317aee</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::insert_at&lt; Typelist&lt; Args... &gt;, Index, ToInsert &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::insert_at&lt; Typelist&lt; Args... &gt;, Index, ToInsert &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/structtypelist_1_1insert__at_3_01_typelist_3_01_args_8_8_8_01_4_00_01_index_00_01_to_insert_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::insert_at&lt; Typelist&lt; Args... &gt;, Index, ToInsert &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/dfb/structtypelist_1_1insert__at_3_01_typelist_3_01_args_8_8_8_01_4_00_01_index_00_01_to_insert_01_4.html</Path>
    <Anchor>ae1d7d649b925725d90637403b6179b11</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::not_in&lt; List1&lt; List1Types... &gt;, List2&lt; List2Types... &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::not_in&lt; List1&lt; List1Types... &gt;, List2&lt; List2Types... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d4b/structtypelist_1_1not__in_3_01_list1_3_01_list1_types_8_8_8_01_4_00_01_list2_3_01_list2_types_8_8_8_01_4_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::not_in&lt; List1&lt; List1Types... &gt;, List2&lt; List2Types... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>d6/d4b/structtypelist_1_1not__in_3_01_list1_3_01_list1_types_8_8_8_01_4_00_01_list2_3_01_list2_types_8_8_8_01_4_01_4.html</Path>
    <Anchor>adee1793d0ec8655d7a24b7051b82d06d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::remove&lt; Typelist&lt; Args... &gt;, TypesToRemove... &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::remove&lt; Typelist&lt; Args... &gt;, TypesToRemove... &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/d9d/structtypelist_1_1remove_3_01_typelist_3_01_args_8_8_8_01_4_00_01_types_to_remove_8_8_8_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::remove&lt; Typelist&lt; Args... &gt;, TypesToRemove... &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/d9d/structtypelist_1_1remove_3_01_typelist_3_01_args_8_8_8_01_4_00_01_types_to_remove_8_8_8_01_4.html</Path>
    <Anchor>ac34252c6811c8466e2aaa22b83a68918</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::remove_at&lt; Typelist&lt; Args... &gt;, Index &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::remove_at&lt; Typelist&lt; Args... &gt;, Index &gt;</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/structtypelist_1_1remove__at_3_01_typelist_3_01_args_8_8_8_01_4_00_01_index_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::remove_at&lt; Typelist&lt; Args... &gt;, Index &gt;</Scope>
    </TokenIdentifier>
    <Path>d7/d3b/structtypelist_1_1remove__at_3_01_typelist_3_01_args_8_8_8_01_4_00_01_index_01_4.html</Path>
    <Anchor>a6ae7b43c26672198f2459023210cba10</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::remove_duplicates&lt; Typelist&lt; Args... &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::remove_duplicates&lt; Typelist&lt; Args... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>d7/dbe/structtypelist_1_1remove__duplicates_3_01_typelist_3_01_args_8_8_8_01_4_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::remove_duplicates&lt; Typelist&lt; Args... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>d7/dbe/structtypelist_1_1remove__duplicates_3_01_typelist_3_01_args_8_8_8_01_4_01_4.html</Path>
    <Anchor>a9772331fe3b288e7b44167317899299c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::remove_if&lt; Typelist&lt; Args... &gt;, UnaryPredicate &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::remove_if&lt; Typelist&lt; Args... &gt;, UnaryPredicate &gt;</Scope>
    </TokenIdentifier>
    <Path>de/d33/structtypelist_1_1remove__if_3_01_typelist_3_01_args_8_8_8_01_4_00_01_unary_predicate_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::remove_if&lt; Typelist&lt; Args... &gt;, UnaryPredicate &gt;</Scope>
    </TokenIdentifier>
    <Path>de/d33/structtypelist_1_1remove__if_3_01_typelist_3_01_args_8_8_8_01_4_00_01_unary_predicate_01_4.html</Path>
    <Anchor>aec0a5d06cd9e862f441b1dffe8a806e2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::remove_if_not&lt; Typelist&lt; Args... &gt;, UnaryPredicate &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::remove_if_not&lt; Typelist&lt; Args... &gt;, UnaryPredicate &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/de1/structtypelist_1_1remove__if__not_3_01_typelist_3_01_args_8_8_8_01_4_00_01_unary_predicate_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::remove_if_not&lt; Typelist&lt; Args... &gt;, UnaryPredicate &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/de1/structtypelist_1_1remove__if__not_3_01_typelist_3_01_args_8_8_8_01_4_00_01_unary_predicate_01_4.html</Path>
    <Anchor>a671053b03474ed156e89ca1629ac3392</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::replace&lt; Typelist&lt; Args... &gt;, ToReplace, ReplaceWith &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::replace&lt; Typelist&lt; Args... &gt;, ToReplace, ReplaceWith &gt;</Scope>
    </TokenIdentifier>
    <Path>de/da6/structtypelist_1_1replace_3_01_typelist_3_01_args_8_8_8_01_4_00_01_to_replace_00_01_replace_with_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::replace&lt; Typelist&lt; Args... &gt;, ToReplace, ReplaceWith &gt;</Scope>
    </TokenIdentifier>
    <Path>de/da6/structtypelist_1_1replace_3_01_typelist_3_01_args_8_8_8_01_4_00_01_to_replace_00_01_replace_with_01_4.html</Path>
    <Anchor>a87832cdc0d996023f3d1ba6cb675d63e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::replace_at&lt; Typelist&lt; Args... &gt;, Index, ReplaceWith &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::replace_at&lt; Typelist&lt; Args... &gt;, Index, ReplaceWith &gt;</Scope>
    </TokenIdentifier>
    <Path>db/d69/structtypelist_1_1replace__at_3_01_typelist_3_01_args_8_8_8_01_4_00_01_index_00_01_replace_with_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::replace_at&lt; Typelist&lt; Args... &gt;, Index, ReplaceWith &gt;</Scope>
    </TokenIdentifier>
    <Path>db/d69/structtypelist_1_1replace__at_3_01_typelist_3_01_args_8_8_8_01_4_00_01_index_00_01_replace_with_01_4.html</Path>
    <Anchor>a523341ec33c69ee7235572f7f26c005a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::size</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::size</Scope>
    </TokenIdentifier>
    <Path>d6/de0/structtypelist_1_1size.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::size&lt; Typelist&lt; Args... &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::size&lt; Typelist&lt; Args... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/d61/structtypelist_1_1size_3_01_typelist_3_01_args_8_8_8_01_4_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::swap&lt; Typelist&lt; Args... &gt;, Type1, Type2 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::swap&lt; Typelist&lt; Args... &gt;, Type1, Type2 &gt;</Scope>
    </TokenIdentifier>
    <Path>df/df1/structtypelist_1_1swap_3_01_typelist_3_01_args_8_8_8_01_4_00_01_type1_00_01_type2_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::swap&lt; Typelist&lt; Args... &gt;, Type1, Type2 &gt;</Scope>
    </TokenIdentifier>
    <Path>df/df1/structtypelist_1_1swap_3_01_typelist_3_01_args_8_8_8_01_4_00_01_type1_00_01_type2_01_4.html</Path>
    <Anchor>adf5e097d86cbca24589bda629be4c817</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::swap_at&lt; Typelist&lt; Args... &gt;, Index1, Index2 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::swap_at&lt; Typelist&lt; Args... &gt;, Index1, Index2 &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/deb/structtypelist_1_1swap__at_3_01_typelist_3_01_args_8_8_8_01_4_00_01_index1_00_01_index2_01_4.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>typelist::swap_at&lt; Typelist&lt; Args... &gt;, Index1, Index2 &gt;</Scope>
    </TokenIdentifier>
    <Path>d5/deb/structtypelist_1_1swap__at_3_01_typelist_3_01_args_8_8_8_01_4_00_01_index1_00_01_index2_01_4.html</Path>
    <Anchor>af3f03c262ca07830b8c7266db9b65373</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typelist::TypeErasedUnaryPredicate</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>typelist::TypeErasedUnaryPredicate</Scope>
    </TokenIdentifier>
    <Path>d3/d3d/structtypelist_1_1_type_erased_unary_predicate.html</Path>
    <DeclaredIn>TypeList_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>met</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>typelist::TypeErasedUnaryPredicate</Scope>
    </TokenIdentifier>
    <Path>d3/d3d/structtypelist_1_1_type_erased_unary_predicate.html</Path>
    <Anchor>af697cfa336effa52ecf9463da46b255c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Abstract>This namespace contains vector operations functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Anchor>ac33399716ba28116787d59c93c756862</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Anchor>af89836f48aa4300741fe2893b4db3348</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fftw_load_wisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Anchor>aa8d7bbbfd0cffda120478042af244802</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fftw_save_wisdom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Anchor>ae8b59f246bec13e6e4afd82fb117b5d2</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga4b00213256c36d9c42e8f60090d05841</Anchor>
    <Abstract>Simultaneously computes the sin and cosine of every value in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shiftAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>d9/d1a/namespacevecops.html</Path>
    <Anchor>a5263c6baf08903625d2f2c56bc51e65d</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gada8cae1f0fbf8db713e5e5b89dba8ee8</Anchor>
    <Abstract>@concept Scalar Any scalar type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Integral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga501c0a016f50af88ace6897813709129</Anchor>
    <Abstract>@concept Integral Any integral type.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga5e307f914b980a4e372a91bb46d366ab</Anchor>
    <Abstract>Fills the vector with the specified value.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga930277c1a7baf15cad3cea81282f76b5</Anchor>
    <Abstract>Fills the vector with zeroes.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga40ad5c8779f7e96372e87c5fa7889775</Anchor>
    <Abstract>Copies from one vector to another.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>ga058e37a32a17e5b0f4fd908d8aec7438</Anchor>
    <Abstract>Swaps the elements of two vectors.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::FallbackFFT</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>vecops::FallbackFFT</Scope>
    </TokenIdentifier>
    <Path>da/de1/classvecops_1_1_fallback_f_f_t.html</Path>
    <DeclaredIn>fallback_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FallbackFFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FallbackFFT</Scope>
    </TokenIdentifier>
    <Path>da/de1/classvecops_1_1_fallback_f_f_t.html</Path>
    <Anchor>a9cdb9b4d4771ae0d6fc6c27c592ecb18</Anchor>
    <DeclaredIn>fallback_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>ab5562352b686c55dd80acdb4a750c0cb</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FallbackFFT</Scope>
    </TokenIdentifier>
    <Path>da/de1/classvecops_1_1_fallback_f_f_t.html</Path>
    <Anchor>a4ce056bb1d1926ec476d11fbc5a56c70</Anchor>
    <DeclaredIn>fallback_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FallbackFFT</Scope>
    </TokenIdentifier>
    <Path>da/de1/classvecops_1_1_fallback_f_f_t.html</Path>
    <Anchor>ad4caeb48030c16f3beed8002ceb52b32</Anchor>
    <DeclaredIn>fallback_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fft_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a271a69c6f1046ab95f6697974c3bb932</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a78b9769af7390b5f3447f1862a30ef01</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::FFT</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Abstract>A class that performs an FFT.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>aa8dc647c362d59dd216d4a3d602a54a3</Anchor>
    <Abstract>Creates an FFT engine with a specified FFT size.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>aa1815db2848a2c5f923280a8aa208806</Anchor>
    <Abstract>Returns the FFT size of this engine.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>aa82e1188ef885323f29aba546ba621a9</Anchor>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>a821931a76eb03b009473eb2d4a4ad012</Anchor>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>add31b8738e186b6548653590c740c730</Anchor>
    <Abstract>Performs a forward FFT, outputting cartesian data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>ac2b4d14dcd071a2f88d14ad2ce726092</Anchor>
    <Abstract>Performs a forward FFT, outputting interleaved cartesian data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>a3f2f5f48aebee9984c22685c224fe074</Anchor>
    <Abstract>Performs a forward FFT, outputting polar data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardMagnitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>a5c03198def2ee0314ea9f3471967ffa3</Anchor>
    <Abstract>Performs a forward FFT, outputting polar magnitudes.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>a7b4f7eb4e3ae243a2472d883aa58fa85</Anchor>
    <Abstract>Performs an inverse FFT.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>ae86ca8fce404afa92b2aeff46f584404</Anchor>
    <Abstract>Performs an inverse FFT, operating on interleaved input data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inversePolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>aa0f358f033c1494c602995b8403673e5</Anchor>
    <Abstract>Performs an inverse FFT, operating on polar input data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseCepstral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFT</Scope>
    </TokenIdentifier>
    <Path>dc/d1a/classvecops_1_1_f_f_t.html</Path>
    <Anchor>a21105e81bfe44199567b4edb3e8eb444</Anchor>
    <Abstract>Performs an inverse FFT, outputting cepstral data.</Abstract>
    <DeclaredIn>limes_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::FFTImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Abstract>An implementation class for FFT.</Abstract>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>ac3dc70bfa509f41406de9c92dc98bb28</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFTImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>ae1077bbd1841d13e3af18657387d55a5</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>aa474f87499bfe9f13197d73cd15590b5</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a91e5c14dfbf546ab50de3be745d81f23</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardMagnitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a65e1864f56b560c693bba2c2d2f06719</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardPolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>ab3daa14857eedaa9718aef9328c39e63</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>ab5562352b686c55dd80acdb4a750c0cb</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a17a47f1300837365640fe501caa134fe</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseCepstral</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>abfbb372dc8fa3a6584066fa65d419e5a</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverseInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>abb5d7085787e556417f087db7bda99f3</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inversePolar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a8da241ebda8c01206a8c9b9c1386ee1a</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fft_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a271a69c6f1046ab95f6697974c3bb932</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a78b9769af7390b5f3447f1862a30ef01</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::FFTW_FFT</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>vecops::FFTW_FFT</Scope>
    </TokenIdentifier>
    <Path>d7/d65/classvecops_1_1_f_f_t_w___f_f_t.html</Path>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTW_FFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTW_FFT</Scope>
    </TokenIdentifier>
    <Path>d7/d65/classvecops_1_1_f_f_t_w___f_f_t.html</Path>
    <Anchor>a7fbca1126e319eccaba1f752b0264cc5</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFTW_FFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTW_FFT</Scope>
    </TokenIdentifier>
    <Path>d7/d65/classvecops_1_1_f_f_t_w___f_f_t.html</Path>
    <Anchor>afd26f7915cbde8f4a572c896489caf1a</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>ab5562352b686c55dd80acdb4a750c0cb</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTW_FFT</Scope>
    </TokenIdentifier>
    <Path>d7/d65/classvecops_1_1_f_f_t_w___f_f_t.html</Path>
    <Anchor>af7950f4914fdec79bbc19e2a8e74cdde</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTW_FFT</Scope>
    </TokenIdentifier>
    <Path>d7/d65/classvecops_1_1_f_f_t_w___f_f_t.html</Path>
    <Anchor>ab92f4a2f9fb88a4db262ee03dc4b155a</Anchor>
    <DeclaredIn>fftw_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fft_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a271a69c6f1046ab95f6697974c3bb932</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a78b9769af7390b5f3447f1862a30ef01</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::IPP_FFT</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>vecops::IPP_FFT</Scope>
    </TokenIdentifier>
    <Path>dd/dec/classvecops_1_1_i_p_p___f_f_t.html</Path>
    <DeclaredIn>ipp_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IPP_FFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::IPP_FFT</Scope>
    </TokenIdentifier>
    <Path>dd/dec/classvecops_1_1_i_p_p___f_f_t.html</Path>
    <Anchor>a8b198c477b2272b36968232e7eb28795</Anchor>
    <DeclaredIn>ipp_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~IPP_FFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::IPP_FFT</Scope>
    </TokenIdentifier>
    <Path>dd/dec/classvecops_1_1_i_p_p___f_f_t.html</Path>
    <Anchor>af26df99eb7b76b125cfb08bc7e9666a3</Anchor>
    <DeclaredIn>ipp_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>ab5562352b686c55dd80acdb4a750c0cb</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::IPP_FFT</Scope>
    </TokenIdentifier>
    <Path>dd/dec/classvecops_1_1_i_p_p___f_f_t.html</Path>
    <Anchor>a1448478a403f89bc88f539915f15d862</Anchor>
    <DeclaredIn>ipp_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::IPP_FFT</Scope>
    </TokenIdentifier>
    <Path>dd/dec/classvecops_1_1_i_p_p___f_f_t.html</Path>
    <Anchor>a222b8a4d5ab86833dfa657c609d55adc</Anchor>
    <DeclaredIn>ipp_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fft_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a271a69c6f1046ab95f6697974c3bb932</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a78b9769af7390b5f3447f1862a30ef01</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::ScopedFlushToZero</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>vecops::ScopedFlushToZero</Scope>
    </TokenIdentifier>
    <Path>dc/da6/classvecops_1_1_scoped_flush_to_zero.html</Path>
    <Abstract>An RAII class that enables flush to zero mode when it is constructed, and resets the flush to zero st...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedFlushToZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::ScopedFlushToZero</Scope>
    </TokenIdentifier>
    <Path>dc/da6/classvecops_1_1_scoped_flush_to_zero.html</Path>
    <Anchor>a01d3b0217db1e7e621707c026fb17149</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ScopedFlushToZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::ScopedFlushToZero</Scope>
    </TokenIdentifier>
    <Path>dc/da6/classvecops_1_1_scoped_flush_to_zero.html</Path>
    <Anchor>ab0bb778fa3da0e9c1d732a3fdd5c8108</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::ScopedNoDenormals</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>vecops::ScopedNoDenormals</Scope>
    </TokenIdentifier>
    <Path>d7/da9/classvecops_1_1_scoped_no_denormals.html</Path>
    <Abstract>An RAII class that disables denormalized numbers when it is constructed, and resets the denormalized ...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedNoDenormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::ScopedNoDenormals</Scope>
    </TokenIdentifier>
    <Path>d7/da9/classvecops_1_1_scoped_no_denormals.html</Path>
    <Anchor>a3a23ae905d35ca8f4b0998bea10ce883</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ScopedNoDenormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::ScopedNoDenormals</Scope>
    </TokenIdentifier>
    <Path>d7/da9/classvecops_1_1_scoped_no_denormals.html</Path>
    <Anchor>a22410882e19ebf61c30dd6bdc7149052</Anchor>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::vDSP_FFT</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>vecops::vDSP_FFT</Scope>
    </TokenIdentifier>
    <Path>da/d63/classvecops_1_1v_d_s_p___f_f_t.html</Path>
    <DeclaredIn>vdsp_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vDSP_FFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::vDSP_FFT</Scope>
    </TokenIdentifier>
    <Path>da/d63/classvecops_1_1v_d_s_p___f_f_t.html</Path>
    <Anchor>aa301016eef6819375444730437c38c86</Anchor>
    <DeclaredIn>vdsp_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~vDSP_FFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::vDSP_FFT</Scope>
    </TokenIdentifier>
    <Path>da/d63/classvecops_1_1v_d_s_p___f_f_t.html</Path>
    <Anchor>a55714f09ee3e5b8e510e0b9398794010</Anchor>
    <DeclaredIn>vdsp_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>ab5562352b686c55dd80acdb4a750c0cb</Anchor>
    <DeclaredIn>fft_common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_DEFAULT_MOVABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::vDSP_FFT</Scope>
    </TokenIdentifier>
    <Path>da/d63/classvecops_1_1v_d_s_p___f_f_t.html</Path>
    <Anchor>aafce1ae44c9940276db0c0f3868a3dc3</Anchor>
    <DeclaredIn>vdsp_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIMES_NON_COPYABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>vecops::vDSP_FFT</Scope>
    </TokenIdentifier>
    <Path>da/d63/classvecops_1_1v_d_s_p___f_f_t.html</Path>
    <Anchor>a9a0b1fdaf10bdec848a0e7cc8b78d190</Anchor>
    <DeclaredIn>vdsp_fft.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fft_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a271a69c6f1046ab95f6697974c3bb932</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>vecops::FFTImpl</Scope>
    </TokenIdentifier>
    <Path>dd/de6/classvecops_1_1_f_f_t_impl.html</Path>
    <Anchor>a78b9769af7390b5f3447f1862a30ef01</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::detail</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::detail</Scope>
    </TokenIdentifier>
    <Path>de/d6c/namespacevecops_1_1detail.html</Path>
    <Abstract>This namespace contains implementation details for the vecops functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>phasor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::detail</Scope>
    </TokenIdentifier>
    <Path>de/d6c/namespacevecops_1_1detail.html</Path>
    <Anchor>a5e5232ab593c761ae4a2303733e5e8cb</Anchor>
    <DeclaredIn>phasor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::exp</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::exp</Scope>
    </TokenIdentifier>
    <Path>de/d92/namespacevecops_1_1exp.html</Path>
    <Abstract>This namespace contains exponential functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::fb</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>da/d0b/namespacevecops_1_1fb.html</Path>
    <Abstract>This namespace contains raw C++ implementations of all the vecops functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga6a9e1da0d8c77f44cb0cb53b01fed2ae</Anchor>
    <Abstract>Simultaneously computes the sin and cosine of every value in the vector.</Abstract>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::fb::detail</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::fb::detail</Scope>
    </TokenIdentifier>
    <Path>d6/d2a/namespacevecops_1_1fb_1_1detail.html</Path>
    <Abstract>This namespace contains implementation details for the vecops implementations in raw C++.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>magphase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::detail</Scope>
    </TokenIdentifier>
    <Path>dc/dd4/group__limes__vecops.html</Path>
    <Anchor>gaea1c6b1db57e3b52fa898c094c459b52</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::fb::exp</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::fb::exp</Scope>
    </TokenIdentifier>
    <Path>d9/d8e/namespacevecops_1_1fb_1_1exp.html</Path>
    <Abstract>This namespace contains implementations of the exponential functions in raw C++.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::fb::log</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::fb::log</Scope>
    </TokenIdentifier>
    <Path>d8/dfc/namespacevecops_1_1fb_1_1log.html</Path>
    <Abstract>This namespace contains implementations of the logarithmic functions in raw C++.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::fb::window</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::fb::window</Scope>
    </TokenIdentifier>
    <Path>d9/d84/namespacevecops_1_1fb_1_1window.html</Path>
    <Abstract>This namespace contains the implementations of the windowing functions in raw C++.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::fb::window::detail</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>da/d91/namespacevecops_1_1fb_1_1window_1_1detail.html</Path>
    <Abstract>This namespace contains implementation details for windowing functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBlackmanSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d4/d9f/group__vec__blackman.html</Path>
    <Anchor>ga69fbe5e47a5fe48ef69348f3e254e30e</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHammSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d7/d30/group__vec__hamm.html</Path>
    <Anchor>ga0cdf0423f096eb62dedfb262fc261ed6</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHanningSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d9/d83/group__vec__hanning.html</Path>
    <Anchor>ga753a3c1ed50535df993aa994a3aa983f</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ncos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::fb::window::detail</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga8ab157fe4613e75312485819c047ab56</Anchor>
    <DeclaredIn>fallback_impl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::fft</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::fft</Scope>
    </TokenIdentifier>
    <Path>d6/dba/namespacevecops_1_1fft.html</Path>
    <Abstract>This namespace contains Fourier transform utilities.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::fftw</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::fftw</Scope>
    </TokenIdentifier>
    <Path>da/d30/namespacevecops_1_1fftw.html</Path>
    <Abstract>This namespace contains functions for controlling FFTW wisdom.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::log</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::log</Scope>
    </TokenIdentifier>
    <Path>db/d6e/namespacevecops_1_1log.html</Path>
    <Abstract>This namespace contains logarithmic functions for vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::pommier</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Abstract>This namespace contains the Pommier SIMD extension function wrappers, which call the NEON or SSE impl...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>ae61e694ce3290aeb67e28d32740f6b64</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cosAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>afa06e11e1e03755f9f3623e0165b95a6</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>a2bdb4c20e43b6d0af5a92ff6f89f6905</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polarToCartesianInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>aa98146b7302ae2ee7a8ba21c516f92e5</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinCos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>d4/de3/group__vec__trig.html</Path>
    <Anchor>ga6a9e1da0d8c77f44cb0cb53b01fed2ae</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>a5cc822ef058fdc86c87fd2952a189f50</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sineAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::pommier</Scope>
    </TokenIdentifier>
    <Path>da/d0a/namespacevecops_1_1pommier.html</Path>
    <Anchor>a3301d84627658f262038405e25d6bd40</Anchor>
    <DeclaredIn>pommier_wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecops::window</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d0/dc4/namespacevecops_1_1window.html</Path>
    <Abstract>This namespace contains windowing functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga64805b423eab6c813c81db7fbcc3fb39</Anchor>
    <Abstract>Generates a window function of the desired type , writing the output samples to a vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>ga3d3edac6f20b9509c8bed6fd6187e0e3</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector.</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyAndCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>vecops::window</Scope>
    </TokenIdentifier>
    <Path>d4/dd9/group__vec__window.html</Path>
    <Anchor>gac33355d3cea76811891aaea5c449fc48</Anchor>
    <Abstract>Applies a window function of the desired type to the samples in the vector, writing the output sample...</Abstract>
    <DeclaredIn>limes_vecops.h</DeclaredIn>
  </Token>
</Tokens>
