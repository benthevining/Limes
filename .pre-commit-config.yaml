---
# editorconfig-checker-disable
# yamllint disable rule:line-length

default_language_version:
    python: python3

repos:

  # precommit configuration meta-checks
    - repo: meta
      hooks:
          - id: check-hooks-apply
            always_run: true
          - id: check-useless-excludes
            always_run: true

  # git
    - repo: https://github.com/jorisroovers/gitlint
      rev: v0.17.0
      hooks:
          - id: gitlint
            always_run: true
    - repo: https://github.com/milin/gitown
      rev: v0.1.7
      hooks:
          - id: gitown
            args: [--codeowners_filename=.github/CODEOWNERS]
    - repo: https://github.com/mattlqx/pre-commit-sign
      rev: v1.1.3
      hooks:
          - id: sign-commit

    - repo: local
      hooks:
          - id: sort-codeowners
            name: alphabetize codeowners
            entry: scripts/alphabetize_codeowners.py
            language: python
            files: .github/CODEOWNERS

      # create build directory for linters, to read CompileCommands.json
          - id: run-cmake
            name: Run CMake
            entry: cmake -B Builds -G 'Unix Makefiles' -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
            language: system
            always_run: true
            pass_filenames: false

    # - repo: https://github.com/andreoliwa/nitpick
    #   rev: v0.32.0
    #   hooks:
    #       - id: nitpick

  # C++ code formatting & linting
    - repo: https://github.com/pocc/pre-commit-hooks
      rev: v1.3.5
      hooks:
          - id: clang-format
            args: [--no-diff, --style=file, -i]
            additional_dependencies: [clang-format]
            exclude: cmake/
          - id: cppcheck
            args: [--quiet, --inline-suppr, --std=c++20, --language=c++, --enable=warning, --enable=style, --enable=performance, --enable=portability, --suppress=unmatchedSuppression, --suppress=missingIncludeSystem, --suppress=unusedStructMember, --suppress=unreadVariable, --suppress=preprocessorErrorDirective, --suppress=unknownMacro, -DLIMES_EXPORT=, -DLIMES_NO_EXPORT=]
            exclude: cmake
          - id: cpplint
            args: [--verbose=0, '--filter=-whitespace,-legal,-build,-runtime/references,-readability/braces,-readability/todo']
            additional_dependencies: [cpplint]
      # - id: clang-tidy
      #   args: [-p=Builds]

    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v4.2.0
      hooks:
          - id: check-json
          - id: check-yaml
          - id: pretty-format-json
            args: [--autofix]

      # general
          - id: check-case-conflict
          - id: check-merge-conflict
          - id: end-of-file-fixer
            exclude_types: [cmake]
          - id: fix-byte-order-marker
          - id: mixed-line-ending
            args: [--fix=lf]
          - id: trailing-whitespace

      # shell scripts
          - id: check-executables-have-shebangs

      # Python
          - id: check-ast
          - id: check-builtin-literals
          - id: debug-statements
          - id: fix-encoding-pragma

  # license header
    - repo: https://github.com/Lucas-C/pre-commit-hooks
      rev: v1.1.13
      hooks:
          - id: insert-license
            name: Insert license header in C++ source files
            args: [--license-filepath=util/limes_header.txt, --comment-style=/*| *| */, --detect-license-in-X-top-lines=16]
            types_or: [c, c++, objective-c]
          - id: insert-license
            name: Insert license header in CMake, Python, and shell files
            args: [--license-filepath=util/limes_header.txt, --comment-style=#, --detect-license-in-X-top-lines=16]
            types_or: [cmake, python, shell]
            exclude: FindOranges.cmake

  # text and typos
    - repo: https://github.com/sirosen/texthooks
      rev: 0.3.1
      hooks:
          - id: fix-ligatures
          - id: fix-smartquotes
          - id: forbid-bidi-controls
    - repo: https://github.com/crate-ci/typos
      rev: v1.6.0
      hooks:
          - id: typos
            args: [--write-changes]
            exclude: languages.cpp|PerlinNoise.cpp|CHANGELOG.md

  # CMake
    - repo: https://github.com/cheshirekow/cmake-format-precommit
      rev: v0.6.13
      hooks:
          - id: cmake-format
            args: [--in-place]
          - id: cmake-lint

  # YAML
    - repo: https://github.com/jumanjihouse/pre-commit-hook-yamlfmt
      rev: 0.1.1
      hooks:
          - id: yamlfmt
            args: [--width, '400', --preserve-quotes]
    - repo: https://github.com/adrienverge/yamllint
      rev: v1.26.3
      hooks:
          - id: yamllint
    - repo: https://github.com/sirosen/check-jsonschema
      rev: 0.14.2
      hooks:
          - id: check-github-workflows
          - id: check-jsonschema
            name: Validate CMake presets
            files: CMakePresets.json
            types: [json]
            args: [--schemafile, "https://cmake.org/cmake/help/latest/_downloads/3e2d73bff478d88a7de0de736ba5e361/schema.json"]

  # Markdown
    - repo: https://github.com/igorshubovych/markdownlint-cli
      rev: v0.31.1
      hooks:
          - id: markdownlint-fix
            exclude: CHANGELOG.md

  # protobuf
    - repo: https://github.com/yoheimuta/protolint
      rev: v0.37.1
      hooks:
          - id: protolint
            args: [-fix]

  # check editorconfig rules
    - repo: https://github.com/editorconfig-checker/editorconfig-checker.python
      rev: 2.4.0
      hooks:
          - id: editorconfig-checker
            exclude: LICENSE

ci:
    skip: [cppcheck, gitown, check-jsonschema, run-cmake]
    autofix_commit_msg: 'style: pre-commit autofixes [skip ci]'
    autoupdate_commit_msg: 'chore: pre-commit autoupdate [skip ci]'

# yamllint enable
