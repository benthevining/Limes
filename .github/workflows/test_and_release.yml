---
name: Create release

# yamllint disable rule:line-length

on:
    workflow_dispatch:
    push:
        branches:
            - main
    schedule:
        - cron: 0 0 * * 1

defaults:
    run:
        shell: bash

jobs:

    BuildWindowsClang:
        uses: ./.github/workflows/run_build.yml
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        with:
            os: windows-latest
            cmake_preset: ninja-clang
            id_key: WindowsClang


    BuildWindowsMSVC:
        uses: ./.github/workflows/run_build.yml
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        with:
            os: windows-latest
            cmake_generator: Visual Studio 17 2022
            id_key: WindowsMSVC


    BuildLinuxClang:
        uses: ./.github/workflows/run_build.yml
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        with:
            os: ubuntu-latest
            cmake_preset: ninja-clang
            id_key: LinuxClang


    BuildLinuxGCC:
        uses: ./.github/workflows/run_build.yml
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        with:
            os: ubuntu-latest
            cmake_preset: ninja-gcc
            id_key: LinuxGCC


    BuildMacGCC:
        uses: ./.github/workflows/run_build.yml
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        with:
            os: macos-latest
            cmake_preset: ninja-gcc
            id_key: MacGCC


    BuildMacXcode:
        uses: ./.github/workflows/run_build.yml
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        with:
            os: macos-latest
            cmake_generator: Xcode
            id_key: MacXcode


    Build_iOS:
        uses: ./.github/workflows/run_build.yml
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        with:
            cmake_preset: iOS
            cmake_generator: Xcode
            id_key: iOS
            os: macos-latest


    Build_tvOS:
        uses: ./.github/workflows/run_build.yml
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        with:
            cmake_preset: tvOS
            cmake_generator: Xcode
            id_key: tvOS
            os: macos-latest


    Build_watchOS:
        uses: ./.github/workflows/run_build.yml
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        with:
            cmake_preset: watchOS
            cmake_generator: Xcode
            id_key: watchOS
            os: macos-latest


    Release:

        name: Create release
        runs-on: ubuntu-latest
        needs: [BuildWindowsClang, BuildWindowsMSVC, BuildLinuxClang, BuildLinuxGCC, BuildMacGCC, BuildMacXcode, Build_iOS, Build_tvOS, Build_watchOS]
        timeout-minutes: 20

        steps:

            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  submodules: recursive
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v3.4.0
              with:
                  node-version: lts/*

            - name: Install dependencies
              run: npm install

            - name: Install dependencies
              run: pip install --upgrade bumpversion

            - name: Download artefacts
              uses: actions/download-artifact@v3
              with:
                  path: '${{ github.workspace }}/stage'

            - name: Zip artefacts
              run: bash '${{ github.workspace }}/.github/zip_all.sh'

            - name: Run semantic release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: npx semantic-release
